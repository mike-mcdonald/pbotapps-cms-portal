{"version":3,"sources":["webpack://rain/./node_modules/alpinejs/dist/alpine.js","webpack://rain/./icons/chevron-down.svg","webpack://rain/./icons/info.svg","webpack://rain/./icons/more-vertical.svg","webpack://rain/./icons/move.svg","webpack://rain/webpack/bootstrap","webpack://rain/webpack/runtime/compat get default export","webpack://rain/webpack/runtime/define property getters","webpack://rain/webpack/runtime/hasOwnProperty shorthand","webpack://rain/webpack/runtime/make namespace object","webpack://rain/./js/src/alpine.es6.js","webpack://rain/./js/src/cshs.es6.js","webpack://rain/./js/src/dropbutton.es6.js","webpack://rain/./js/src/simpler-select.es6.js","webpack://rain/./js/src/tabledrag.es6.js","webpack://rain/./scss/style.scss?f772"],"names":["$","Drupal","behaviors","cshs","attach","context","settings","once","each","idx","element","id","simplerSelect","jQuery","DropButton","dropbutton","options","extend","title","t","$dropbutton","$list","find","$actions","length","$primary","slice","$secondary","addClass","append","theme","on","proxy","hoverOut","hoverIn","focusOut","focusIn","dropbuttonClickHandler","e","preventDefault","target","closest","toggleClass","dropButton","$dropbuttons","$body","il","i","dropbuttons","push","prototype","toggle","show","isBool","hasClass","timerID","window","clearTimeout","setTimeout","open","close","call","dropbuttonToggle","dropbuttonClasses","join","moreVertical","pluginName","defaults","noneLabel","noneValue","labels","Plugin","$element","$currentSelect","selectOptions","init","that","destroy","$option","value","val","label","text","parent","data","children","tree","buildTree","initialValue","initialParents","$selectElement","createSelect","shift","getAllParents","reverse","after","selectSetValue","$nextSelect","getOptionInfoByValue","hide","nextAll","remove","level","required","attr","wrapperClasses","chevronClasses","chevronElement","chevronDown","selectClasses","selectElement","$select","$wrapper","option","replace","change","selectRemoveNext","$selected","selectedValue","parentValue","undefined","optionInfo","addSelectAfter","selectGetLevel","array","grep","child","parents","$newSelect","getOptionByValue","fn","drupalSettings","showWeight","JSON","parse","localStorage","getItem","tableDrag","initTableDrag","table","base","Object","keys","forEach","tableSettings","self","$table","dragObject","rowObject","oldRowElement","oldY","changed","maxDepth","rtl","css","striping","scrollSettings","amount","interval","trigger","scrollInterval","scrollY","windowHeight","indentEnabled","group","n","relationship","limit","indentCount","indent","testRow","appendTo","testCell","prepend","$indentation","indentAmount","get","offsetLeft","makeDraggable","buttonClasses","before","toggleColumns","wrap","initColumns","document","event","dragRow","originalEvent","touches","dropRow","key","newValue","displayColumns","hidden","cell","columnIndex","some","tableSetting","field","eq","index","addColspanClass","$row","cells","colSpan","filter","displayWeight","showColumns","hideColumns","findOnce","setItem","removeItem","$tables","rowSettings","row","tableSettingsGroup","map","delta","targetClass","is","rowSetting","item","$item","handleClasses","handle","move","$indentationLast","Math","max","type","dragStart","safeBlur","keyCode","keyChange","groupHeight","$previousRow","prev","previousRow","direction","offsetHeight","swap","scrollBy","tBodies","rows","parseInt","$nextRow","next","nextRow","nextGroup","nextGroupRow","removeClass","restripeTable","onDrag","initOffset","getPointerOffset","initPointerCoords","pointerCoords","indentPointerPos","topY","offset","top","bottomY","dragClasses","currentPointerCoords","y","x","scrollAmount","checkScroll","clearInterval","setScroll","currentRow","findDropTargetRow","xDiff","indentDiff","round","indentChange","indents","droppedRow","$droppedRow","updateFields","updateField","markChanged","insertBefore","fadeIn","removeIndentClasses","onDrop","pageX","pageY","clientX","body","scrollLeft","clientLeft","clientY","scrollTop","clientTop","docPos","pointerPos","left","not","rowY","rowHeight","firstChild","o","isValidSwap","changedRow","$changedRow","sourceRow","useSibling","copyDragClasses","source","targetElement","sourceClass","sourceElement","action","siblings","findSiblings","values","maxVal","weight","targetRow","className","cursorY","de","documentElement","b","innerHeight","clientHeight","clientWidth","all","pageYOffset","setInterval","aboveTable","belowTable","end","tableRow","method","addClasses","$tableRow","groupDepth","findChildren","merge","parentIndentation","rowIndentation","indentNum","el","prevRow","validIndentInterval","min","position","detachBehaviors","attachBehaviors","onSwap","$prevRow","maxIndent","minIndent","$group","abs","onIndent","directions","checkRowIndentation","d","checkRow","marker","swappedRow","tableDragChangedMarker","markerClasses","info","tableDragIndentation","tableDragChangedWarning","warningClasses"],"mappings":";;;;;;;;;AAAA;AACA,EAAE,KAA4D;AAC9D,EAAE,CACoD;AACtD,CAAC,qBAAqB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,sBAAsB;AACzC;;AAEA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,UAAU,8FAA8F,UAAU;AACjJ,KAAK;AACL,mDAAmD,UAAU;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,MAAM,oBAAoB,WAAW;;AAExE;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,gFAAgF;AAChF;AACA;AACA;AACA;;AAEA,qGAAqG,cAAc,qBAAqB,WAAW,GAAG;AACtJ,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,wFAAwF;AACxF;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gEAAgE;AAChE;AACA;AACA;;AAEA;AACA,2HAA2H,UAAU,WAAW,EAAE;;AAElJ;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA,+HAA+H,GAAG,WAAW,EAAE;AAC/I,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF;;AAEvF;;AAEA;AACA,oFAAoF;;AAEpF;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,yDAAyD;;AAEzD;AACA,yCAAyC;;AAEzC;AACA,iGAAiG;;AAEjG;AACA,sDAAsD;AACtD,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;;AAEA;AACA;AACA,uDAAuD;;AAEvD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA,0DAA0D;;AAE1D;AACA;AACA,uEAAuE;AACvE;AACA;;AAEA;AACA;AACA;AACA,2DAA2D,8BAA8B;AACzF,OAAO;;AAEP;AACA;AACA;AACA,yCAAyC,4BAA4B;AACrE;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA,2DAA2D,+BAA+B;AAC1F,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,6EAA6E;AAC7E;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4HAA4H;;AAE5H;AACA;AACA;AACA;AACA,8GAA8G;;AAE9G;AACA,uEAAuE;;AAEvE,qCAAqC,UAAU;AAC/C;AACA,mEAAmE;AACnE,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,GAAG;;AAEH;AACA,gCAAgC,eAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;;AAEA;AACA,oGAAoG;;AAEpG;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,uFAAuF;;AAEvF;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB;;AAExB,iDAAiD;;AAEjD,yDAAyD;AACzD;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,UAAU;AACjB;AACA;AACA;;AAEA;AACA;;AAEA;AACA,+FAA+F;;AAE/F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL,8EAA8E;;AAE9E;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA,wBAAwB;AACxB,OAAO;AACP;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX,SAAS;AACT,0BAA0B;AAC1B;AACA;AACA,MAAM;AACN;AACA;AACA;;;AAGA;AACA,yCAAyC;AACzC;AACA,KAAK;AACL;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kDAAkD,UAAU;AAC5D;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO,UAAU;AACjB;AACA;;AAEA,uFAAuF;AACvF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,0CAA0C;;AAE1C,8DAA8D;AAC9D;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,4DAA4D;AAC5D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,6CAA6C,kBAAkB;AAC/D;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;;AAGL,gDAAgD;;AAEhD,4FAA4F;;AAE5F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B,OAAO,EAAE;;AAET;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC,WAAW,mCAAmC,WAAW;AAC3F;AACA,6CAA6C,kBAAkB;AAC/D;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS,UAAU;AACnB,SAAS,+OAA+O;AACxP,SAAS,uDAAuD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,2BAA2B;AAC5C;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA,iBAAiB,4BAA4B,eAAe,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,4BAA4B,eAAe,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,4BAA4B,gBAAgB,EAAE;AAC/D;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,2BAA2B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA,iBAAiB,2BAA2B;AAC5C,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,2BAA2B;AAC5C;AACA;AACA;AACA;AACA;AACA,iBAAiB,2BAA2B;AAC5C,iBAAiB,eAAe;AAChC,iBAAiB,eAAe;AAChC;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,2BAA2B;AAC5C;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,4BAA4B,gBAAgB,EAAE;AAC/D;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA,iBAAiB,2BAA2B;AAC5C,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,kEAAkE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,eAAe;AACzE;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,0DAA0D,eAAe;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,KAAK;AACnD;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,+BAA+B;AAC/B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,uDAAuD,KAAK;AAC5D;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA;AACA;AACA,+BAA+B;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;;AAGA,gDAAgD,qBAAqB;AACrE;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iEAAiE;AACjE;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA,iEAAiE;AACjE;;AAEA,8EAA8E;AAC9E;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb,WAAW;AACX,SAAS;;;AAGT;AACA;AACA,OAAO;AACP;;AAEA,oFAAoF;AACpF;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;;AAEzD;AACA;AACA;;AAEA;AACA,OAAO;AACP;;AAEA,mDAAmD;AACnD;AACA;AACA,uDAAuD;;AAEvD;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT,OAAO,0BAA0B;AACjC;AACA,OAAO,EAAE;;AAET;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA,iEAAiE;AACjE,mFAAmF,kBAAkB;AACrG;AACA,OAAO;AACP;;AAEA,kEAAkE;AAClE,2FAA2F,kBAAkB;AAC7G;AACA,OAAO;AACP;;AAEA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;;AAEA;AACA,2EAA2E;AAC3E;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA,OAAO;AACP;;AAEA;;AAEA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO,EAAE;AACT;;AAEA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA,8CAA8C;AAC9C;;AAEA;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb;AACA;AACA,OAAO;AACP;AACA,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","file":"js/main.bundle.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Alpine = factory());\n}(this, (function () { 'use strict';\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      if (enumerableOnly) symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n      keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n\n      if (i % 2) {\n        ownKeys(Object(source), true).forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n\n    return target;\n  }\n\n  // Thanks @stimulus:\n  // https://github.com/stimulusjs/stimulus/blob/master/packages/%40stimulus/core/src/application.ts\n  function domReady() {\n    return new Promise(resolve => {\n      if (document.readyState == \"loading\") {\n        document.addEventListener(\"DOMContentLoaded\", resolve);\n      } else {\n        resolve();\n      }\n    });\n  }\n  function arrayUnique(array) {\n    return Array.from(new Set(array));\n  }\n  function isTesting() {\n    return navigator.userAgent.includes(\"Node.js\") || navigator.userAgent.includes(\"jsdom\");\n  }\n  function checkedAttrLooseCompare(valueA, valueB) {\n    return valueA == valueB;\n  }\n  function warnIfMalformedTemplate(el, directive) {\n    if (el.tagName.toLowerCase() !== 'template') {\n      console.warn(`Alpine: [${directive}] directive should only be added to <template> tags. See https://github.com/alpinejs/alpine#${directive}`);\n    } else if (el.content.childElementCount !== 1) {\n      console.warn(`Alpine: <template> tag with [${directive}] encountered with an unexpected number of root elements. Make sure <template> has a single root element. `);\n    }\n  }\n  function kebabCase(subject) {\n    return subject.replace(/([a-z])([A-Z])/g, '$1-$2').replace(/[_\\s]/, '-').toLowerCase();\n  }\n  function camelCase(subject) {\n    return subject.toLowerCase().replace(/-(\\w)/g, (match, char) => char.toUpperCase());\n  }\n  function walk(el, callback) {\n    if (callback(el) === false) return;\n    let node = el.firstElementChild;\n\n    while (node) {\n      walk(node, callback);\n      node = node.nextElementSibling;\n    }\n  }\n  function debounce(func, wait) {\n    var timeout;\n    return function () {\n      var context = this,\n          args = arguments;\n\n      var later = function later() {\n        timeout = null;\n        func.apply(context, args);\n      };\n\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  }\n\n  const handleError = (el, expression, error) => {\n    console.warn(`Alpine Error: \"${error}\"\\n\\nExpression: \"${expression}\"\\nElement:`, el);\n\n    if (!isTesting()) {\n      Object.assign(error, {\n        el,\n        expression\n      });\n      throw error;\n    }\n  };\n\n  function tryCatch(cb, {\n    el,\n    expression\n  }) {\n    try {\n      const value = cb();\n      return value instanceof Promise ? value.catch(e => handleError(el, expression, e)) : value;\n    } catch (e) {\n      handleError(el, expression, e);\n    }\n  }\n\n  function saferEval(el, expression, dataContext, additionalHelperVariables = {}) {\n    return tryCatch(() => {\n      if (typeof expression === 'function') {\n        return expression.call(dataContext);\n      }\n\n      return new Function(['$data', ...Object.keys(additionalHelperVariables)], `var __alpine_result; with($data) { __alpine_result = ${expression} }; return __alpine_result`)(dataContext, ...Object.values(additionalHelperVariables));\n    }, {\n      el,\n      expression\n    });\n  }\n  function saferEvalNoReturn(el, expression, dataContext, additionalHelperVariables = {}) {\n    return tryCatch(() => {\n      if (typeof expression === 'function') {\n        return Promise.resolve(expression.call(dataContext, additionalHelperVariables['$event']));\n      }\n\n      let AsyncFunction = Function;\n      /* MODERN-ONLY:START */\n\n      AsyncFunction = Object.getPrototypeOf(async function () {}).constructor;\n      /* MODERN-ONLY:END */\n      // For the cases when users pass only a function reference to the caller: `x-on:click=\"foo\"`\n      // Where \"foo\" is a function. Also, we'll pass the function the event instance when we call it.\n\n      if (Object.keys(dataContext).includes(expression)) {\n        let methodReference = new Function(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { return ${expression} }`)(dataContext, ...Object.values(additionalHelperVariables));\n\n        if (typeof methodReference === 'function') {\n          return Promise.resolve(methodReference.call(dataContext, additionalHelperVariables['$event']));\n        } else {\n          return Promise.resolve();\n        }\n      }\n\n      return Promise.resolve(new AsyncFunction(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { ${expression} }`)(dataContext, ...Object.values(additionalHelperVariables)));\n    }, {\n      el,\n      expression\n    });\n  }\n  const xAttrRE = /^x-(on|bind|data|text|html|model|if|for|show|cloak|transition|ref|spread)\\b/;\n  function isXAttr(attr) {\n    const name = replaceAtAndColonWithStandardSyntax(attr.name);\n    return xAttrRE.test(name);\n  }\n  function getXAttrs(el, component, type) {\n    let directives = Array.from(el.attributes).filter(isXAttr).map(parseHtmlAttribute); // Get an object of directives from x-spread.\n\n    let spreadDirective = directives.filter(directive => directive.type === 'spread')[0];\n\n    if (spreadDirective) {\n      let spreadObject = saferEval(el, spreadDirective.expression, component.$data); // Add x-spread directives to the pile of existing directives.\n\n      directives = directives.concat(Object.entries(spreadObject).map(([name, value]) => parseHtmlAttribute({\n        name,\n        value\n      })));\n    }\n\n    if (type) return directives.filter(i => i.type === type);\n    return sortDirectives(directives);\n  }\n\n  function sortDirectives(directives) {\n    let directiveOrder = ['bind', 'model', 'show', 'catch-all'];\n    return directives.sort((a, b) => {\n      let typeA = directiveOrder.indexOf(a.type) === -1 ? 'catch-all' : a.type;\n      let typeB = directiveOrder.indexOf(b.type) === -1 ? 'catch-all' : b.type;\n      return directiveOrder.indexOf(typeA) - directiveOrder.indexOf(typeB);\n    });\n  }\n\n  function parseHtmlAttribute({\n    name,\n    value\n  }) {\n    const normalizedName = replaceAtAndColonWithStandardSyntax(name);\n    const typeMatch = normalizedName.match(xAttrRE);\n    const valueMatch = normalizedName.match(/:([a-zA-Z0-9\\-:]+)/);\n    const modifiers = normalizedName.match(/\\.[^.\\]]+(?=[^\\]]*$)/g) || [];\n    return {\n      type: typeMatch ? typeMatch[1] : null,\n      value: valueMatch ? valueMatch[1] : null,\n      modifiers: modifiers.map(i => i.replace('.', '')),\n      expression: value\n    };\n  }\n  function isBooleanAttr(attrName) {\n    // As per HTML spec table https://html.spec.whatwg.org/multipage/indices.html#attributes-3:boolean-attribute\n    // Array roughly ordered by estimated usage\n    const booleanAttributes = ['disabled', 'checked', 'required', 'readonly', 'hidden', 'open', 'selected', 'autofocus', 'itemscope', 'multiple', 'novalidate', 'allowfullscreen', 'allowpaymentrequest', 'formnovalidate', 'autoplay', 'controls', 'loop', 'muted', 'playsinline', 'default', 'ismap', 'reversed', 'async', 'defer', 'nomodule'];\n    return booleanAttributes.includes(attrName);\n  }\n  function replaceAtAndColonWithStandardSyntax(name) {\n    if (name.startsWith('@')) {\n      return name.replace('@', 'x-on:');\n    } else if (name.startsWith(':')) {\n      return name.replace(':', 'x-bind:');\n    }\n\n    return name;\n  }\n  function convertClassStringToArray(classList, filterFn = Boolean) {\n    return classList.split(' ').filter(filterFn);\n  }\n  const TRANSITION_TYPE_IN = 'in';\n  const TRANSITION_TYPE_OUT = 'out';\n  const TRANSITION_CANCELLED = 'cancelled';\n  function transitionIn(el, show, reject, component, forceSkip = false) {\n    // We don't want to transition on the initial page load.\n    if (forceSkip) return show();\n\n    if (el.__x_transition && el.__x_transition.type === TRANSITION_TYPE_IN) {\n      // there is already a similar transition going on, this was probably triggered by\n      // a change in a different property, let's just leave the previous one doing its job\n      return;\n    }\n\n    const attrs = getXAttrs(el, component, 'transition');\n    const showAttr = getXAttrs(el, component, 'show')[0]; // If this is triggered by a x-show.transition.\n\n    if (showAttr && showAttr.modifiers.includes('transition')) {\n      let modifiers = showAttr.modifiers; // If x-show.transition.out, we'll skip the \"in\" transition.\n\n      if (modifiers.includes('out') && !modifiers.includes('in')) return show();\n      const settingBothSidesOfTransition = modifiers.includes('in') && modifiers.includes('out'); // If x-show.transition.in...out... only use \"in\" related modifiers for this transition.\n\n      modifiers = settingBothSidesOfTransition ? modifiers.filter((i, index) => index < modifiers.indexOf('out')) : modifiers;\n      transitionHelperIn(el, modifiers, show, reject); // Otherwise, we can assume x-transition:enter.\n    } else if (attrs.some(attr => ['enter', 'enter-start', 'enter-end'].includes(attr.value))) {\n      transitionClassesIn(el, component, attrs, show, reject);\n    } else {\n      // If neither, just show that damn thing.\n      show();\n    }\n  }\n  function transitionOut(el, hide, reject, component, forceSkip = false) {\n    // We don't want to transition on the initial page load.\n    if (forceSkip) return hide();\n\n    if (el.__x_transition && el.__x_transition.type === TRANSITION_TYPE_OUT) {\n      // there is already a similar transition going on, this was probably triggered by\n      // a change in a different property, let's just leave the previous one doing its job\n      return;\n    }\n\n    const attrs = getXAttrs(el, component, 'transition');\n    const showAttr = getXAttrs(el, component, 'show')[0];\n\n    if (showAttr && showAttr.modifiers.includes('transition')) {\n      let modifiers = showAttr.modifiers;\n      if (modifiers.includes('in') && !modifiers.includes('out')) return hide();\n      const settingBothSidesOfTransition = modifiers.includes('in') && modifiers.includes('out');\n      modifiers = settingBothSidesOfTransition ? modifiers.filter((i, index) => index > modifiers.indexOf('out')) : modifiers;\n      transitionHelperOut(el, modifiers, settingBothSidesOfTransition, hide, reject);\n    } else if (attrs.some(attr => ['leave', 'leave-start', 'leave-end'].includes(attr.value))) {\n      transitionClassesOut(el, component, attrs, hide, reject);\n    } else {\n      hide();\n    }\n  }\n  function transitionHelperIn(el, modifiers, showCallback, reject) {\n    // Default values inspired by: https://material.io/design/motion/speed.html#duration\n    const styleValues = {\n      duration: modifierValue(modifiers, 'duration', 150),\n      origin: modifierValue(modifiers, 'origin', 'center'),\n      first: {\n        opacity: 0,\n        scale: modifierValue(modifiers, 'scale', 95)\n      },\n      second: {\n        opacity: 1,\n        scale: 100\n      }\n    };\n    transitionHelper(el, modifiers, showCallback, () => {}, reject, styleValues, TRANSITION_TYPE_IN);\n  }\n  function transitionHelperOut(el, modifiers, settingBothSidesOfTransition, hideCallback, reject) {\n    // Make the \"out\" transition .5x slower than the \"in\". (Visually better)\n    // HOWEVER, if they explicitly set a duration for the \"out\" transition,\n    // use that.\n    const duration = settingBothSidesOfTransition ? modifierValue(modifiers, 'duration', 150) : modifierValue(modifiers, 'duration', 150) / 2;\n    const styleValues = {\n      duration: duration,\n      origin: modifierValue(modifiers, 'origin', 'center'),\n      first: {\n        opacity: 1,\n        scale: 100\n      },\n      second: {\n        opacity: 0,\n        scale: modifierValue(modifiers, 'scale', 95)\n      }\n    };\n    transitionHelper(el, modifiers, () => {}, hideCallback, reject, styleValues, TRANSITION_TYPE_OUT);\n  }\n\n  function modifierValue(modifiers, key, fallback) {\n    // If the modifier isn't present, use the default.\n    if (modifiers.indexOf(key) === -1) return fallback; // If it IS present, grab the value after it: x-show.transition.duration.500ms\n\n    const rawValue = modifiers[modifiers.indexOf(key) + 1];\n    if (!rawValue) return fallback;\n\n    if (key === 'scale') {\n      // Check if the very next value is NOT a number and return the fallback.\n      // If x-show.transition.scale, we'll use the default scale value.\n      // That is how a user opts out of the opacity transition.\n      if (!isNumeric(rawValue)) return fallback;\n    }\n\n    if (key === 'duration') {\n      // Support x-show.transition.duration.500ms && duration.500\n      let match = rawValue.match(/([0-9]+)ms/);\n      if (match) return match[1];\n    }\n\n    if (key === 'origin') {\n      // Support chaining origin directions: x-show.transition.top.right\n      if (['top', 'right', 'left', 'center', 'bottom'].includes(modifiers[modifiers.indexOf(key) + 2])) {\n        return [rawValue, modifiers[modifiers.indexOf(key) + 2]].join(' ');\n      }\n    }\n\n    return rawValue;\n  }\n\n  function transitionHelper(el, modifiers, hook1, hook2, reject, styleValues, type) {\n    // clear the previous transition if exists to avoid caching the wrong styles\n    if (el.__x_transition) {\n      el.__x_transition.cancel && el.__x_transition.cancel();\n    } // If the user set these style values, we'll put them back when we're done with them.\n\n\n    const opacityCache = el.style.opacity;\n    const transformCache = el.style.transform;\n    const transformOriginCache = el.style.transformOrigin; // If no modifiers are present: x-show.transition, we'll default to both opacity and scale.\n\n    const noModifiers = !modifiers.includes('opacity') && !modifiers.includes('scale');\n    const transitionOpacity = noModifiers || modifiers.includes('opacity');\n    const transitionScale = noModifiers || modifiers.includes('scale'); // These are the explicit stages of a transition (same stages for in and for out).\n    // This way you can get a birds eye view of the hooks, and the differences\n    // between them.\n\n    const stages = {\n      start() {\n        if (transitionOpacity) el.style.opacity = styleValues.first.opacity;\n        if (transitionScale) el.style.transform = `scale(${styleValues.first.scale / 100})`;\n      },\n\n      during() {\n        if (transitionScale) el.style.transformOrigin = styleValues.origin;\n        el.style.transitionProperty = [transitionOpacity ? `opacity` : ``, transitionScale ? `transform` : ``].join(' ').trim();\n        el.style.transitionDuration = `${styleValues.duration / 1000}s`;\n        el.style.transitionTimingFunction = `cubic-bezier(0.4, 0.0, 0.2, 1)`;\n      },\n\n      show() {\n        hook1();\n      },\n\n      end() {\n        if (transitionOpacity) el.style.opacity = styleValues.second.opacity;\n        if (transitionScale) el.style.transform = `scale(${styleValues.second.scale / 100})`;\n      },\n\n      hide() {\n        hook2();\n      },\n\n      cleanup() {\n        if (transitionOpacity) el.style.opacity = opacityCache;\n        if (transitionScale) el.style.transform = transformCache;\n        if (transitionScale) el.style.transformOrigin = transformOriginCache;\n        el.style.transitionProperty = null;\n        el.style.transitionDuration = null;\n        el.style.transitionTimingFunction = null;\n      }\n\n    };\n    transition(el, stages, type, reject);\n  }\n\n  const ensureStringExpression = (expression, el, component) => {\n    return typeof expression === 'function' ? component.evaluateReturnExpression(el, expression) : expression;\n  };\n\n  function transitionClassesIn(el, component, directives, showCallback, reject) {\n    const enter = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'enter') || {\n      expression: ''\n    }).expression, el, component));\n    const enterStart = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'enter-start') || {\n      expression: ''\n    }).expression, el, component));\n    const enterEnd = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'enter-end') || {\n      expression: ''\n    }).expression, el, component));\n    transitionClasses(el, enter, enterStart, enterEnd, showCallback, () => {}, TRANSITION_TYPE_IN, reject);\n  }\n  function transitionClassesOut(el, component, directives, hideCallback, reject) {\n    const leave = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'leave') || {\n      expression: ''\n    }).expression, el, component));\n    const leaveStart = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'leave-start') || {\n      expression: ''\n    }).expression, el, component));\n    const leaveEnd = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'leave-end') || {\n      expression: ''\n    }).expression, el, component));\n    transitionClasses(el, leave, leaveStart, leaveEnd, () => {}, hideCallback, TRANSITION_TYPE_OUT, reject);\n  }\n  function transitionClasses(el, classesDuring, classesStart, classesEnd, hook1, hook2, type, reject) {\n    // clear the previous transition if exists to avoid caching the wrong classes\n    if (el.__x_transition) {\n      el.__x_transition.cancel && el.__x_transition.cancel();\n    }\n\n    const originalClasses = el.__x_original_classes || [];\n    const stages = {\n      start() {\n        el.classList.add(...classesStart);\n      },\n\n      during() {\n        el.classList.add(...classesDuring);\n      },\n\n      show() {\n        hook1();\n      },\n\n      end() {\n        // Don't remove classes that were in the original class attribute.\n        el.classList.remove(...classesStart.filter(i => !originalClasses.includes(i)));\n        el.classList.add(...classesEnd);\n      },\n\n      hide() {\n        hook2();\n      },\n\n      cleanup() {\n        el.classList.remove(...classesDuring.filter(i => !originalClasses.includes(i)));\n        el.classList.remove(...classesEnd.filter(i => !originalClasses.includes(i)));\n      }\n\n    };\n    transition(el, stages, type, reject);\n  }\n  function transition(el, stages, type, reject) {\n    const finish = once(() => {\n      stages.hide(); // Adding an \"isConnected\" check, in case the callback\n      // removed the element from the DOM.\n\n      if (el.isConnected) {\n        stages.cleanup();\n      }\n\n      delete el.__x_transition;\n    });\n    el.__x_transition = {\n      // Set transition type so we can avoid clearing transition if the direction is the same\n      type: type,\n      // create a callback for the last stages of the transition so we can call it\n      // from different point and early terminate it. Once will ensure that function\n      // is only called one time.\n      cancel: once(() => {\n        reject(TRANSITION_CANCELLED);\n        finish();\n      }),\n      finish,\n      // This store the next animation frame so we can cancel it\n      nextFrame: null\n    };\n    stages.start();\n    stages.during();\n    el.__x_transition.nextFrame = requestAnimationFrame(() => {\n      // Note: Safari's transitionDuration property will list out comma separated transition durations\n      // for every single transition property. Let's grab the first one and call it a day.\n      let duration = Number(getComputedStyle(el).transitionDuration.replace(/,.*/, '').replace('s', '')) * 1000;\n\n      if (duration === 0) {\n        duration = Number(getComputedStyle(el).animationDuration.replace('s', '')) * 1000;\n      }\n\n      stages.show();\n      el.__x_transition.nextFrame = requestAnimationFrame(() => {\n        stages.end();\n        setTimeout(el.__x_transition.finish, duration);\n      });\n    });\n  }\n  function isNumeric(subject) {\n    return !Array.isArray(subject) && !isNaN(subject);\n  } // Thanks @vuejs\n  // https://github.com/vuejs/vue/blob/4de4649d9637262a9b007720b59f80ac72a5620c/src/shared/util.js\n\n  function once(callback) {\n    let called = false;\n    return function () {\n      if (!called) {\n        called = true;\n        callback.apply(this, arguments);\n      }\n    };\n  }\n\n  function handleForDirective(component, templateEl, expression, initialUpdate, extraVars) {\n    warnIfMalformedTemplate(templateEl, 'x-for');\n    let iteratorNames = typeof expression === 'function' ? parseForExpression(component.evaluateReturnExpression(templateEl, expression)) : parseForExpression(expression);\n    let items = evaluateItemsAndReturnEmptyIfXIfIsPresentAndFalseOnElement(component, templateEl, iteratorNames, extraVars); // As we walk the array, we'll also walk the DOM (updating/creating as we go).\n\n    let currentEl = templateEl;\n    items.forEach((item, index) => {\n      let iterationScopeVariables = getIterationScopeVariables(iteratorNames, item, index, items, extraVars());\n      let currentKey = generateKeyForIteration(component, templateEl, index, iterationScopeVariables);\n      let nextEl = lookAheadForMatchingKeyedElementAndMoveItIfFound(currentEl.nextElementSibling, currentKey); // If we haven't found a matching key, insert the element at the current position.\n\n      if (!nextEl) {\n        nextEl = addElementInLoopAfterCurrentEl(templateEl, currentEl); // And transition it in if it's not the first page load.\n\n        transitionIn(nextEl, () => {}, () => {}, component, initialUpdate);\n        nextEl.__x_for = iterationScopeVariables;\n        component.initializeElements(nextEl, () => nextEl.__x_for); // Otherwise update the element we found.\n      } else {\n        // Temporarily remove the key indicator to allow the normal \"updateElements\" to work.\n        delete nextEl.__x_for_key;\n        nextEl.__x_for = iterationScopeVariables;\n        component.updateElements(nextEl, () => nextEl.__x_for);\n      }\n\n      currentEl = nextEl;\n      currentEl.__x_for_key = currentKey;\n    });\n    removeAnyLeftOverElementsFromPreviousUpdate(currentEl, component);\n  } // This was taken from VueJS 2.* core. Thanks Vue!\n\n  function parseForExpression(expression) {\n    let forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\n    let stripParensRE = /^\\(|\\)$/g;\n    let forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\n    let inMatch = String(expression).match(forAliasRE);\n    if (!inMatch) return;\n    let res = {};\n    res.items = inMatch[2].trim();\n    let item = inMatch[1].trim().replace(stripParensRE, '');\n    let iteratorMatch = item.match(forIteratorRE);\n\n    if (iteratorMatch) {\n      res.item = item.replace(forIteratorRE, '').trim();\n      res.index = iteratorMatch[1].trim();\n\n      if (iteratorMatch[2]) {\n        res.collection = iteratorMatch[2].trim();\n      }\n    } else {\n      res.item = item;\n    }\n\n    return res;\n  }\n\n  function getIterationScopeVariables(iteratorNames, item, index, items, extraVars) {\n    // We must create a new object, so each iteration has a new scope\n    let scopeVariables = extraVars ? _objectSpread2({}, extraVars) : {};\n    scopeVariables[iteratorNames.item] = item;\n    if (iteratorNames.index) scopeVariables[iteratorNames.index] = index;\n    if (iteratorNames.collection) scopeVariables[iteratorNames.collection] = items;\n    return scopeVariables;\n  }\n\n  function generateKeyForIteration(component, el, index, iterationScopeVariables) {\n    let bindKeyAttribute = getXAttrs(el, component, 'bind').filter(attr => attr.value === 'key')[0]; // If the dev hasn't specified a key, just return the index of the iteration.\n\n    if (!bindKeyAttribute) return index;\n    return component.evaluateReturnExpression(el, bindKeyAttribute.expression, () => iterationScopeVariables);\n  }\n\n  function evaluateItemsAndReturnEmptyIfXIfIsPresentAndFalseOnElement(component, el, iteratorNames, extraVars) {\n    let ifAttribute = getXAttrs(el, component, 'if')[0];\n\n    if (ifAttribute && !component.evaluateReturnExpression(el, ifAttribute.expression)) {\n      return [];\n    }\n\n    let items = component.evaluateReturnExpression(el, iteratorNames.items, extraVars); // This adds support for the `i in n` syntax.\n\n    if (isNumeric(items) && items >= 0) {\n      items = Array.from(Array(items).keys(), i => i + 1);\n    }\n\n    return items;\n  }\n\n  function addElementInLoopAfterCurrentEl(templateEl, currentEl) {\n    let clone = document.importNode(templateEl.content, true);\n    currentEl.parentElement.insertBefore(clone, currentEl.nextElementSibling);\n    return currentEl.nextElementSibling;\n  }\n\n  function lookAheadForMatchingKeyedElementAndMoveItIfFound(nextEl, currentKey) {\n    if (!nextEl) return; // If we are already past the x-for generated elements, we don't need to look ahead.\n\n    if (nextEl.__x_for_key === undefined) return; // If the the key's DO match, no need to look ahead.\n\n    if (nextEl.__x_for_key === currentKey) return nextEl; // If they don't, we'll look ahead for a match.\n    // If we find it, we'll move it to the current position in the loop.\n\n    let tmpNextEl = nextEl;\n\n    while (tmpNextEl) {\n      if (tmpNextEl.__x_for_key === currentKey) {\n        return tmpNextEl.parentElement.insertBefore(tmpNextEl, nextEl);\n      }\n\n      tmpNextEl = tmpNextEl.nextElementSibling && tmpNextEl.nextElementSibling.__x_for_key !== undefined ? tmpNextEl.nextElementSibling : false;\n    }\n  }\n\n  function removeAnyLeftOverElementsFromPreviousUpdate(currentEl, component) {\n    var nextElementFromOldLoop = currentEl.nextElementSibling && currentEl.nextElementSibling.__x_for_key !== undefined ? currentEl.nextElementSibling : false;\n\n    while (nextElementFromOldLoop) {\n      let nextElementFromOldLoopImmutable = nextElementFromOldLoop;\n      let nextSibling = nextElementFromOldLoop.nextElementSibling;\n      transitionOut(nextElementFromOldLoop, () => {\n        nextElementFromOldLoopImmutable.remove();\n      }, () => {}, component);\n      nextElementFromOldLoop = nextSibling && nextSibling.__x_for_key !== undefined ? nextSibling : false;\n    }\n  }\n\n  function handleAttributeBindingDirective(component, el, attrName, expression, extraVars, attrType, modifiers) {\n    var value = component.evaluateReturnExpression(el, expression, extraVars);\n\n    if (attrName === 'value') {\n      if (Alpine.ignoreFocusedForValueBinding && document.activeElement.isSameNode(el)) return; // If nested model key is undefined, set the default value to empty string.\n\n      if (value === undefined && String(expression).match(/\\./)) {\n        value = '';\n      }\n\n      if (el.type === 'radio') {\n        // Set radio value from x-bind:value, if no \"value\" attribute exists.\n        // If there are any initial state values, radio will have a correct\n        // \"checked\" value since x-bind:value is processed before x-model.\n        if (el.attributes.value === undefined && attrType === 'bind') {\n          el.value = value;\n        } else if (attrType !== 'bind') {\n          el.checked = checkedAttrLooseCompare(el.value, value);\n        }\n      } else if (el.type === 'checkbox') {\n        // If we are explicitly binding a string to the :value, set the string,\n        // If the value is a boolean, leave it alone, it will be set to \"on\"\n        // automatically.\n        if (typeof value !== 'boolean' && ![null, undefined].includes(value) && attrType === 'bind') {\n          el.value = String(value);\n        } else if (attrType !== 'bind') {\n          if (Array.isArray(value)) {\n            // I'm purposely not using Array.includes here because it's\n            // strict, and because of Numeric/String mis-casting, I\n            // want the \"includes\" to be \"fuzzy\".\n            el.checked = value.some(val => checkedAttrLooseCompare(val, el.value));\n          } else {\n            el.checked = !!value;\n          }\n        }\n      } else if (el.tagName === 'SELECT') {\n        updateSelect(el, value);\n      } else {\n        if (el.value === value) return;\n        el.value = value;\n      }\n    } else if (attrName === 'class') {\n      if (Array.isArray(value)) {\n        const originalClasses = el.__x_original_classes || [];\n        el.setAttribute('class', arrayUnique(originalClasses.concat(value)).join(' '));\n      } else if (typeof value === 'object') {\n        // Sorting the keys / class names by their boolean value will ensure that\n        // anything that evaluates to `false` and needs to remove classes is run first.\n        const keysSortedByBooleanValue = Object.keys(value).sort((a, b) => value[a] - value[b]);\n        keysSortedByBooleanValue.forEach(classNames => {\n          if (value[classNames]) {\n            convertClassStringToArray(classNames).forEach(className => el.classList.add(className));\n          } else {\n            convertClassStringToArray(classNames).forEach(className => el.classList.remove(className));\n          }\n        });\n      } else {\n        const originalClasses = el.__x_original_classes || [];\n        const newClasses = value ? convertClassStringToArray(value) : [];\n        el.setAttribute('class', arrayUnique(originalClasses.concat(newClasses)).join(' '));\n      }\n    } else {\n      attrName = modifiers.includes('camel') ? camelCase(attrName) : attrName; // If an attribute's bound value is null, undefined or false, remove the attribute\n\n      if ([null, undefined, false].includes(value)) {\n        el.removeAttribute(attrName);\n      } else {\n        isBooleanAttr(attrName) ? setIfChanged(el, attrName, attrName) : setIfChanged(el, attrName, value);\n      }\n    }\n  }\n\n  function setIfChanged(el, attrName, value) {\n    if (el.getAttribute(attrName) != value) {\n      el.setAttribute(attrName, value);\n    }\n  }\n\n  function updateSelect(el, value) {\n    const arrayWrappedValue = [].concat(value).map(value => {\n      return value + '';\n    });\n    Array.from(el.options).forEach(option => {\n      option.selected = arrayWrappedValue.includes(option.value || option.text);\n    });\n  }\n\n  function handleTextDirective(el, output, expression) {\n    // If nested model key is undefined, set the default value to empty string.\n    if (output === undefined && String(expression).match(/\\./)) {\n      output = '';\n    }\n\n    el.textContent = output;\n  }\n\n  function handleHtmlDirective(component, el, expression, extraVars) {\n    el.innerHTML = component.evaluateReturnExpression(el, expression, extraVars);\n  }\n\n  function handleShowDirective(component, el, value, modifiers, initialUpdate = false) {\n    const hide = () => {\n      el.style.display = 'none';\n      el.__x_is_shown = false;\n    };\n\n    const show = () => {\n      if (el.style.length === 1 && el.style.display === 'none') {\n        el.removeAttribute('style');\n      } else {\n        el.style.removeProperty('display');\n      }\n\n      el.__x_is_shown = true;\n    };\n\n    if (initialUpdate === true) {\n      if (value) {\n        show();\n      } else {\n        hide();\n      }\n\n      return;\n    }\n\n    const handle = (resolve, reject) => {\n      if (value) {\n        if (el.style.display === 'none' || el.__x_transition) {\n          transitionIn(el, () => {\n            show();\n          }, reject, component);\n        }\n\n        resolve(() => {});\n      } else {\n        if (el.style.display !== 'none') {\n          transitionOut(el, () => {\n            resolve(() => {\n              hide();\n            });\n          }, reject, component);\n        } else {\n          resolve(() => {});\n        }\n      }\n    }; // The working of x-show is a bit complex because we need to\n    // wait for any child transitions to finish before hiding\n    // some element. Also, this has to be done recursively.\n    // If x-show.immediate, foregoe the waiting.\n\n\n    if (modifiers.includes('immediate')) {\n      handle(finish => finish(), () => {});\n      return;\n    } // x-show is encountered during a DOM tree walk. If an element\n    // we encounter is NOT a child of another x-show element we\n    // can execute the previous x-show stack (if one exists).\n\n\n    if (component.showDirectiveLastElement && !component.showDirectiveLastElement.contains(el)) {\n      component.executeAndClearRemainingShowDirectiveStack();\n    }\n\n    component.showDirectiveStack.push(handle);\n    component.showDirectiveLastElement = el;\n  }\n\n  function handleIfDirective(component, el, expressionResult, initialUpdate, extraVars) {\n    warnIfMalformedTemplate(el, 'x-if');\n    const elementHasAlreadyBeenAdded = el.nextElementSibling && el.nextElementSibling.__x_inserted_me === true;\n\n    if (expressionResult && (!elementHasAlreadyBeenAdded || el.__x_transition)) {\n      const clone = document.importNode(el.content, true);\n      el.parentElement.insertBefore(clone, el.nextElementSibling);\n      transitionIn(el.nextElementSibling, () => {}, () => {}, component, initialUpdate);\n      component.initializeElements(el.nextElementSibling, extraVars);\n      el.nextElementSibling.__x_inserted_me = true;\n    } else if (!expressionResult && elementHasAlreadyBeenAdded) {\n      transitionOut(el.nextElementSibling, () => {\n        el.nextElementSibling.remove();\n      }, () => {}, component, initialUpdate);\n    }\n  }\n\n  function registerListener(component, el, event, modifiers, expression, extraVars = {}) {\n    const options = {\n      passive: modifiers.includes('passive')\n    };\n\n    if (modifiers.includes('camel')) {\n      event = camelCase(event);\n    }\n\n    let handler, listenerTarget;\n\n    if (modifiers.includes('away')) {\n      listenerTarget = document;\n\n      handler = e => {\n        // Don't do anything if the click came from the element or within it.\n        if (el.contains(e.target)) return; // Don't do anything if this element isn't currently visible.\n\n        if (el.offsetWidth < 1 && el.offsetHeight < 1) return; // Now that we are sure the element is visible, AND the click\n        // is from outside it, let's run the expression.\n\n        runListenerHandler(component, expression, e, extraVars);\n\n        if (modifiers.includes('once')) {\n          document.removeEventListener(event, handler, options);\n        }\n      };\n    } else {\n      listenerTarget = modifiers.includes('window') ? window : modifiers.includes('document') ? document : el;\n\n      handler = e => {\n        // Remove this global event handler if the element that declared it\n        // has been removed. It's now stale.\n        if (listenerTarget === window || listenerTarget === document) {\n          if (!document.body.contains(el)) {\n            listenerTarget.removeEventListener(event, handler, options);\n            return;\n          }\n        }\n\n        if (isKeyEvent(event)) {\n          if (isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers)) {\n            return;\n          }\n        }\n\n        if (modifiers.includes('prevent')) e.preventDefault();\n        if (modifiers.includes('stop')) e.stopPropagation(); // If the .self modifier isn't present, or if it is present and\n        // the target element matches the element we are registering the\n        // event on, run the handler\n\n        if (!modifiers.includes('self') || e.target === el) {\n          const returnValue = runListenerHandler(component, expression, e, extraVars);\n          returnValue.then(value => {\n            if (value === false) {\n              e.preventDefault();\n            } else {\n              if (modifiers.includes('once')) {\n                listenerTarget.removeEventListener(event, handler, options);\n              }\n            }\n          });\n        }\n      };\n    }\n\n    if (modifiers.includes('debounce')) {\n      let nextModifier = modifiers[modifiers.indexOf('debounce') + 1] || 'invalid-wait';\n      let wait = isNumeric(nextModifier.split('ms')[0]) ? Number(nextModifier.split('ms')[0]) : 250;\n      handler = debounce(handler, wait);\n    }\n\n    listenerTarget.addEventListener(event, handler, options);\n  }\n\n  function runListenerHandler(component, expression, e, extraVars) {\n    return component.evaluateCommandExpression(e.target, expression, () => {\n      return _objectSpread2(_objectSpread2({}, extraVars()), {}, {\n        '$event': e\n      });\n    });\n  }\n\n  function isKeyEvent(event) {\n    return ['keydown', 'keyup'].includes(event);\n  }\n\n  function isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers) {\n    let keyModifiers = modifiers.filter(i => {\n      return !['window', 'document', 'prevent', 'stop'].includes(i);\n    });\n\n    if (keyModifiers.includes('debounce')) {\n      let debounceIndex = keyModifiers.indexOf('debounce');\n      keyModifiers.splice(debounceIndex, isNumeric((keyModifiers[debounceIndex + 1] || 'invalid-wait').split('ms')[0]) ? 2 : 1);\n    } // If no modifier is specified, we'll call it a press.\n\n\n    if (keyModifiers.length === 0) return false; // If one is passed, AND it matches the key pressed, we'll call it a press.\n\n    if (keyModifiers.length === 1 && keyModifiers[0] === keyToModifier(e.key)) return false; // The user is listening for key combinations.\n\n    const systemKeyModifiers = ['ctrl', 'shift', 'alt', 'meta', 'cmd', 'super'];\n    const selectedSystemKeyModifiers = systemKeyModifiers.filter(modifier => keyModifiers.includes(modifier));\n    keyModifiers = keyModifiers.filter(i => !selectedSystemKeyModifiers.includes(i));\n\n    if (selectedSystemKeyModifiers.length > 0) {\n      const activelyPressedKeyModifiers = selectedSystemKeyModifiers.filter(modifier => {\n        // Alias \"cmd\" and \"super\" to \"meta\"\n        if (modifier === 'cmd' || modifier === 'super') modifier = 'meta';\n        return e[`${modifier}Key`];\n      }); // If all the modifiers selected are pressed, ...\n\n      if (activelyPressedKeyModifiers.length === selectedSystemKeyModifiers.length) {\n        // AND the remaining key is pressed as well. It's a press.\n        if (keyModifiers[0] === keyToModifier(e.key)) return false;\n      }\n    } // We'll call it NOT a valid keypress.\n\n\n    return true;\n  }\n\n  function keyToModifier(key) {\n    switch (key) {\n      case '/':\n        return 'slash';\n\n      case ' ':\n      case 'Spacebar':\n        return 'space';\n\n      default:\n        return key && kebabCase(key);\n    }\n  }\n\n  function registerModelListener(component, el, modifiers, expression, extraVars) {\n    // If the element we are binding to is a select, a radio, or checkbox\n    // we'll listen for the change event instead of the \"input\" event.\n    var event = el.tagName.toLowerCase() === 'select' || ['checkbox', 'radio'].includes(el.type) || modifiers.includes('lazy') ? 'change' : 'input';\n    const listenerExpression = `${expression} = rightSideOfExpression($event, ${expression})`;\n    registerListener(component, el, event, modifiers, listenerExpression, () => {\n      return _objectSpread2(_objectSpread2({}, extraVars()), {}, {\n        rightSideOfExpression: generateModelAssignmentFunction(el, modifiers, expression)\n      });\n    });\n  }\n\n  function generateModelAssignmentFunction(el, modifiers, expression) {\n    if (el.type === 'radio') {\n      // Radio buttons only work properly when they share a name attribute.\n      // People might assume we take care of that for them, because\n      // they already set a shared \"x-model\" attribute.\n      if (!el.hasAttribute('name')) el.setAttribute('name', expression);\n    }\n\n    return (event, currentValue) => {\n      // Check for event.detail due to an issue where IE11 handles other events as a CustomEvent.\n      if (event instanceof CustomEvent && event.detail) {\n        return event.detail;\n      } else if (el.type === 'checkbox') {\n        // If the data we are binding to is an array, toggle its value inside the array.\n        if (Array.isArray(currentValue)) {\n          const newValue = modifiers.includes('number') ? safeParseNumber(event.target.value) : event.target.value;\n          return event.target.checked ? currentValue.concat([newValue]) : currentValue.filter(el => !checkedAttrLooseCompare(el, newValue));\n        } else {\n          return event.target.checked;\n        }\n      } else if (el.tagName.toLowerCase() === 'select' && el.multiple) {\n        return modifiers.includes('number') ? Array.from(event.target.selectedOptions).map(option => {\n          const rawValue = option.value || option.text;\n          return safeParseNumber(rawValue);\n        }) : Array.from(event.target.selectedOptions).map(option => {\n          return option.value || option.text;\n        });\n      } else {\n        const rawValue = event.target.value;\n        return modifiers.includes('number') ? safeParseNumber(rawValue) : modifiers.includes('trim') ? rawValue.trim() : rawValue;\n      }\n    };\n  }\n\n  function safeParseNumber(rawValue) {\n    const number = rawValue ? parseFloat(rawValue) : null;\n    return isNumeric(number) ? number : rawValue;\n  }\n\n  /**\n   * Copyright (C) 2017 salesforce.com, inc.\n   */\n  const { isArray } = Array;\n  const { getPrototypeOf, create: ObjectCreate, defineProperty: ObjectDefineProperty, defineProperties: ObjectDefineProperties, isExtensible, getOwnPropertyDescriptor, getOwnPropertyNames, getOwnPropertySymbols, preventExtensions, hasOwnProperty, } = Object;\n  const { push: ArrayPush, concat: ArrayConcat, map: ArrayMap, } = Array.prototype;\n  function isUndefined(obj) {\n      return obj === undefined;\n  }\n  function isFunction(obj) {\n      return typeof obj === 'function';\n  }\n  function isObject(obj) {\n      return typeof obj === 'object';\n  }\n  const proxyToValueMap = new WeakMap();\n  function registerProxy(proxy, value) {\n      proxyToValueMap.set(proxy, value);\n  }\n  const unwrap = (replicaOrAny) => proxyToValueMap.get(replicaOrAny) || replicaOrAny;\n\n  function wrapValue(membrane, value) {\n      return membrane.valueIsObservable(value) ? membrane.getProxy(value) : value;\n  }\n  /**\n   * Unwrap property descriptors will set value on original descriptor\n   * We only need to unwrap if value is specified\n   * @param descriptor external descrpitor provided to define new property on original value\n   */\n  function unwrapDescriptor(descriptor) {\n      if (hasOwnProperty.call(descriptor, 'value')) {\n          descriptor.value = unwrap(descriptor.value);\n      }\n      return descriptor;\n  }\n  function lockShadowTarget(membrane, shadowTarget, originalTarget) {\n      const targetKeys = ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\n      targetKeys.forEach((key) => {\n          let descriptor = getOwnPropertyDescriptor(originalTarget, key);\n          // We do not need to wrap the descriptor if configurable\n          // Because we can deal with wrapping it when user goes through\n          // Get own property descriptor. There is also a chance that this descriptor\n          // could change sometime in the future, so we can defer wrapping\n          // until we need to\n          if (!descriptor.configurable) {\n              descriptor = wrapDescriptor(membrane, descriptor, wrapValue);\n          }\n          ObjectDefineProperty(shadowTarget, key, descriptor);\n      });\n      preventExtensions(shadowTarget);\n  }\n  class ReactiveProxyHandler {\n      constructor(membrane, value) {\n          this.originalTarget = value;\n          this.membrane = membrane;\n      }\n      get(shadowTarget, key) {\n          const { originalTarget, membrane } = this;\n          const value = originalTarget[key];\n          const { valueObserved } = membrane;\n          valueObserved(originalTarget, key);\n          return membrane.getProxy(value);\n      }\n      set(shadowTarget, key, value) {\n          const { originalTarget, membrane: { valueMutated } } = this;\n          const oldValue = originalTarget[key];\n          if (oldValue !== value) {\n              originalTarget[key] = value;\n              valueMutated(originalTarget, key);\n          }\n          else if (key === 'length' && isArray(originalTarget)) {\n              // fix for issue #236: push will add the new index, and by the time length\n              // is updated, the internal length is already equal to the new length value\n              // therefore, the oldValue is equal to the value. This is the forking logic\n              // to support this use case.\n              valueMutated(originalTarget, key);\n          }\n          return true;\n      }\n      deleteProperty(shadowTarget, key) {\n          const { originalTarget, membrane: { valueMutated } } = this;\n          delete originalTarget[key];\n          valueMutated(originalTarget, key);\n          return true;\n      }\n      apply(shadowTarget, thisArg, argArray) {\n          /* No op */\n      }\n      construct(target, argArray, newTarget) {\n          /* No op */\n      }\n      has(shadowTarget, key) {\n          const { originalTarget, membrane: { valueObserved } } = this;\n          valueObserved(originalTarget, key);\n          return key in originalTarget;\n      }\n      ownKeys(shadowTarget) {\n          const { originalTarget } = this;\n          return ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\n      }\n      isExtensible(shadowTarget) {\n          const shadowIsExtensible = isExtensible(shadowTarget);\n          if (!shadowIsExtensible) {\n              return shadowIsExtensible;\n          }\n          const { originalTarget, membrane } = this;\n          const targetIsExtensible = isExtensible(originalTarget);\n          if (!targetIsExtensible) {\n              lockShadowTarget(membrane, shadowTarget, originalTarget);\n          }\n          return targetIsExtensible;\n      }\n      setPrototypeOf(shadowTarget, prototype) {\n      }\n      getPrototypeOf(shadowTarget) {\n          const { originalTarget } = this;\n          return getPrototypeOf(originalTarget);\n      }\n      getOwnPropertyDescriptor(shadowTarget, key) {\n          const { originalTarget, membrane } = this;\n          const { valueObserved } = this.membrane;\n          // keys looked up via hasOwnProperty need to be reactive\n          valueObserved(originalTarget, key);\n          let desc = getOwnPropertyDescriptor(originalTarget, key);\n          if (isUndefined(desc)) {\n              return desc;\n          }\n          const shadowDescriptor = getOwnPropertyDescriptor(shadowTarget, key);\n          if (!isUndefined(shadowDescriptor)) {\n              return shadowDescriptor;\n          }\n          // Note: by accessing the descriptor, the key is marked as observed\n          // but access to the value, setter or getter (if available) cannot observe\n          // mutations, just like regular methods, in which case we just do nothing.\n          desc = wrapDescriptor(membrane, desc, wrapValue);\n          if (!desc.configurable) {\n              // If descriptor from original target is not configurable,\n              // We must copy the wrapped descriptor over to the shadow target.\n              // Otherwise, proxy will throw an invariant error.\n              // This is our last chance to lock the value.\n              // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor#Invariants\n              ObjectDefineProperty(shadowTarget, key, desc);\n          }\n          return desc;\n      }\n      preventExtensions(shadowTarget) {\n          const { originalTarget, membrane } = this;\n          lockShadowTarget(membrane, shadowTarget, originalTarget);\n          preventExtensions(originalTarget);\n          return true;\n      }\n      defineProperty(shadowTarget, key, descriptor) {\n          const { originalTarget, membrane } = this;\n          const { valueMutated } = membrane;\n          const { configurable } = descriptor;\n          // We have to check for value in descriptor\n          // because Object.freeze(proxy) calls this method\n          // with only { configurable: false, writeable: false }\n          // Additionally, method will only be called with writeable:false\n          // if the descriptor has a value, as opposed to getter/setter\n          // So we can just check if writable is present and then see if\n          // value is present. This eliminates getter and setter descriptors\n          if (hasOwnProperty.call(descriptor, 'writable') && !hasOwnProperty.call(descriptor, 'value')) {\n              const originalDescriptor = getOwnPropertyDescriptor(originalTarget, key);\n              descriptor.value = originalDescriptor.value;\n          }\n          ObjectDefineProperty(originalTarget, key, unwrapDescriptor(descriptor));\n          if (configurable === false) {\n              ObjectDefineProperty(shadowTarget, key, wrapDescriptor(membrane, descriptor, wrapValue));\n          }\n          valueMutated(originalTarget, key);\n          return true;\n      }\n  }\n\n  function wrapReadOnlyValue(membrane, value) {\n      return membrane.valueIsObservable(value) ? membrane.getReadOnlyProxy(value) : value;\n  }\n  class ReadOnlyHandler {\n      constructor(membrane, value) {\n          this.originalTarget = value;\n          this.membrane = membrane;\n      }\n      get(shadowTarget, key) {\n          const { membrane, originalTarget } = this;\n          const value = originalTarget[key];\n          const { valueObserved } = membrane;\n          valueObserved(originalTarget, key);\n          return membrane.getReadOnlyProxy(value);\n      }\n      set(shadowTarget, key, value) {\n          return false;\n      }\n      deleteProperty(shadowTarget, key) {\n          return false;\n      }\n      apply(shadowTarget, thisArg, argArray) {\n          /* No op */\n      }\n      construct(target, argArray, newTarget) {\n          /* No op */\n      }\n      has(shadowTarget, key) {\n          const { originalTarget, membrane: { valueObserved } } = this;\n          valueObserved(originalTarget, key);\n          return key in originalTarget;\n      }\n      ownKeys(shadowTarget) {\n          const { originalTarget } = this;\n          return ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\n      }\n      setPrototypeOf(shadowTarget, prototype) {\n      }\n      getOwnPropertyDescriptor(shadowTarget, key) {\n          const { originalTarget, membrane } = this;\n          const { valueObserved } = membrane;\n          // keys looked up via hasOwnProperty need to be reactive\n          valueObserved(originalTarget, key);\n          let desc = getOwnPropertyDescriptor(originalTarget, key);\n          if (isUndefined(desc)) {\n              return desc;\n          }\n          const shadowDescriptor = getOwnPropertyDescriptor(shadowTarget, key);\n          if (!isUndefined(shadowDescriptor)) {\n              return shadowDescriptor;\n          }\n          // Note: by accessing the descriptor, the key is marked as observed\n          // but access to the value or getter (if available) cannot be observed,\n          // just like regular methods, in which case we just do nothing.\n          desc = wrapDescriptor(membrane, desc, wrapReadOnlyValue);\n          if (hasOwnProperty.call(desc, 'set')) {\n              desc.set = undefined; // readOnly membrane does not allow setters\n          }\n          if (!desc.configurable) {\n              // If descriptor from original target is not configurable,\n              // We must copy the wrapped descriptor over to the shadow target.\n              // Otherwise, proxy will throw an invariant error.\n              // This is our last chance to lock the value.\n              // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor#Invariants\n              ObjectDefineProperty(shadowTarget, key, desc);\n          }\n          return desc;\n      }\n      preventExtensions(shadowTarget) {\n          return false;\n      }\n      defineProperty(shadowTarget, key, descriptor) {\n          return false;\n      }\n  }\n  function createShadowTarget(value) {\n      let shadowTarget = undefined;\n      if (isArray(value)) {\n          shadowTarget = [];\n      }\n      else if (isObject(value)) {\n          shadowTarget = {};\n      }\n      return shadowTarget;\n  }\n  const ObjectDotPrototype = Object.prototype;\n  function defaultValueIsObservable(value) {\n      // intentionally checking for null\n      if (value === null) {\n          return false;\n      }\n      // treat all non-object types, including undefined, as non-observable values\n      if (typeof value !== 'object') {\n          return false;\n      }\n      if (isArray(value)) {\n          return true;\n      }\n      const proto = getPrototypeOf(value);\n      return (proto === ObjectDotPrototype || proto === null || getPrototypeOf(proto) === null);\n  }\n  const defaultValueObserved = (obj, key) => {\n      /* do nothing */\n  };\n  const defaultValueMutated = (obj, key) => {\n      /* do nothing */\n  };\n  const defaultValueDistortion = (value) => value;\n  function wrapDescriptor(membrane, descriptor, getValue) {\n      const { set, get } = descriptor;\n      if (hasOwnProperty.call(descriptor, 'value')) {\n          descriptor.value = getValue(membrane, descriptor.value);\n      }\n      else {\n          if (!isUndefined(get)) {\n              descriptor.get = function () {\n                  // invoking the original getter with the original target\n                  return getValue(membrane, get.call(unwrap(this)));\n              };\n          }\n          if (!isUndefined(set)) {\n              descriptor.set = function (value) {\n                  // At this point we don't have a clear indication of whether\n                  // or not a valid mutation will occur, we don't have the key,\n                  // and we are not sure why and how they are invoking this setter.\n                  // Nevertheless we preserve the original semantics by invoking the\n                  // original setter with the original target and the unwrapped value\n                  set.call(unwrap(this), membrane.unwrapProxy(value));\n              };\n          }\n      }\n      return descriptor;\n  }\n  class ReactiveMembrane {\n      constructor(options) {\n          this.valueDistortion = defaultValueDistortion;\n          this.valueMutated = defaultValueMutated;\n          this.valueObserved = defaultValueObserved;\n          this.valueIsObservable = defaultValueIsObservable;\n          this.objectGraph = new WeakMap();\n          if (!isUndefined(options)) {\n              const { valueDistortion, valueMutated, valueObserved, valueIsObservable } = options;\n              this.valueDistortion = isFunction(valueDistortion) ? valueDistortion : defaultValueDistortion;\n              this.valueMutated = isFunction(valueMutated) ? valueMutated : defaultValueMutated;\n              this.valueObserved = isFunction(valueObserved) ? valueObserved : defaultValueObserved;\n              this.valueIsObservable = isFunction(valueIsObservable) ? valueIsObservable : defaultValueIsObservable;\n          }\n      }\n      getProxy(value) {\n          const unwrappedValue = unwrap(value);\n          const distorted = this.valueDistortion(unwrappedValue);\n          if (this.valueIsObservable(distorted)) {\n              const o = this.getReactiveState(unwrappedValue, distorted);\n              // when trying to extract the writable version of a readonly\n              // we return the readonly.\n              return o.readOnly === value ? value : o.reactive;\n          }\n          return distorted;\n      }\n      getReadOnlyProxy(value) {\n          value = unwrap(value);\n          const distorted = this.valueDistortion(value);\n          if (this.valueIsObservable(distorted)) {\n              return this.getReactiveState(value, distorted).readOnly;\n          }\n          return distorted;\n      }\n      unwrapProxy(p) {\n          return unwrap(p);\n      }\n      getReactiveState(value, distortedValue) {\n          const { objectGraph, } = this;\n          let reactiveState = objectGraph.get(distortedValue);\n          if (reactiveState) {\n              return reactiveState;\n          }\n          const membrane = this;\n          reactiveState = {\n              get reactive() {\n                  const reactiveHandler = new ReactiveProxyHandler(membrane, distortedValue);\n                  // caching the reactive proxy after the first time it is accessed\n                  const proxy = new Proxy(createShadowTarget(distortedValue), reactiveHandler);\n                  registerProxy(proxy, value);\n                  ObjectDefineProperty(this, 'reactive', { value: proxy });\n                  return proxy;\n              },\n              get readOnly() {\n                  const readOnlyHandler = new ReadOnlyHandler(membrane, distortedValue);\n                  // caching the readOnly proxy after the first time it is accessed\n                  const proxy = new Proxy(createShadowTarget(distortedValue), readOnlyHandler);\n                  registerProxy(proxy, value);\n                  ObjectDefineProperty(this, 'readOnly', { value: proxy });\n                  return proxy;\n              }\n          };\n          objectGraph.set(distortedValue, reactiveState);\n          return reactiveState;\n      }\n  }\n  /** version: 0.26.0 */\n\n  function wrap(data, mutationCallback) {\n\n    let membrane = new ReactiveMembrane({\n      valueMutated(target, key) {\n        mutationCallback(target, key);\n      }\n\n    });\n    return {\n      data: membrane.getProxy(data),\n      membrane: membrane\n    };\n  }\n  function unwrap$1(membrane, observable) {\n    let unwrappedData = membrane.unwrapProxy(observable);\n    let copy = {};\n    Object.keys(unwrappedData).forEach(key => {\n      if (['$el', '$refs', '$nextTick', '$watch'].includes(key)) return;\n      copy[key] = unwrappedData[key];\n    });\n    return copy;\n  }\n\n  class Component {\n    constructor(el, componentForClone = null) {\n      this.$el = el;\n      const dataAttr = this.$el.getAttribute('x-data');\n      const dataExpression = dataAttr === '' ? '{}' : dataAttr;\n      const initExpression = this.$el.getAttribute('x-init');\n      let dataExtras = {\n        $el: this.$el\n      };\n      let canonicalComponentElementReference = componentForClone ? componentForClone.$el : this.$el;\n      Object.entries(Alpine.magicProperties).forEach(([name, callback]) => {\n        Object.defineProperty(dataExtras, `$${name}`, {\n          get: function get() {\n            return callback(canonicalComponentElementReference);\n          }\n        });\n      });\n      this.unobservedData = componentForClone ? componentForClone.getUnobservedData() : saferEval(el, dataExpression, dataExtras);\n      // Construct a Proxy-based observable. This will be used to handle reactivity.\n\n      let {\n        membrane,\n        data\n      } = this.wrapDataInObservable(this.unobservedData);\n      this.$data = data;\n      this.membrane = membrane; // After making user-supplied data methods reactive, we can now add\n      // our magic properties to the original data for access.\n\n      this.unobservedData.$el = this.$el;\n      this.unobservedData.$refs = this.getRefsProxy();\n      this.nextTickStack = [];\n\n      this.unobservedData.$nextTick = callback => {\n        this.nextTickStack.push(callback);\n      };\n\n      this.watchers = {};\n\n      this.unobservedData.$watch = (property, callback) => {\n        if (!this.watchers[property]) this.watchers[property] = [];\n        this.watchers[property].push(callback);\n      };\n      /* MODERN-ONLY:START */\n      // We remove this piece of code from the legacy build.\n      // In IE11, we have already defined our helpers at this point.\n      // Register custom magic properties.\n\n\n      Object.entries(Alpine.magicProperties).forEach(([name, callback]) => {\n        Object.defineProperty(this.unobservedData, `$${name}`, {\n          get: function get() {\n            return callback(canonicalComponentElementReference, this.$el);\n          }\n        });\n      });\n      /* MODERN-ONLY:END */\n\n      this.showDirectiveStack = [];\n      this.showDirectiveLastElement;\n      componentForClone || Alpine.onBeforeComponentInitializeds.forEach(callback => callback(this));\n      var initReturnedCallback; // If x-init is present AND we aren't cloning (skip x-init on clone)\n\n      if (initExpression && !componentForClone) {\n        // We want to allow data manipulation, but not trigger DOM updates just yet.\n        // We haven't even initialized the elements with their Alpine bindings. I mean c'mon.\n        this.pauseReactivity = true;\n        initReturnedCallback = this.evaluateReturnExpression(this.$el, initExpression);\n        this.pauseReactivity = false;\n      } // Register all our listeners and set all our attribute bindings.\n      // If we're cloning a component, the third parameter ensures no duplicate\n      // event listeners are registered (the mutation observer will take care of them)\n\n\n      this.initializeElements(this.$el, () => {}, componentForClone); // Use mutation observer to detect new elements being added within this component at run-time.\n      // Alpine's just so darn flexible amirite?\n\n      this.listenForNewElementsToInitialize();\n\n      if (typeof initReturnedCallback === 'function') {\n        // Run the callback returned from the \"x-init\" hook to allow the user to do stuff after\n        // Alpine's got it's grubby little paws all over everything.\n        initReturnedCallback.call(this.$data);\n      }\n\n      componentForClone || setTimeout(() => {\n        Alpine.onComponentInitializeds.forEach(callback => callback(this));\n      }, 0);\n    }\n\n    getUnobservedData() {\n      return unwrap$1(this.membrane, this.$data);\n    }\n\n    wrapDataInObservable(data) {\n      var self = this;\n      let updateDom = debounce(function () {\n        self.updateElements(self.$el);\n      }, 0);\n      return wrap(data, (target, key) => {\n        if (self.watchers[key]) {\n          // If there's a watcher for this specific key, run it.\n          self.watchers[key].forEach(callback => callback(target[key]));\n        } else if (Array.isArray(target)) {\n          // Arrays are special cases, if any of the items change, we consider the array as mutated.\n          Object.keys(self.watchers).forEach(fullDotNotationKey => {\n            let dotNotationParts = fullDotNotationKey.split('.'); // Ignore length mutations since they would result in duplicate calls.\n            // For example, when calling push, we would get a mutation for the item's key\n            // and a second mutation for the length property.\n\n            if (key === 'length') return;\n            dotNotationParts.reduce((comparisonData, part) => {\n              if (Object.is(target, comparisonData[part])) {\n                self.watchers[fullDotNotationKey].forEach(callback => callback(target));\n              }\n\n              return comparisonData[part];\n            }, self.unobservedData);\n          });\n        } else {\n          // Let's walk through the watchers with \"dot-notation\" (foo.bar) and see\n          // if this mutation fits any of them.\n          Object.keys(self.watchers).filter(i => i.includes('.')).forEach(fullDotNotationKey => {\n            let dotNotationParts = fullDotNotationKey.split('.'); // If this dot-notation watcher's last \"part\" doesn't match the current\n            // key, then skip it early for performance reasons.\n\n            if (key !== dotNotationParts[dotNotationParts.length - 1]) return; // Now, walk through the dot-notation \"parts\" recursively to find\n            // a match, and call the watcher if one's found.\n\n            dotNotationParts.reduce((comparisonData, part) => {\n              if (Object.is(target, comparisonData)) {\n                // Run the watchers.\n                self.watchers[fullDotNotationKey].forEach(callback => callback(target[key]));\n              }\n\n              return comparisonData[part];\n            }, self.unobservedData);\n          });\n        } // Don't react to data changes for cases like the `x-created` hook.\n\n\n        if (self.pauseReactivity) return;\n        updateDom();\n      });\n    }\n\n    walkAndSkipNestedComponents(el, callback, initializeComponentCallback = () => {}) {\n      walk(el, el => {\n        // We've hit a component.\n        if (el.hasAttribute('x-data')) {\n          // If it's not the current one.\n          if (!el.isSameNode(this.$el)) {\n            // Initialize it if it's not.\n            if (!el.__x) initializeComponentCallback(el); // Now we'll let that sub-component deal with itself.\n\n            return false;\n          }\n        }\n\n        return callback(el);\n      });\n    }\n\n    initializeElements(rootEl, extraVars = () => {}, componentForClone = false) {\n      this.walkAndSkipNestedComponents(rootEl, el => {\n        // Don't touch spawns from for loop\n        if (el.__x_for_key !== undefined) return false; // Don't touch spawns from if directives\n\n        if (el.__x_inserted_me !== undefined) return false;\n        this.initializeElement(el, extraVars, componentForClone ? false : true);\n      }, el => {\n        if (!componentForClone) el.__x = new Component(el);\n      });\n      this.executeAndClearRemainingShowDirectiveStack();\n      this.executeAndClearNextTickStack(rootEl);\n    }\n\n    initializeElement(el, extraVars, shouldRegisterListeners = true) {\n      // To support class attribute merging, we have to know what the element's\n      // original class attribute looked like for reference.\n      if (el.hasAttribute('class') && getXAttrs(el, this).length > 0) {\n        el.__x_original_classes = convertClassStringToArray(el.getAttribute('class'));\n      }\n\n      shouldRegisterListeners && this.registerListeners(el, extraVars);\n      this.resolveBoundAttributes(el, true, extraVars);\n    }\n\n    updateElements(rootEl, extraVars = () => {}) {\n      this.walkAndSkipNestedComponents(rootEl, el => {\n        // Don't touch spawns from for loop (and check if the root is actually a for loop in a parent, don't skip it.)\n        if (el.__x_for_key !== undefined && !el.isSameNode(this.$el)) return false;\n        this.updateElement(el, extraVars);\n      }, el => {\n        el.__x = new Component(el);\n      });\n      this.executeAndClearRemainingShowDirectiveStack();\n      this.executeAndClearNextTickStack(rootEl);\n    }\n\n    executeAndClearNextTickStack(el) {\n      // Skip spawns from alpine directives\n      if (el === this.$el && this.nextTickStack.length > 0) {\n        // We run the tick stack after the next frame to allow any\n        // running transitions to pass the initial show stage.\n        requestAnimationFrame(() => {\n          while (this.nextTickStack.length > 0) {\n            this.nextTickStack.shift()();\n          }\n        });\n      }\n    }\n\n    executeAndClearRemainingShowDirectiveStack() {\n      // The goal here is to start all the x-show transitions\n      // and build a nested promise chain so that elements\n      // only hide when the children are finished hiding.\n      this.showDirectiveStack.reverse().map(handler => {\n        return new Promise((resolve, reject) => {\n          handler(resolve, reject);\n        });\n      }).reduce((promiseChain, promise) => {\n        return promiseChain.then(() => {\n          return promise.then(finishElement => {\n            finishElement();\n          });\n        });\n      }, Promise.resolve(() => {})).catch(e => {\n        if (e !== TRANSITION_CANCELLED) throw e;\n      }); // We've processed the handler stack. let's clear it.\n\n      this.showDirectiveStack = [];\n      this.showDirectiveLastElement = undefined;\n    }\n\n    updateElement(el, extraVars) {\n      this.resolveBoundAttributes(el, false, extraVars);\n    }\n\n    registerListeners(el, extraVars) {\n      getXAttrs(el, this).forEach(({\n        type,\n        value,\n        modifiers,\n        expression\n      }) => {\n        switch (type) {\n          case 'on':\n            registerListener(this, el, value, modifiers, expression, extraVars);\n            break;\n\n          case 'model':\n            registerModelListener(this, el, modifiers, expression, extraVars);\n            break;\n        }\n      });\n    }\n\n    resolveBoundAttributes(el, initialUpdate = false, extraVars) {\n      let attrs = getXAttrs(el, this);\n      attrs.forEach(({\n        type,\n        value,\n        modifiers,\n        expression\n      }) => {\n        switch (type) {\n          case 'model':\n            handleAttributeBindingDirective(this, el, 'value', expression, extraVars, type, modifiers);\n            break;\n\n          case 'bind':\n            // The :key binding on an x-for is special, ignore it.\n            if (el.tagName.toLowerCase() === 'template' && value === 'key') return;\n            handleAttributeBindingDirective(this, el, value, expression, extraVars, type, modifiers);\n            break;\n\n          case 'text':\n            var output = this.evaluateReturnExpression(el, expression, extraVars);\n            handleTextDirective(el, output, expression);\n            break;\n\n          case 'html':\n            handleHtmlDirective(this, el, expression, extraVars);\n            break;\n\n          case 'show':\n            var output = this.evaluateReturnExpression(el, expression, extraVars);\n            handleShowDirective(this, el, output, modifiers, initialUpdate);\n            break;\n\n          case 'if':\n            // If this element also has x-for on it, don't process x-if.\n            // We will let the \"x-for\" directive handle the \"if\"ing.\n            if (attrs.some(i => i.type === 'for')) return;\n            var output = this.evaluateReturnExpression(el, expression, extraVars);\n            handleIfDirective(this, el, output, initialUpdate, extraVars);\n            break;\n\n          case 'for':\n            handleForDirective(this, el, expression, initialUpdate, extraVars);\n            break;\n\n          case 'cloak':\n            el.removeAttribute('x-cloak');\n            break;\n        }\n      });\n    }\n\n    evaluateReturnExpression(el, expression, extraVars = () => {}) {\n      return saferEval(el, expression, this.$data, _objectSpread2(_objectSpread2({}, extraVars()), {}, {\n        $dispatch: this.getDispatchFunction(el)\n      }));\n    }\n\n    evaluateCommandExpression(el, expression, extraVars = () => {}) {\n      return saferEvalNoReturn(el, expression, this.$data, _objectSpread2(_objectSpread2({}, extraVars()), {}, {\n        $dispatch: this.getDispatchFunction(el)\n      }));\n    }\n\n    getDispatchFunction(el) {\n      return (event, detail = {}) => {\n        el.dispatchEvent(new CustomEvent(event, {\n          detail,\n          bubbles: true\n        }));\n      };\n    }\n\n    listenForNewElementsToInitialize() {\n      const targetNode = this.$el;\n      const observerOptions = {\n        childList: true,\n        attributes: true,\n        subtree: true\n      };\n      const observer = new MutationObserver(mutations => {\n        for (let i = 0; i < mutations.length; i++) {\n          // Filter out mutations triggered from child components.\n          const closestParentComponent = mutations[i].target.closest('[x-data]');\n          if (!(closestParentComponent && closestParentComponent.isSameNode(this.$el))) continue;\n\n          if (mutations[i].type === 'attributes' && mutations[i].attributeName === 'x-data') {\n            const xAttr = mutations[i].target.getAttribute('x-data') || '{}';\n            const rawData = saferEval(this.$el, xAttr, {\n              $el: this.$el\n            });\n            Object.keys(rawData).forEach(key => {\n              if (this.$data[key] !== rawData[key]) {\n                this.$data[key] = rawData[key];\n              }\n            });\n          }\n\n          if (mutations[i].addedNodes.length > 0) {\n            mutations[i].addedNodes.forEach(node => {\n              if (node.nodeType !== 1 || node.__x_inserted_me) return;\n\n              if (node.matches('[x-data]') && !node.__x) {\n                node.__x = new Component(node);\n                return;\n              }\n\n              this.initializeElements(node);\n            });\n          }\n        }\n      });\n      observer.observe(targetNode, observerOptions);\n    }\n\n    getRefsProxy() {\n      var self = this;\n      var refObj = {};\n      // One of the goals of this is to not hold elements in memory, but rather re-evaluate\n      // the DOM when the system needs something from it. This way, the framework is flexible and\n      // friendly to outside DOM changes from libraries like Vue/Livewire.\n      // For this reason, I'm using an \"on-demand\" proxy to fake a \"$refs\" object.\n\n      return new Proxy(refObj, {\n        get(object, property) {\n          if (property === '$isAlpineProxy') return true;\n          var ref; // We can't just query the DOM because it's hard to filter out refs in\n          // nested components.\n\n          self.walkAndSkipNestedComponents(self.$el, el => {\n            if (el.hasAttribute('x-ref') && el.getAttribute('x-ref') === property) {\n              ref = el;\n            }\n          });\n          return ref;\n        }\n\n      });\n    }\n\n  }\n\n  const Alpine = {\n    version: \"2.8.2\",\n    pauseMutationObserver: false,\n    magicProperties: {},\n    onComponentInitializeds: [],\n    onBeforeComponentInitializeds: [],\n    ignoreFocusedForValueBinding: false,\n    start: async function start() {\n      if (!isTesting()) {\n        await domReady();\n      }\n\n      this.discoverComponents(el => {\n        this.initializeComponent(el);\n      }); // It's easier and more performant to just support Turbolinks than listen\n      // to MutationObserver mutations at the document level.\n\n      document.addEventListener(\"turbolinks:load\", () => {\n        this.discoverUninitializedComponents(el => {\n          this.initializeComponent(el);\n        });\n      });\n      this.listenForNewUninitializedComponentsAtRunTime();\n    },\n    discoverComponents: function discoverComponents(callback) {\n      const rootEls = document.querySelectorAll('[x-data]');\n      rootEls.forEach(rootEl => {\n        callback(rootEl);\n      });\n    },\n    discoverUninitializedComponents: function discoverUninitializedComponents(callback, el = null) {\n      const rootEls = (el || document).querySelectorAll('[x-data]');\n      Array.from(rootEls).filter(el => el.__x === undefined).forEach(rootEl => {\n        callback(rootEl);\n      });\n    },\n    listenForNewUninitializedComponentsAtRunTime: function listenForNewUninitializedComponentsAtRunTime() {\n      const targetNode = document.querySelector('body');\n      const observerOptions = {\n        childList: true,\n        attributes: true,\n        subtree: true\n      };\n      const observer = new MutationObserver(mutations => {\n        if (this.pauseMutationObserver) return;\n\n        for (let i = 0; i < mutations.length; i++) {\n          if (mutations[i].addedNodes.length > 0) {\n            mutations[i].addedNodes.forEach(node => {\n              // Discard non-element nodes (like line-breaks)\n              if (node.nodeType !== 1) return; // Discard any changes happening within an existing component.\n              // They will take care of themselves.\n\n              if (node.parentElement && node.parentElement.closest('[x-data]')) return;\n              this.discoverUninitializedComponents(el => {\n                this.initializeComponent(el);\n              }, node.parentElement);\n            });\n          }\n        }\n      });\n      observer.observe(targetNode, observerOptions);\n    },\n    initializeComponent: function initializeComponent(el) {\n      if (!el.__x) {\n        // Wrap in a try/catch so that we don't prevent other components\n        // from initializing when one component contains an error.\n        try {\n          el.__x = new Component(el);\n        } catch (error) {\n          setTimeout(() => {\n            throw error;\n          }, 0);\n        }\n      }\n    },\n    clone: function clone(component, newEl) {\n      if (!newEl.__x) {\n        newEl.__x = new Component(newEl, component);\n      }\n    },\n    addMagicProperty: function addMagicProperty(name, callback) {\n      this.magicProperties[name] = callback;\n    },\n    onComponentInitialized: function onComponentInitialized(callback) {\n      this.onComponentInitializeds.push(callback);\n    },\n    onBeforeComponentInitialized: function onBeforeComponentInitialized(callback) {\n      this.onBeforeComponentInitializeds.push(callback);\n    }\n  };\n\n  if (!isTesting()) {\n    window.Alpine = Alpine;\n\n    if (window.deferLoadingAlpine) {\n      window.deferLoadingAlpine(function () {\n        window.Alpine.start();\n      });\n    } else {\n      window.Alpine.start();\n    }\n  }\n\n  return Alpine;\n\n})));\n","module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"fill-current h-6 w-6\\\" viewBox=\\\"0 0 20 20\\\"><path d=\\\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\\\"></path></svg>\"","module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"stroke-current h-6 w-6 feather feather-info\\\"><circle cx=\\\"12\\\" cy=\\\"12\\\" r=\\\"10\\\"></circle><line x1=\\\"12\\\" y1=\\\"16\\\" x2=\\\"12\\\" y2=\\\"12\\\"></line><line x1=\\\"12\\\" y1=\\\"8\\\" x2=\\\"12\\\" y2=\\\"8\\\"></line></svg>\"","module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"fill-current stroke-current h-6 w-6 feather feather-more-vertical\\\"><circle cx=\\\"12\\\" cy=\\\"12\\\" r=\\\"1\\\"></circle><circle cx=\\\"12\\\" cy=\\\"5\\\" r=\\\"1\\\"></circle><circle cx=\\\"12\\\" cy=\\\"19\\\" r=\\\"1\\\"></circle></svg>\"","module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\" class=\\\"fill-current stroke-current h-6 w-6\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"feather feather-move\\\"><polyline points=\\\"5 9 2 12 5 15\\\"></polyline><polyline points=\\\"9 5 12 2 15 5\\\"></polyline><polyline points=\\\"15 19 12 22 9 19\\\"></polyline><polyline points=\\\"19 9 22 12 19 15\\\"></polyline><line x1=\\\"2\\\" y1=\\\"12\\\" x2=\\\"22\\\" y2=\\\"12\\\"></line><line x1=\\\"12\\\" y1=\\\"2\\\" x2=\\\"12\\\" y2=\\\"22\\\"></line></svg>\"","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * This file exists only to import the alpine.js package into the theme.\n */\nimport 'alpinejs';\n","/**\n * @file\n * Behavior which initializes the simplerSelect jQuery Plugin.\n */\n\n(function ($) {\n  'use strict';\n\n  Drupal.behaviors.cshs = {\n    attach: function (context, settings) {\n      $('select.simpler-select-root', context)\n        .once('cshs')\n        .each(function (idx, element) {\n          // See if we got settings from Drupal for this field.\n          if (typeof settings.cshs !== 'undefined' && typeof settings.cshs[element.id] !== 'undefined') {\n            $(element).simplerSelect(settings.cshs[element.id]);\n          }\n        }\n        );\n    }\n  };\n})(jQuery);\n","/**\n * @file\n * Dropbutton feature.\n */\n\nimport moreVertical from '../../icons/more-vertical.svg';\n\n(function ($, Drupal) {\n  /**\n   * A DropButton presents an HTML list as a button with a primary action.\n   *\n   * All secondary actions beyond the first in the list are presented in a\n   * dropdown list accessible through a toggle arrow associated with the button.\n   *\n   * @constructor Drupal.DropButton\n   *\n   * @param {HTMLElement} dropbutton\n   *   A DOM element.\n   * @param {object} settings\n   *   A list of options including:\n   * @param {string} settings.title\n   *   The text inside the toggle link element. This text is hidden\n   *   from visual UAs.\n   */\n  function DropButton(dropbutton, settings) {\n    // Merge defaults with settings.\n    const options = $.extend(\n      { title: Drupal.t('List additional actions') },\n      settings,\n    );\n    const $dropbutton = $(dropbutton);\n\n    /**\n     * @type {jQuery}\n     */\n    this.$dropbutton = $dropbutton;\n\n    /**\n     * @type {jQuery}\n     */\n    this.$list = $dropbutton.find('.dropbutton');\n\n    /**\n     * Find actions and mark them.\n     *\n     * @type {jQuery}\n     */\n    this.$actions = this.$list.find('.dropbutton-action');\n\n    // Add the special dropdown only if there are hidden actions.\n    if (this.$actions.length > 1) {\n      // Identify the first element of the collection.\n      const $primary = this.$actions.slice(0, 1);\n      // Identify the secondary actions.\n      const $secondary = this.$actions.slice(1);\n      $secondary.addClass('secondary-action');\n      // Add toggle link.\n      $primary.append(Drupal.theme('dropbuttonToggle', options));\n      // Bind mouse events.\n      this.$dropbutton.addClass('dropbutton-multiple').on({\n        /**\n         * Adds a timeout to close the dropdown on mouseleave.\n         *\n         * @ignore\n         */\n        'mouseleave.dropbutton': $.proxy(this.hoverOut, this),\n\n        /**\n         * Clears timeout when mouseout of the dropdown.\n         *\n         * @ignore\n         */\n        'mouseenter.dropbutton': $.proxy(this.hoverIn, this),\n\n        /**\n         * Similar to mouseleave/mouseenter, but for keyboard navigation.\n         *\n         * @ignore\n         */\n        'focusout.dropbutton': $.proxy(this.focusOut, this),\n\n        /**\n         * @ignore\n         */\n        'focusin.dropbutton': $.proxy(this.focusIn, this),\n      });\n    } else {\n      this.$dropbutton.addClass('dropbutton-single');\n    }\n  }\n\n  /**\n   * Delegated callback for opening and closing dropbutton secondary actions.\n   *\n   * @function Drupal.DropButton~dropbuttonClickHandler\n   *\n   * @param {jQuery.Event} e\n   *   The event triggered.\n   */\n  function dropbuttonClickHandler(e) {\n    e.preventDefault();\n    $(e.target)\n      .closest('.dropbutton-wrapper')\n      .toggleClass('open');\n  }\n\n  /**\n   * Process elements with the .dropbutton class on page load.\n   *\n   * @type {Drupal~behavior}\n   *\n   * @prop {Drupal~behaviorAttach} attach\n   *   Attaches dropButton behaviors.\n   */\n  Drupal.behaviors.dropButton = {\n    attach(context, settings) {\n      const $dropbuttons = $(context)\n        .find('.dropbutton-wrapper')\n        .once('dropbutton');\n      if ($dropbuttons.length) {\n        // Adds the delegated handler that will toggle dropdowns on click.\n        const $body = $('body').once('dropbutton-click');\n        if ($body.length) {\n          $body.on('click', '.dropbutton-toggle', dropbuttonClickHandler);\n        }\n        // Initialize all buttons.\n        const il = $dropbuttons.length;\n        for (let i = 0; i < il; i++) {\n          DropButton.dropbuttons.push(\n            new DropButton($dropbuttons[i], settings.dropbutton),\n          );\n        }\n      }\n    },\n  };\n\n  /**\n   * Extend the DropButton constructor.\n   */\n  $.extend(\n    DropButton,\n    /** @lends Drupal.DropButton */ {\n      /**\n       * Store all processed DropButtons.\n       *\n       * @type {Array.<Drupal.DropButton>}\n       */\n      dropbuttons: [],\n    },\n  );\n\n  /**\n   * Extend the DropButton prototype.\n   */\n  $.extend(\n    DropButton.prototype,\n    /** @lends Drupal.DropButton# */ {\n      /**\n       * Toggle the dropbutton open and closed.\n       *\n       * @param {bool} [show]\n       *   Force the dropbutton to open by passing true or to close by\n       *   passing false.\n       */\n      toggle(show) {\n        const isBool = typeof show === 'boolean';\n        show = isBool ? show : !this.$dropbutton.hasClass('open');\n        this.$dropbutton.toggleClass('open', show);\n      },\n\n      /**\n       * @method\n       */\n      hoverIn() {\n        // Clear any previous timer we were using.\n        if (this.timerID) {\n          window.clearTimeout(this.timerID);\n        }\n      },\n\n      /**\n       * @method\n       */\n      hoverOut() {\n        // Wait half a second before closing.\n        this.timerID = window.setTimeout($.proxy(this, 'close'), 500);\n      },\n\n      /**\n       * @method\n       */\n      open() {\n        this.toggle(true);\n      },\n\n      /**\n       * @method\n       */\n      close() {\n        this.toggle(false);\n      },\n\n      /**\n       * @param {jQuery.Event} e\n       *   The event triggered.\n       */\n      focusOut(e) {\n        this.hoverOut.call(this, e);\n      },\n\n      /**\n       * @param {jQuery.Event} e\n       *   The event triggered.\n       */\n      focusIn(e) {\n        this.hoverIn.call(this, e);\n      },\n    },\n  );\n\n  $.extend(\n    Drupal.theme,\n    /** @lends Drupal.theme */ {\n      /**\n       * A toggle is an interactive element often bound to a click handler.\n       *\n       * @param {object} options\n       *   Options object.\n       * @param {string} [options.title]\n       *   The button text.\n       *\n       * @return {string}\n       *   A string representing a DOM fragment.\n       */\n\n      dropbuttonToggle(options) {\n        const dropbuttonClasses = [\n          'dropbutton-toggle',\n          'border-current',\n          'border-l',\n          'pl-2',\n          'flex',\n        ];\n\n        return `<span class=\"${dropbuttonClasses.join(' ')}\">\n          <span class=\"visually-hidden\">${options.title}</span>\n          <button class=\"flex\" type=\"button\">\n            ${moreVertical}\n          </button>\n        </span>`;\n      },\n    },\n  );\n\n  // Expose constructor in the public space.\n  Drupal.DropButton = DropButton;\n})(jQuery, Drupal);\n","/**\n * @file\n * Render standard select with hierarchical options: as set of selects, one for each level of the hierarchy.\n */\nimport chevronDown from '../../icons/chevron-down.svg';\n\n(function ($, pluginName) {\n  'use strict';\n\n  // Create the defaults once.\n  var defaults = {\n    noneLabel: '- Please choose -',\n    noneValue: '_none',\n    labels: []\n  };\n\n  // The actual plugin constructor.\n  function Plugin(element, options) {\n    this.$element = $(element);\n    this.$currentSelect = null;\n\n    this.settings = $.extend({}, defaults, options);\n    this.selectOptions = [];\n\n    this.init();\n  }\n\n  Plugin.prototype = {\n    init: function () {\n      var that = this;\n      // Ensure that we'll clearly initiate a new instance.\n      that.destroy();\n      that.$element.find('option').each(function () {\n        var $option = $(this);\n\n        that.selectOptions.push({\n          value: $option.val(),\n          label: $option.text(),\n          parent: $option.data('parent') || 0,\n          children: []\n        });\n      });\n\n      var tree = that.buildTree(that.selectOptions);\n\n      if (tree === null) {\n        return;\n      }\n\n      var initialValue = that.$element.val();\n      var initialParents = [];\n      var $selectElement = that.createSelect(tree);\n      var $currentSelect = $selectElement;\n\n      if (initialValue) {\n        if (typeof initialValue !== 'string') {\n          // If array, flatten it.\n          initialValue = initialValue.shift();\n        }\n\n        // Get all parents, starting from the initial value.\n        initialParents = that.getAllParents(initialValue);\n        // Reverse the parents, that they start from the root.\n        initialParents.reverse();\n        // Add the current value as the last leave.\n        initialParents.push(initialValue);\n      }\n\n      this.$element.after($selectElement);\n\n      $.each(initialParents, function (i, value) {\n        that.selectSetValue($currentSelect, value);\n\n        var $nextSelect = that.createSelect(that.getOptionInfoByValue(value).children, value, i + 1);\n\n        if (null !== $nextSelect) {\n          $currentSelect.after($nextSelect);\n          $currentSelect = $nextSelect;\n        }\n      });\n\n      // Hide the original.\n      that.$element.hide();\n    },\n\n    /**\n     * Destroy CSHS.\n     */\n    destroy: function () {\n      this.selectOptions = [];\n      this.$element.show().nextAll('.select-wrapper').remove();\n    },\n\n    /**\n     * Given an array of options, build an HTML select element.\n     *\n     * @param {HTMLElement[]|HTMLOptionElement[]} options\n     *   List of options.\n     * @param {String} [parent]\n     *   Parent option.\n     * @param {Number} [level]\n     *   Nesting level.\n     *\n     * @return {jQuery|null}\n     *   Newly created element.\n     */\n    createSelect: function (options, parent, level) {\n      if (!options || options.length < 1) {\n        return null;\n      }\n\n      parent = parent || this.settings.noneValue;\n      level = level || 0;\n\n      const required = this.$element.attr('required');\n\n      const wrapperClasses = [\n        'select-wrapper',\n        'relative',\n      ];\n\n      const chevronClasses = [\n        'pointer-events-none',\n        'absolute',\n        'inset-y-0',\n        'right-0',\n        'flex',\n        'items-center',\n        'px-2',\n      ];\n\n      if (required) chevronClasses.push('text-red-900');\n\n      const chevronElement = `\n      <div class=\"${chevronClasses.join(' ')}\">\n      ${chevronDown}\n      </div>\n      `;\n\n      const selectClasses = [\n        'simpler-select',\n        'w-full',\n      ];\n\n      const selectElement = `<select class=\"${selectClasses.join(' ')}\">`\n\n      var that = this;\n      var $select = $(selectElement).addClass(that.$element.attr('class'));\n      var $wrapper = $(`<div class=\"${wrapperClasses.join(' ')}\">`);\n\n      if (that.$element.hasClass('error')) {\n        $select.addClass('error');\n      }\n\n      // Always add the \"_none\" option.\n      $select.append('<option value=\"' + that.settings.noneValue + '\" data-parent-value=\"' + parent + '\">' + that.settings.noneLabel + '</option>');\n\n      $.each(options, function (i, option) {\n        // Do not add \"_none\" option (already added by code above).\n        if (option.value != that.settings.noneValue) {\n          var $option = $('<option>')\n            .val(option.value)\n            // Remove dashes from the beginning, then set the label.\n            .text(option.label.replace(/(- )+/, ''));\n\n          if (option.children.length) {\n            $option.addClass('has-children');\n          }\n\n          $select.append($option);\n        }\n      });\n\n      $select.change(function () {\n        that.$currentSelect = $(this);\n        // Remove deeper selects.\n        that.selectRemoveNext(that.$currentSelect);\n\n        // Get the selected value and also set the original drop-down.\n        var $selected = that.$currentSelect.find('option:selected');\n        var selectedValue = $selected.val();\n        var parentValue = $selected.data('parent-value');\n\n        if (undefined === parentValue) {\n          parentValue = selectedValue;\n        }\n\n        that.$element\n          .val(parentValue)\n          .change();\n\n        if (selectedValue == that.settings.noneValue) {\n          return;\n        }\n\n        // Build new child select.\n        var optionInfo = that.getOptionInfoByValue(selectedValue);\n\n        if (undefined !== optionInfo.children) {\n          that.addSelectAfter(that.createSelect(optionInfo.children, selectedValue, that.selectGetLevel()));\n        }\n      });\n\n      if (that.settings.labels[level]) {\n        $wrapper.append('<label>' + that.settings.labels[level] + '</label>');\n      }\n\n      $wrapper.append($select);\n      $wrapper.append(chevronElement);\n\n      return $wrapper;\n    },\n\n    /**\n     * Given an flat array an tree is built.\n     *\n     * @param {Object[]} array\n     *   Options list.\n     * @param {Object} [parent]\n     *   Parent option.\n     * @param {Array} [tree]\n     *   Existing options.\n     *\n     * @return {Array}\n     *   Options tree.\n     */\n    buildTree: function (array, parent, tree) {\n      tree = tree || [];\n      parent = parent || { value: 0 };\n\n      var children = $.grep(array, function (child) {\n        // Here must be no strict comparison!\n        return undefined !== child && child.parent == parent.value;\n      });\n\n      if (children.length) {\n        if (0 == parent.value) {\n          tree = children;\n        }\n        else {\n          parent.children = children;\n        }\n\n        for (var i = 0; i < children.length; i++) {\n          this.buildTree(array, children[i], tree);\n        }\n      }\n\n      return tree;\n    },\n\n    /**\n     * Set the value of a select to the given.\n     *\n     * @param {jQuery} $select\n     *   Wrapper element.\n     * @param {String} value\n     *   New value to set.\n     */\n    selectSetValue: function ($select, value) {\n      $select.find('select').val(value);\n    },\n\n    /**\n     * Remove all following selects.\n     */\n    selectRemoveNext: function () {\n      this.$currentSelect\n        .parents('.select-wrapper')\n        .nextAll('.select-wrapper')\n        .remove();\n    },\n\n    /**\n     * Add a newSelect after the currentSelect.\n     *\n     * @param {jQuery} $newSelect\n     *   New \"select\" element.\n     */\n    addSelectAfter: function ($newSelect) {\n      this.$currentSelect.parents('.select-wrapper').after($newSelect);\n    },\n\n    /**\n     * Get the hierarchy level of given select.\n     *\n     * @return {Number}\n     *   Number of wrappers.\n     */\n    selectGetLevel: function () {\n      return this.$currentSelect.parents('.form-type-cshs').find('.select-wrapper').length;\n    },\n\n    /**\n     * Given a value build an array of all parents (from leave to root).\n     *\n     * @param {String} value\n     *   Value of option.\n     * @param {Array} [parents]\n     *   Parent options.\n     *\n     * @return {Array}\n     *   Updated parent options list.\n     */\n    getAllParents: function (value, parents) {\n      if (value == this.settings.noneValue) {\n        return [];\n      }\n\n      parents = parents || [];\n\n      var parent = this.getOptionByValue(value).data('parent');\n\n      if (undefined !== parent && 0 != parent) {\n        parents.push(parent);\n        this.getAllParents(this.getOptionByValue(parent).val(), parents);\n      }\n\n      return parents;\n    },\n\n    /**\n     * Tiny helper to get the option jQuery object.\n     *\n     * @param {String} value\n     *   Value of an option.\n     *\n     * @return {jQuery}\n     *   Element.\n     */\n    getOptionByValue: function (value) {\n      return this.$element.find('option[value=\"' + value + '\"]');\n    },\n\n    /**\n     * Helper to get the info-object which corresponds to an option value.\n     *\n     * @param {String} value\n     *   Value of an option.\n     *\n     * @return {Object}\n     *   Element.\n     */\n    getOptionInfoByValue: function (value) {\n      var optionInfo = {};\n\n      $.each(this.selectOptions, function (idx, option) {\n        if (option.value == value) {\n          optionInfo = option;\n          return false;\n        }\n      });\n\n      return optionInfo;\n    }\n  };\n\n  // A really lightweight plugin wrapper around the constructor,\n  // preventing against multiple instantiations.\n  $.fn[pluginName] = function (options) {\n    this.each(function () {\n      if (!$.data(this, 'plugin_' + pluginName)) {\n        $.data(this, 'plugin_' + pluginName, new Plugin(this, options));\n      }\n    });\n\n    return this;\n  };\n})(jQuery, 'simplerSelect');\n","/**\n * @file\n * Provide dragging capabilities to admin uis.\n */\n\n/**\n * Triggers when weights columns are toggled.\n *\n * @event columnschange\n */\nimport move from '../../icons/move.svg';\nimport info from '../../icons/info.svg';\n\n(function ($, Drupal, drupalSettings) {\n  /**\n   * Store the state of weight columns display for all tables.\n   *\n   * Default value is to hide weight columns.\n   */\n  let showWeight = JSON.parse(\n    localStorage.getItem('Drupal.tableDrag.showWeight'),\n  );\n\n  /**\n   * Drag and drop table rows with field manipulation.\n   *\n   * Using the drupal_attach_tabledrag() function, any table with weights or\n   * parent relationships may be made into draggable tables. Columns containing\n   * a field may optionally be hidden, providing a better user experience.\n   *\n   * Created tableDrag instances may be modified with custom behaviors by\n   * overriding the .onDrag, .onDrop, .row.onSwap, and .row.onIndent methods.\n   * See blocks.js for an example of adding additional functionality to\n   * tableDrag.\n   *\n   * @type {Drupal~behavior}\n   */\n  Drupal.behaviors.tableDrag = {\n    attach(context, settings) {\n      function initTableDrag(table, base) {\n        if (table.length) {\n          // Create the new tableDrag instance. Save in the Drupal variable\n          // to allow other scripts access to the object.\n          Drupal.tableDrag[base] = new Drupal.tableDrag(\n            table[0],\n            settings.tableDrag[base],\n          );\n        }\n      }\n\n      Object.keys(settings.tableDrag || {}).forEach(base => {\n        initTableDrag(\n          $(context)\n            .find(`#${base}`)\n            .once('tabledrag'),\n          base,\n        );\n      });\n    },\n  };\n\n  /**\n   * Provides table and field manipulation.\n   *\n   * @constructor\n   *\n   * @param {HTMLElement} table\n   *   DOM object for the table to be made draggable.\n   * @param {object} tableSettings\n   *   Settings for the table added via drupal_add_dragtable().\n   */\n  Drupal.tableDrag = function (table, tableSettings) {\n    const self = this;\n    const $table = $(table);\n\n    /**\n     * @type {jQuery}\n     */\n    this.$table = $(table);\n\n    /**\n     *\n     * @type {HTMLElement}\n     */\n    this.table = table;\n\n    /**\n     * @type {object}\n     */\n    this.tableSettings = tableSettings;\n\n    /**\n     * Used to hold information about a current drag operation.\n     *\n     * @type {?HTMLElement}\n     */\n    this.dragObject = null;\n\n    /**\n     * Provides operations for row manipulation.\n     *\n     * @type {?HTMLElement}\n     */\n    this.rowObject = null;\n\n    /**\n     * Remember the previous element.\n     *\n     * @type {?HTMLElement}\n     */\n    this.oldRowElement = null;\n\n    /**\n     * Used to determine up or down direction from last mouse move.\n     *\n     * @type {number}\n     */\n    this.oldY = 0;\n\n    /**\n     * Whether anything in the entire table has changed.\n     *\n     * @type {bool}\n     */\n    this.changed = false;\n\n    /**\n     * Maximum amount of allowed parenting.\n     *\n     * @type {number}\n     */\n    this.maxDepth = 0;\n\n    /**\n     * Direction of the table.\n     *\n     * @type {number}\n     */\n    this.rtl = $(this.table).css('direction') === 'rtl' ? -1 : 1;\n\n    /**\n     *\n     * @type {bool}\n     */\n    this.striping = $(this.table).data('striping') === 1;\n\n    /**\n     * Configure the scroll settings.\n     *\n     * @type {object}\n     *\n     * @prop {number} amount\n     * @prop {number} interval\n     * @prop {number} trigger\n     */\n    this.scrollSettings = { amount: 4, interval: 50, trigger: 70 };\n\n    /**\n     *\n     * @type {?number}\n     */\n    this.scrollInterval = null;\n\n    /**\n     *\n     * @type {number}\n     */\n    this.scrollY = 0;\n\n    /**\n     *\n     * @type {number}\n     */\n    this.windowHeight = 0;\n\n    /**\n     * Check this table's settings for parent relationships.\n     *\n     * For efficiency, large sections of code can be skipped if we don't need to\n     * track horizontal movement and indentations.\n     *\n     * @type {bool}\n     */\n    this.indentEnabled = false;\n    Object.keys(tableSettings || {}).forEach(group => {\n      Object.keys(tableSettings[group] || {}).forEach(n => {\n        if (tableSettings[group][n].relationship === 'parent') {\n          this.indentEnabled = true;\n        }\n        if (tableSettings[group][n].limit > 0) {\n          this.maxDepth = tableSettings[group][n].limit;\n        }\n      });\n    });\n    if (this.indentEnabled) {\n      /**\n       * Total width of indents, set in makeDraggable.\n       *\n       * @type {number}\n       */\n      this.indentCount = 1;\n      // Find the width of indentations to measure mouse movements against.\n      // Because the table doesn't need to start with any indentations, we\n      // manually append 2 indentations in the first draggable row, measure\n      // the offset, then remove.\n      const indent = Drupal.theme('tableDragIndentation');\n      const testRow = $('<tr/>')\n        .addClass('draggable')\n        .appendTo(table);\n      const testCell = $('<td/>')\n        .appendTo(testRow)\n        .prepend(indent)\n        .prepend(indent);\n      const $indentation = testCell.find('.js-indentation');\n\n      /**\n       *\n       * @type {number}\n       */\n      this.indentAmount =\n        $indentation.get(1).offsetLeft - $indentation.get(0).offsetLeft;\n      testRow.remove();\n    }\n\n    // Make each applicable row draggable.\n    // Match immediate children of the parent element to allow nesting.\n    $table.find('> tr.draggable, > tbody > tr.draggable').each(function () {\n      self.makeDraggable(this);\n    });\n\n    const buttonClasses = [\n      'tabledrag-toggle-weight',\n      'appearance-none',\n      'ml-auto',\n      'px-4',\n      'py-3',\n      'border',\n      'border-transparent',\n      'rounded-lg',\n      'shadow',\n      'bg-cyan-500',\n      'text-white',\n      'hover:bg-cyan-600',\n      'focus:outline-none',\n      'focus:shadow-outline',\n      'focus:bg-cyan-600',\n      'transition',\n      'ease-in-out',\n      'duration-150'\n    ];\n\n    // Add a link before the table for users to show or hide weight columns.\n    $table.before(\n      $(`<button type=\"button\" class=\"${buttonClasses.join(' ')}\"></button>`)\n        .attr(\n          'title',\n          Drupal.t('Re-order rows by numerical weight instead of dragging.'),\n        )\n        .on(\n          'click',\n          $.proxy(function (e) {\n            e.preventDefault();\n            this.toggleColumns();\n          }, this),\n        )\n        .wrap('<div class=\"flex flex-col items-end my-2\"></div>')\n        .parent(),\n    );\n\n    // Initialize the specified columns (for example, weight or parent columns)\n    // to show or hide according to user preference. This aids accessibility\n    // so that, e.g., screen reader users can choose to enter weight values and\n    // manipulate form elements directly, rather than using drag-and-drop..\n    self.initColumns();\n\n    // Add event bindings to the document. The self variable is passed along\n    // as event handlers do not have direct access to the tableDrag object.\n    $(document).on('touchmove', event =>\n      self.dragRow(event.originalEvent.touches[0], self),\n    );\n    $(document).on('touchend', event =>\n      self.dropRow(event.originalEvent.touches[0], self),\n    );\n    $(document).on('mousemove pointermove', event => self.dragRow(event, self));\n    $(document).on('mouseup pointerup', event => self.dropRow(event, self));\n\n    // React to localStorage event showing or hiding weight columns.\n    $(window).on(\n      'storage',\n      $.proxy(function (e) {\n        // Only react to 'Drupal.tableDrag.showWeight' value change.\n        if (e.originalEvent.key === 'Drupal.tableDrag.showWeight') {\n          // This was changed in another window, get the new value for this\n          // window.\n          showWeight = JSON.parse(e.originalEvent.newValue);\n          this.displayColumns(showWeight);\n        }\n      }, this),\n    );\n  };\n\n  /**\n   * Initialize columns containing form elements to be hidden by default.\n   *\n   * Identify and mark each cell with a CSS class so we can easily toggle\n   * show/hide it. Finally, hide columns if user does not have a\n   * 'Drupal.tableDrag.showWeight' localStorage value.\n   */\n  Drupal.tableDrag.prototype.initColumns = function () {\n    const $table = this.$table;\n    let hidden;\n    let cell;\n    let columnIndex;\n    Object.keys(this.tableSettings || {}).forEach(group => {\n      // Find the first field in this group.\n      Object.keys(this.tableSettings[group]).some(tableSetting => {\n        const field = $table\n          .find(`.${this.tableSettings[group][tableSetting].target}`)\n          .eq(0);\n        if (field.length && this.tableSettings[group][tableSetting].hidden) {\n          hidden = this.tableSettings[group][tableSetting].hidden;\n          cell = field.closest('td');\n          return true;\n        }\n        return false;\n      });\n\n      // Mark the column containing this field so it can be hidden.\n      if (hidden && cell[0]) {\n        // Add 1 to our indexes. The nth-child selector is 1 based, not 0\n        // based. Match immediate children of the parent element to allow\n        // nesting.\n        columnIndex =\n          cell\n            .parent()\n            .find('> td')\n            .index(cell.get(0)) + 1;\n        $table\n          .find('> thead > tr, > tbody > tr, > tr')\n          .each(this.addColspanClass(columnIndex));\n      }\n    });\n    this.displayColumns(showWeight);\n  };\n\n  /**\n   * Mark cells that have colspan.\n   *\n   * In order to adjust the colspan instead of hiding them altogether.\n   *\n   * @param {number} columnIndex\n   *   The column index to add colspan class to.\n   *\n   * @return {function}\n   *   Function to add colspan class.\n   */\n  Drupal.tableDrag.prototype.addColspanClass = function (columnIndex) {\n    return function () {\n      // Get the columnIndex and adjust for any colspans in this row.\n      const $row = $(this);\n      let index = columnIndex;\n      const cells = $row.children();\n      let cell;\n      cells.each(function (n) {\n        if (n < index && this.colSpan && this.colSpan > 1) {\n          index -= this.colSpan - 1;\n        }\n      });\n      if (index > 0) {\n        cell = cells.filter(`:nth-child(${index})`);\n        if (cell[0].colSpan && cell[0].colSpan > 1) {\n          // If this cell has a colspan, mark it so we can reduce the colspan.\n          cell.addClass('tabledrag-has-colspan');\n        } else {\n          // Mark this cell so we can hide it.\n          cell.addClass('tabledrag-hide');\n        }\n      }\n    };\n  };\n\n  /**\n   * Hide or display weight columns. Triggers an event on change.\n   *\n   * @fires event:columnschange\n   *\n   * @param {bool} displayWeight\n   *   'true' will show weight columns.\n   */\n  Drupal.tableDrag.prototype.displayColumns = function (displayWeight) {\n    if (displayWeight) {\n      this.showColumns();\n    }\n    // Default action is to hide columns.\n    else {\n      this.hideColumns();\n    }\n    // Trigger an event to allow other scripts to react to this display change.\n    // Force the extra parameter as a bool.\n    $('table')\n      .findOnce('tabledrag')\n      .trigger('columnschange', !!displayWeight);\n  };\n\n  /**\n   * Toggle the weight column depending on 'showWeight' value.\n   *\n   * Store only default override.\n   */\n  Drupal.tableDrag.prototype.toggleColumns = function () {\n    showWeight = !showWeight;\n    this.displayColumns(showWeight);\n    if (showWeight) {\n      // Save default override.\n      localStorage.setItem('Drupal.tableDrag.showWeight', showWeight);\n    } else {\n      // Reset the value to its default.\n      localStorage.removeItem('Drupal.tableDrag.showWeight');\n    }\n  };\n\n  /**\n   * Hide the columns containing weight/parent form elements.\n   *\n   * Undo showColumns().\n   */\n  Drupal.tableDrag.prototype.hideColumns = function () {\n    const $tables = $('table').findOnce('tabledrag');\n    // Hide weight/parent cells and headers.\n    $tables.find('.tabledrag-hide').css('display', 'none');\n    // Show TableDrag handles.\n    $tables.find('.tabledrag-handle').css('display', '');\n    // Reduce the colspan of any effected multi-span columns.\n    $tables.find('.tabledrag-has-colspan').each(function () {\n      this.colSpan = this.colSpan - 1;\n    });\n    // Change link text.\n    $('.tabledrag-toggle-weight').text(Drupal.t('Show row weights'));\n  };\n\n  /**\n   * Show the columns containing weight/parent form elements.\n   *\n   * Undo hideColumns().\n   */\n  Drupal.tableDrag.prototype.showColumns = function () {\n    const $tables = $('table').findOnce('tabledrag');\n    // Show weight/parent cells and headers.\n    $tables.find('.tabledrag-hide').css('display', '');\n    // Hide TableDrag handles.\n    $tables.find('.tabledrag-handle').css('display', 'none');\n    // Increase the colspan for any columns where it was previously reduced.\n    $tables.find('.tabledrag-has-colspan').each(function () {\n      this.colSpan = this.colSpan + 1;\n    });\n    // Change link text.\n    $('.tabledrag-toggle-weight').text(Drupal.t('Hide row weights'));\n  };\n\n  /**\n   * Find the target used within a particular row and group.\n   *\n   * @param {string} group\n   *   Group selector.\n   * @param {HTMLElement} row\n   *   The row HTML element.\n   *\n   * @return {object}\n   *   The table row settings.\n   */\n  Drupal.tableDrag.prototype.rowSettings = function (group, row) {\n    const field = $(row).find(`.${group}`);\n    const tableSettingsGroup = this.tableSettings[group];\n    return Object.keys(tableSettingsGroup)\n      .map(delta => {\n        const targetClass = tableSettingsGroup[delta].target;\n        let rowSettings;\n        if (field.is(`.${targetClass}`)) {\n          // Return a copy of the row settings.\n          rowSettings = {};\n          Object.keys(tableSettingsGroup[delta]).forEach(n => {\n            rowSettings[n] = tableSettingsGroup[delta][n];\n          });\n        }\n        return rowSettings;\n      })\n      .filter(rowSetting => rowSetting)[0];\n  };\n\n  /**\n   * Take an item and add event handlers to make it become draggable.\n   *\n   * @param {HTMLElement} item\n   *   The item to add event handlers to.\n   */\n  Drupal.tableDrag.prototype.makeDraggable = function (item) {\n    const self = this;\n    const $item = $(item);\n    // Add a class to the title link.\n    $item\n      .find('td:first-of-type')\n      .find('a')\n      .addClass('menu-item__link');\n    // Create the handle.\n    const handleClasses = [\n      'tabledrag-handle',\n      'handle',\n      'cursor-move',\n      'align-middle',\n      'float-left'\n    ];\n    const handle = $(\n      `<span class=\"${handleClasses.join(' ')}\">${move}</span>`,\n    ).attr('title', Drupal.t('Drag to re-order'));\n    // Insert the handle after indentations (if any).\n    const $indentationLast = $item\n      .find('td:first-of-type')\n      .find('.js-indentation')\n      .eq(-1);\n    if ($indentationLast.length) {\n      $indentationLast.after(handle);\n      // Update the total width of indentation in this entire table.\n      self.indentCount = Math.max(\n        $item.find('.js-indentation').length,\n        self.indentCount,\n      );\n    } else {\n      $item\n        .find('td')\n        .eq(0)\n        .prepend(handle);\n    }\n\n    handle.on('mousedown touchstart pointerdown', event => {\n      event.preventDefault();\n      if (event.originalEvent.type === 'touchstart') {\n        event = event.originalEvent.touches[0];\n      }\n      self.dragStart(event, self, item);\n    });\n\n    // Prevent the anchor tag from jumping us to the top of the page.\n    handle.on('click', e => {\n      e.preventDefault();\n    });\n\n    // Set blur cleanup when a handle is focused.\n    handle.on('focus', () => {\n      self.safeBlur = true;\n    });\n\n    // On blur, fire the same function as a touchend/mouseup. This is used to\n    // update values after a row has been moved through the keyboard support.\n    handle.on('blur', event => {\n      if (self.rowObject && self.safeBlur) {\n        self.dropRow(event, self);\n      }\n    });\n\n    // Add arrow-key support to the handle.\n    handle.on('keydown', event => {\n      // If a rowObject doesn't yet exist and this isn't the tab key.\n      if (event.keyCode !== 9 && !self.rowObject) {\n        self.rowObject = new self.row(\n          item,\n          'keyboard',\n          self.indentEnabled,\n          self.maxDepth,\n          true,\n        );\n      }\n\n      let keyChange = false;\n      let groupHeight;\n\n      /* eslint-disable no-fallthrough */\n\n      switch (event.keyCode) {\n        // Left arrow.\n        case 37:\n        // Safari left arrow.\n        case 63234:\n          keyChange = true;\n          self.rowObject.indent(-1 * self.rtl);\n          break;\n\n        // Up arrow.\n        case 38:\n        // Safari up arrow.\n        case 63232: {\n          let $previousRow = $(self.rowObject.element).prev('tr:first-of-type');\n          let previousRow = $previousRow.get(0);\n          while (previousRow && $previousRow.is(':hidden')) {\n            $previousRow = $(previousRow).prev('tr:first-of-type');\n            previousRow = $previousRow.get(0);\n          }\n          if (previousRow) {\n            // Do not allow the onBlur cleanup.\n            self.safeBlur = false;\n            self.rowObject.direction = 'up';\n            keyChange = true;\n\n            if ($(item).is('.tabledrag-root')) {\n              // Swap with the previous top-level row.\n              groupHeight = 0;\n              while (\n                previousRow &&\n                $previousRow.find('.js-indentation').length\n              ) {\n                $previousRow = $(previousRow).prev('tr:first-of-type');\n                previousRow = $previousRow.get(0);\n                groupHeight += $previousRow.is(':hidden')\n                  ? 0\n                  : previousRow.offsetHeight;\n              }\n              if (previousRow) {\n                self.rowObject.swap('before', previousRow);\n                // No need to check for indentation, 0 is the only valid one.\n                window.scrollBy(0, -groupHeight);\n              }\n            } else if (\n              self.table.tBodies[0].rows[0] !== previousRow ||\n              $previousRow.is('.draggable')\n            ) {\n              // Swap with the previous row (unless previous row is the first\n              // one and undraggable).\n              self.rowObject.swap('before', previousRow);\n              self.rowObject.interval = null;\n              self.rowObject.indent(0);\n              window.scrollBy(0, -parseInt(item.offsetHeight, 10));\n            }\n            // Regain focus after the DOM manipulation.\n            handle.trigger('focus');\n          }\n          break;\n        }\n        // Right arrow.\n        case 39:\n        // Safari right arrow.\n        case 63235:\n          keyChange = true;\n          self.rowObject.indent(self.rtl);\n          break;\n\n        // Down arrow.\n        case 40:\n        // Safari down arrow.\n        case 63233: {\n          let $nextRow = $(self.rowObject.group)\n            .eq(-1)\n            .next('tr:first-of-type');\n          let nextRow = $nextRow.get(0);\n          while (nextRow && $nextRow.is(':hidden')) {\n            $nextRow = $(nextRow).next('tr:first-of-type');\n            nextRow = $nextRow.get(0);\n          }\n          if (nextRow) {\n            // Do not allow the onBlur cleanup.\n            self.safeBlur = false;\n            self.rowObject.direction = 'down';\n            keyChange = true;\n\n            if ($(item).is('.tabledrag-root')) {\n              // Swap with the next group (necessarily a top-level one).\n              groupHeight = 0;\n              const nextGroup = new self.row(\n                nextRow,\n                'keyboard',\n                self.indentEnabled,\n                self.maxDepth,\n                false,\n              );\n              if (nextGroup) {\n                $(nextGroup.group).each(function () {\n                  groupHeight += $(this).is(':hidden') ? 0 : this.offsetHeight;\n                });\n                const nextGroupRow = $(nextGroup.group)\n                  .eq(-1)\n                  .get(0);\n                self.rowObject.swap('after', nextGroupRow);\n                // No need to check for indentation, 0 is the only valid one.\n                window.scrollBy(0, parseInt(groupHeight, 10));\n              }\n            } else {\n              // Swap with the next row.\n              self.rowObject.swap('after', nextRow);\n              self.rowObject.interval = null;\n              self.rowObject.indent(0);\n              window.scrollBy(0, parseInt(item.offsetHeight, 10));\n            }\n            // Regain focus after the DOM manipulation.\n            handle.trigger('focus');\n          }\n          break;\n        }\n      }\n\n      /* eslint-enable no-fallthrough */\n\n      if (self.rowObject && self.rowObject.changed === true) {\n        $(item).addClass('drag');\n        if (self.oldRowElement) {\n          $(self.oldRowElement).removeClass('drag-previous');\n        }\n        self.oldRowElement = item;\n        if (self.striping === true) {\n          self.restripeTable();\n        }\n        self.onDrag();\n      }\n\n      // Returning false if we have an arrow key to prevent scrolling.\n      if (keyChange) {\n        return false;\n      }\n    });\n\n    // Compatibility addition, return false on keypress to prevent unwanted\n    // scrolling. IE and Safari will suppress scrolling on keydown, but all\n    // other browsers need to return false on keypress.\n    // http://www.quirksmode.org/js/keys.html\n    handle.on('keypress', event => {\n      /* eslint-disable no-fallthrough */\n\n      switch (event.keyCode) {\n        // Left arrow.\n        case 37:\n        // Up arrow.\n        case 38:\n        // Right arrow.\n        case 39:\n        // Down arrow.\n        case 40:\n          return false;\n      }\n\n      /* eslint-enable no-fallthrough */\n    });\n  };\n\n  /**\n   * Pointer event initiator, creates drag object and information.\n   *\n   * @param {jQuery.Event} event\n   *   The event object that trigger the drag.\n   * @param {Drupal.tableDrag} self\n   *   The drag handle.\n   * @param {HTMLElement} item\n   *   The item that that is being dragged.\n   */\n  Drupal.tableDrag.prototype.dragStart = function (event, self, item) {\n    // Create a new dragObject recording the pointer information.\n    self.dragObject = {};\n    self.dragObject.initOffset = self.getPointerOffset(item, event);\n    self.dragObject.initPointerCoords = self.pointerCoords(event);\n    if (self.indentEnabled) {\n      self.dragObject.indentPointerPos = self.dragObject.initPointerCoords;\n    }\n\n    // If there's a lingering row object from the keyboard, remove its focus.\n    if (self.rowObject) {\n      $(self.rowObject.element)\n        .find('a.tabledrag-handle')\n        .trigger('blur');\n    }\n\n    // Create a new rowObject for manipulation of this row.\n    self.rowObject = new self.row(\n      item,\n      'pointer',\n      self.indentEnabled,\n      self.maxDepth,\n      true,\n    );\n\n    // Save the position of the table.\n    self.table.topY = $(self.table).offset().top;\n    self.table.bottomY = self.table.topY + self.table.offsetHeight;\n\n    const dragClasses = [\n      'bg-cyan-100'\n    ];\n\n    // Add classes to the handle and row.\n    $(item).addClass(dragClasses.join(' '));\n\n    // Set the document to use the move cursor during drag.\n    $('body').addClass('drag');\n    if (self.oldRowElement) {\n      $(self.oldRowElement).removeClass('drag-previous');\n    }\n  };\n\n  /**\n   * Pointer movement handler, bound to document.\n   *\n   * @param {jQuery.Event} event\n   *   The pointer event.\n   * @param {Drupal.tableDrag} self\n   *   The tableDrag instance.\n   *\n   * @return {bool|undefined}\n   *   Undefined if no dragObject is defined, false otherwise.\n   */\n  Drupal.tableDrag.prototype.dragRow = function (event, self) {\n    if (self.dragObject) {\n      self.currentPointerCoords = self.pointerCoords(event);\n      const y = self.currentPointerCoords.y - self.dragObject.initOffset.y;\n      const x = self.currentPointerCoords.x - self.dragObject.initOffset.x;\n\n      // Check for row swapping and vertical scrolling.\n      if (y !== self.oldY) {\n        self.rowObject.direction = y > self.oldY ? 'down' : 'up';\n        // Update the old value.\n        self.oldY = y;\n        // Check if the window should be scrolled (and how fast).\n        const scrollAmount = self.checkScroll(self.currentPointerCoords.y);\n        // Stop any current scrolling.\n        clearInterval(self.scrollInterval);\n        // Continue scrolling if the mouse has moved in the scroll direction.\n        if (\n          (scrollAmount > 0 && self.rowObject.direction === 'down') ||\n          (scrollAmount < 0 && self.rowObject.direction === 'up')\n        ) {\n          self.setScroll(scrollAmount);\n        }\n\n        // If we have a valid target, perform the swap and restripe the table.\n        const currentRow = self.findDropTargetRow(x, y);\n        if (currentRow) {\n          if (self.rowObject.direction === 'down') {\n            self.rowObject.swap('after', currentRow, self);\n          } else {\n            self.rowObject.swap('before', currentRow, self);\n          }\n          if (self.striping === true) {\n            self.restripeTable();\n          }\n        }\n      }\n\n      // Similar to row swapping, handle indentations.\n      if (self.indentEnabled) {\n        const xDiff =\n          self.currentPointerCoords.x - self.dragObject.indentPointerPos.x;\n        // Set the number of indentations the pointer has been moved left or\n        // right.\n        const indentDiff = Math.round(xDiff / self.indentAmount);\n        // Indent the row with our estimated diff, which may be further\n        // restricted according to the rows around this row.\n        const indentChange = self.rowObject.indent(indentDiff);\n        // Update table and pointer indentations.\n        self.dragObject.indentPointerPos.x +=\n          self.indentAmount * indentChange * self.rtl;\n        self.indentCount = Math.max(self.indentCount, self.rowObject.indents);\n      }\n\n      return false;\n    }\n  };\n\n  /**\n   * Pointerup behavior.\n   *\n   * @param {jQuery.Event} event\n   *   The pointer event.\n   * @param {Drupal.tableDrag} self\n   *   The tableDrag instance.\n   */\n  Drupal.tableDrag.prototype.dropRow = function (event, self) {\n    let droppedRow;\n    let $droppedRow;\n\n    // Drop row functionality.\n    if (self.rowObject !== null) {\n      droppedRow = self.rowObject.element;\n      $droppedRow = $(droppedRow);\n      // The row is already in the right place so we just release it.\n      if (self.rowObject.changed === true) {\n        // Update the fields in the dropped row.\n        self.updateFields(droppedRow);\n\n        // If a setting exists for affecting the entire group, update all the\n        // fields in the entire dragged group.\n        Object.keys(self.tableSettings || {}).forEach(group => {\n          const rowSettings = self.rowSettings(group, droppedRow);\n          if (rowSettings.relationship === 'group') {\n            Object.keys(self.rowObject.children || {}).forEach(n => {\n              self.updateField(self.rowObject.children[n], group);\n            });\n          }\n        });\n\n        self.rowObject.markChanged();\n        if (self.changed === false) {\n          $(Drupal.theme('tableDragChangedWarning'))\n            .insertBefore(self.table)\n            .hide()\n            .fadeIn('slow');\n          self.changed = true;\n        }\n      }\n\n      if (self.indentEnabled) {\n        self.rowObject.removeIndentClasses();\n      }\n      if (self.oldRowElement) {\n        $(self.oldRowElement).removeClass('drag-previous');\n      }\n      $droppedRow.removeClass('drag').addClass('drag-previous');\n      self.oldRowElement = droppedRow;\n      self.onDrop();\n      self.rowObject = null;\n    }\n\n    // Functionality specific only to pointerup events.\n    if (self.dragObject !== null) {\n      self.dragObject = null;\n      $('body').removeClass('drag');\n      clearInterval(self.scrollInterval);\n    }\n  };\n\n  /**\n   * Get the coordinates from the event (allowing for browser differences).\n   *\n   * @param {jQuery.Event} event\n   *   The pointer event.\n   *\n   * @return {object}\n   *   An object with `x` and `y` keys indicating the position.\n   */\n  Drupal.tableDrag.prototype.pointerCoords = function (event) {\n    if (event.pageX || event.pageY) {\n      return { x: event.pageX, y: event.pageY };\n    }\n    return {\n      x: event.clientX + document.body.scrollLeft - document.body.clientLeft,\n      y: event.clientY + document.body.scrollTop - document.body.clientTop,\n    };\n  };\n\n  /**\n   * Get the event offset from the target element.\n   *\n   * Given a target element and a pointer event, get the event offset from that\n   * element. To do this we need the element's position and the target position.\n   *\n   * @param {HTMLElement} target\n   *   The target HTML element.\n   * @param {jQuery.Event} event\n   *   The pointer event.\n   *\n   * @return {object}\n   *   An object with `x` and `y` keys indicating the position.\n   */\n  Drupal.tableDrag.prototype.getPointerOffset = function (target, event) {\n    const docPos = $(target).offset();\n    const pointerPos = this.pointerCoords(event);\n    return { x: pointerPos.x - docPos.left, y: pointerPos.y - docPos.top };\n  };\n\n  /**\n   * Find the row the mouse is currently over.\n   *\n   * This row is then taken and swapped with the one being dragged.\n   *\n   * @param {number} x\n   *   The x coordinate of the mouse on the page (not the screen).\n   * @param {number} y\n   *   The y coordinate of the mouse on the page (not the screen).\n   *\n   * @return {*}\n   *   The drop target row, if found.\n   */\n  Drupal.tableDrag.prototype.findDropTargetRow = function (x, y) {\n    const rows = $(this.table.tBodies[0].rows).not(':hidden');\n    for (let n = 0; n < rows.length; n++) {\n      let row = rows[n];\n      let $row = $(row);\n      const rowY = $row.offset().top;\n      let rowHeight;\n      // Because Safari does not report offsetHeight on table rows, but does on\n      // table cells, grab the firstChild of the row and use that instead.\n      // http://jacob.peargrove.com/blog/2006/technical/table-row-offsettop-bug-in-safari.\n      if (row.offsetHeight === 0) {\n        rowHeight = parseInt(row.firstChild.offsetHeight, 10) / 2;\n      }\n      // Other browsers.\n      else {\n        rowHeight = parseInt(row.offsetHeight, 10) / 2;\n      }\n\n      // Because we always insert before, we need to offset the height a bit.\n      if (y > rowY - rowHeight && y < rowY + rowHeight) {\n        if (this.indentEnabled) {\n          // Check that this row is not a child of the row being dragged.\n          if (\n            Object.keys(this.rowObject.group).some(\n              o => this.rowObject.group[o] === row,\n            )\n          ) {\n            return null;\n          }\n        }\n        // Do not allow a row to be swapped with itself.\n        else if (row === this.rowObject.element) {\n          return null;\n        }\n\n        // Check that swapping with this row is allowed.\n        if (!this.rowObject.isValidSwap(row)) {\n          return null;\n        }\n\n        // We may have found the row the mouse just passed over, but it doesn't\n        // take into account hidden rows. Skip backwards until we find a\n        // draggable row.\n        while ($row.is(':hidden') && $row.prev('tr').is(':hidden')) {\n          $row = $row.prev('tr:first-of-type');\n          row = $row.get(0);\n        }\n        return row;\n      }\n    }\n    return null;\n  };\n\n  /**\n   * After the row is dropped, update the table fields.\n   *\n   * @param {HTMLElement} changedRow\n   *   DOM object for the row that was just dropped.\n   */\n  Drupal.tableDrag.prototype.updateFields = function (changedRow) {\n    Object.keys(this.tableSettings || {}).forEach(group => {\n      // Each group may have a different setting for relationship, so we find\n      // the source rows for each separately.\n      this.updateField(changedRow, group);\n    });\n  };\n\n  /**\n   * After the row is dropped, update a single table field.\n   *\n   * @param {HTMLElement} changedRow\n   *   DOM object for the row that was just dropped.\n   * @param {string} group\n   *   The settings group on which field updates will occur.\n   */\n  Drupal.tableDrag.prototype.updateField = function (changedRow, group) {\n    let rowSettings = this.rowSettings(group, changedRow);\n    const $changedRow = $(changedRow);\n    let sourceRow;\n    let $previousRow;\n    let previousRow;\n    let useSibling;\n    // Set the row as its own target.\n    if (\n      rowSettings.relationship === 'self' ||\n      rowSettings.relationship === 'group'\n    ) {\n      sourceRow = changedRow;\n    }\n    // Siblings are easy, check previous and next rows.\n    else if (rowSettings.relationship === 'sibling') {\n      $previousRow = $changedRow.prev('tr:first-of-type');\n      previousRow = $previousRow.get(0);\n      const $nextRow = $changedRow.next('tr:first-of-type');\n      const nextRow = $nextRow.get(0);\n      sourceRow = changedRow;\n      if (\n        $previousRow.is('.draggable') &&\n        $previousRow.find(`.${group}`).length\n      ) {\n        if (this.indentEnabled) {\n          if (\n            $previousRow.find('.js-indentations').length ===\n            $changedRow.find('.js-indentations').length\n          ) {\n            sourceRow = previousRow;\n          }\n        } else {\n          sourceRow = previousRow;\n        }\n      } else if (\n        $nextRow.is('.draggable') &&\n        $nextRow.find(`.${group}`).length\n      ) {\n        if (this.indentEnabled) {\n          if (\n            $nextRow.find('.js-indentations').length ===\n            $changedRow.find('.js-indentations').length\n          ) {\n            sourceRow = nextRow;\n          }\n        } else {\n          sourceRow = nextRow;\n        }\n      }\n    }\n    // Parents, look up the tree until we find a field not in this group.\n    // Go up as many parents as indentations in the changed row.\n    else if (rowSettings.relationship === 'parent') {\n      $previousRow = $changedRow.prev('tr');\n      previousRow = $previousRow;\n      while (\n        $previousRow.length &&\n        $previousRow.find('.js-indentation').length >= this.rowObject.indents\n      ) {\n        $previousRow = $previousRow.prev('tr');\n        previousRow = $previousRow;\n      }\n      // If we found a row.\n      if ($previousRow.length) {\n        sourceRow = $previousRow.get(0);\n      }\n      // Otherwise we went all the way to the left of the table without finding\n      // a parent, meaning this item has been placed at the root level.\n      else {\n        // Use the first row in the table as source, because it's guaranteed to\n        // be at the root level. Find the first item, then compare this row\n        // against it as a sibling.\n        sourceRow = $(this.table)\n          .find('tr.draggable:first-of-type')\n          .get(0);\n        if (sourceRow === this.rowObject.element) {\n          sourceRow = $(this.rowObject.group[this.rowObject.group.length - 1])\n            .next('tr.draggable')\n            .get(0);\n        }\n        useSibling = true;\n      }\n    }\n\n    // Because we may have moved the row from one category to another,\n    // take a look at our sibling and borrow its sources and targets.\n    this.copyDragClasses(sourceRow, changedRow, group);\n    rowSettings = this.rowSettings(group, changedRow);\n\n    // In the case that we're looking for a parent, but the row is at the top\n    // of the tree, copy our sibling's values.\n    if (useSibling) {\n      rowSettings.relationship = 'sibling';\n      rowSettings.source = rowSettings.target;\n    }\n\n    const targetClass = `.${rowSettings.target}`;\n    const targetElement = $changedRow.find(targetClass).get(0);\n\n    // Check if a target element exists in this row.\n    if (targetElement) {\n      const sourceClass = `.${rowSettings.source}`;\n      const sourceElement = $(sourceClass, sourceRow).get(0);\n      switch (rowSettings.action) {\n        case 'depth':\n          // Get the depth of the target row.\n          targetElement.value = $(sourceElement)\n            .closest('tr')\n            .find('.js-indentation').length;\n          break;\n\n        case 'match':\n          // Update the value.\n          targetElement.value = sourceElement.value;\n          break;\n\n        case 'order': {\n          const siblings = this.rowObject.findSiblings(rowSettings);\n          if ($(targetElement).is('select')) {\n            // Get a list of acceptable values.\n            const values = [];\n            $(targetElement)\n              .find('option')\n              .each(function () {\n                values.push(this.value);\n              });\n            const maxVal = values[values.length - 1];\n            // Populate the values in the siblings.\n            $(siblings)\n              .find(targetClass)\n              .each(function () {\n                // If there are more items than possible values, assign the\n                // maximum value to the row.\n                if (values.length > 0) {\n                  this.value = values.shift();\n                } else {\n                  this.value = maxVal;\n                }\n              });\n          } else {\n            // Assume a numeric input field.\n            let weight =\n              parseInt(\n                $(siblings[0])\n                  .find(targetClass)\n                  .val(),\n                10,\n              ) || 0;\n            $(siblings)\n              .find(targetClass)\n              .each(function () {\n                this.value = weight;\n                weight++;\n              });\n          }\n          break;\n        }\n      }\n    }\n  };\n\n  /**\n   * Copy all tableDrag related classes from one row to another.\n   *\n   * Copy all special tableDrag classes from one row's form elements to a\n   * different one, removing any special classes that the destination row\n   * may have had.\n   *\n   * @param {HTMLElement} sourceRow\n   *   The element for the source row.\n   * @param {HTMLElement} targetRow\n   *   The element for the target row.\n   * @param {string} group\n   *   The group selector.\n   */\n  Drupal.tableDrag.prototype.copyDragClasses = function (\n    sourceRow,\n    targetRow,\n    group,\n  ) {\n    const sourceElement = $(sourceRow).find(`.${group}`);\n    const targetElement = $(targetRow).find(`.${group}`);\n    if (sourceElement.length && targetElement.length) {\n      targetElement[0].className = sourceElement[0].className;\n    }\n  };\n\n  /**\n   * Check the suggested scroll of the table.\n   *\n   * @param {number} cursorY\n   *   The Y position of the cursor.\n   *\n   * @return {number}\n   *   The suggested scroll.\n   */\n  Drupal.tableDrag.prototype.checkScroll = function (cursorY) {\n    const de = document.documentElement;\n    const b = document.body;\n\n    const windowHeight =\n      window.innerHeight ||\n      (de.clientHeight && de.clientWidth !== 0\n        ? de.clientHeight\n        : b.offsetHeight);\n    this.windowHeight = windowHeight;\n    let scrollY;\n    if (document.all) {\n      scrollY = !de.scrollTop ? b.scrollTop : de.scrollTop;\n    } else {\n      scrollY = window.pageYOffset ? window.pageYOffset : window.scrollY;\n    }\n    this.scrollY = scrollY;\n    const trigger = this.scrollSettings.trigger;\n    let delta = 0;\n\n    // Return a scroll speed relative to the edge of the screen.\n    if (cursorY - scrollY > windowHeight - trigger) {\n      delta = trigger / (windowHeight + scrollY - cursorY);\n      delta = delta > 0 && delta < trigger ? delta : trigger;\n      return delta * this.scrollSettings.amount;\n    }\n    if (cursorY - scrollY < trigger) {\n      delta = trigger / (cursorY - scrollY);\n      delta = delta > 0 && delta < trigger ? delta : trigger;\n      return -delta * this.scrollSettings.amount;\n    }\n  };\n\n  /**\n   * Set the scroll for the table.\n   *\n   * @param {number} scrollAmount\n   *   The amount of scroll to apply to the window.\n   */\n  Drupal.tableDrag.prototype.setScroll = function (scrollAmount) {\n    const self = this;\n\n    this.scrollInterval = setInterval(() => {\n      // Update the scroll values stored in the object.\n      self.checkScroll(self.currentPointerCoords.y);\n      const aboveTable = self.scrollY > self.table.topY;\n      const belowTable = self.scrollY + self.windowHeight < self.table.bottomY;\n      if (\n        (scrollAmount > 0 && belowTable) ||\n        (scrollAmount < 0 && aboveTable)\n      ) {\n        window.scrollBy(0, scrollAmount);\n      }\n    }, this.scrollSettings.interval);\n  };\n\n  /**\n   * Command to restripe table properly.\n   */\n  Drupal.tableDrag.prototype.restripeTable = function () {\n    // :even and :odd are reversed because jQuery counts from 0 and\n    // we count from 1, so we're out of sync.\n    // Match immediate children of the parent element to allow nesting.\n    $(this.table)\n      .find('> tbody > tr.draggable, > tr.draggable')\n      .filter(':visible')\n      .filter(':odd')\n      .removeClass('odd')\n      .addClass('even')\n      .end()\n      .filter(':even')\n      .removeClass('even')\n      .addClass('odd');\n  };\n\n  /**\n   * Stub function. Allows a custom handler when a row begins dragging.\n   *\n   * @return {null}\n   *   Returns null when the stub function is used.\n   */\n  Drupal.tableDrag.prototype.onDrag = function () {\n    return null;\n  };\n\n  /**\n   * Stub function. Allows a custom handler when a row is dropped.\n   *\n   * @return {null}\n   *   Returns null when the stub function is used.\n   */\n  Drupal.tableDrag.prototype.onDrop = function () {\n    return null;\n  };\n\n  /**\n   * Constructor to make a new object to manipulate a table row.\n   *\n   * @param {HTMLElement} tableRow\n   *   The DOM element for the table row we will be manipulating.\n   * @param {string} method\n   *   The method in which this row is being moved. Either 'keyboard' or\n   *   'mouse'.\n   * @param {bool} indentEnabled\n   *   Whether the containing table uses indentations. Used for optimizations.\n   * @param {number} maxDepth\n   *   The maximum amount of indentations this row may contain.\n   * @param {bool} addClasses\n   *   Whether we want to add classes to this row to indicate child\n   *   relationships.\n   */\n  Drupal.tableDrag.prototype.row = function (\n    tableRow,\n    method,\n    indentEnabled,\n    maxDepth,\n    addClasses,\n  ) {\n    const $tableRow = $(tableRow);\n\n    this.element = tableRow;\n    this.method = method;\n    this.group = [tableRow];\n    this.groupDepth = $tableRow.find('.js-indentation').length;\n    this.changed = false;\n    this.table = $tableRow.closest('table')[0];\n    this.indentEnabled = indentEnabled;\n    this.maxDepth = maxDepth;\n    // Direction the row is being moved.\n    this.direction = '';\n    if (this.indentEnabled) {\n      this.indents = $tableRow.find('.js-indentation').length;\n      this.children = this.findChildren(addClasses);\n      this.group = $.merge(this.group, this.children);\n      // Find the depth of this entire group.\n      for (let n = 0; n < this.group.length; n++) {\n        this.groupDepth = Math.max(\n          $(this.group[n]).find('.js-indentation').length,\n          this.groupDepth,\n        );\n      }\n    }\n  };\n\n  /**\n   * Find all children of rowObject by indentation.\n   *\n   * @param {bool} addClasses\n   *   Whether we want to add classes to this row to indicate child\n   *   relationships.\n   *\n   * @return {Array}\n   *   An array of children of the row.\n   */\n  Drupal.tableDrag.prototype.row.prototype.findChildren = function (addClasses) {\n    const parentIndentation = this.indents;\n    let currentRow = $(this.element, this.table).next('tr.draggable');\n    const rows = [];\n    let child = 0;\n\n    function rowIndentation(indentNum, el) {\n      const self = $(el);\n      if (child === 1 && indentNum === parentIndentation) {\n        self.addClass('tree-child-first');\n      }\n      if (indentNum === parentIndentation) {\n        self.addClass('tree-child');\n      } else if (indentNum > parentIndentation) {\n        self.addClass('tree-child-horizontal');\n      }\n    }\n\n    while (currentRow.length) {\n      // A greater indentation indicates this is a child.\n      if (currentRow.find('.js-indentation').length > parentIndentation) {\n        child++;\n        rows.push(currentRow[0]);\n        if (addClasses) {\n          currentRow.find('.js-indentation').each(rowIndentation);\n        }\n      } else {\n        break;\n      }\n      currentRow = currentRow.next('tr.draggable');\n    }\n    if (addClasses && rows.length) {\n      $(rows[rows.length - 1])\n        .find(`.js-indentation:nth-child(${parentIndentation + 1})`)\n        .addClass('tree-child-last');\n    }\n    return rows;\n  };\n\n  /**\n   * Ensure that two rows are allowed to be swapped.\n   *\n   * @param {HTMLElement} row\n   *   DOM object for the row being considered for swapping.\n   *\n   * @return {bool}\n   *   Whether the swap is a valid swap or not.\n   */\n  Drupal.tableDrag.prototype.row.prototype.isValidSwap = function (row) {\n    const $row = $(row);\n    if (this.indentEnabled) {\n      let prevRow;\n      let nextRow;\n      if (this.direction === 'down') {\n        prevRow = row;\n        nextRow = $row.next('tr').get(0);\n      } else {\n        prevRow = $row.prev('tr').get(0);\n        nextRow = row;\n      }\n      this.interval = this.validIndentInterval(prevRow, nextRow);\n\n      // We have an invalid swap if the valid indentations interval is empty.\n      if (this.interval.min > this.interval.max) {\n        return false;\n      }\n    }\n\n    // Do not let an un-draggable first row have anything put before it.\n    if (this.table.tBodies[0].rows[0] === row && $row.is(':not(.draggable)')) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Perform the swap between two rows.\n   *\n   * @param {string} position\n   *   Whether the swap will occur 'before' or 'after' the given row.\n   * @param {HTMLElement} row\n   *   DOM element what will be swapped with the row group.\n   */\n  Drupal.tableDrag.prototype.row.prototype.swap = function (position, row) {\n    // Makes sure only DOM object are passed to Drupal.detachBehaviors().\n    this.group.forEach(row => {\n      Drupal.detachBehaviors(row, drupalSettings, 'move');\n    });\n    $(row)[position](this.group);\n    // Makes sure only DOM object are passed to Drupal.attachBehaviors()s.\n    this.group.forEach(row => {\n      Drupal.attachBehaviors(row, drupalSettings);\n    });\n    this.changed = true;\n    this.onSwap(row);\n  };\n\n  /**\n   * Determine the valid indentations interval for the row at a given position.\n   *\n   * @param {?HTMLElement} prevRow\n   *   DOM object for the row before the tested position\n   *   (or null for first position in the table).\n   * @param {?HTMLElement} nextRow\n   *   DOM object for the row after the tested position\n   *   (or null for last position in the table).\n   *\n   * @return {object}\n   *   An object with the keys `min` and `max` to indicate the valid indent\n   *   interval.\n   */\n  Drupal.tableDrag.prototype.row.prototype.validIndentInterval = function (\n    prevRow,\n    nextRow,\n  ) {\n    const $prevRow = $(prevRow);\n    let maxIndent;\n\n    // Minimum indentation:\n    // Do not orphan the next row.\n    const minIndent = nextRow ? $(nextRow).find('.js-indentation').length : 0;\n\n    // Maximum indentation:\n    if (\n      !prevRow ||\n      $prevRow.is(':not(.draggable)') ||\n      $(this.element).is('.tabledrag-root')\n    ) {\n      // Do not indent:\n      // - the first row in the table,\n      // - rows dragged below a non-draggable row,\n      // - 'root' rows.\n      maxIndent = 0;\n    } else {\n      // Do not go deeper than as a child of the previous row.\n      maxIndent =\n        $prevRow.find('.js-indentation').length +\n        ($prevRow.is('.tabledrag-leaf') ? 0 : 1);\n      // Limit by the maximum allowed depth for the table.\n      if (this.maxDepth) {\n        maxIndent = Math.min(\n          maxIndent,\n          this.maxDepth - (this.groupDepth - this.indents),\n        );\n      }\n    }\n\n    return { min: minIndent, max: maxIndent };\n  };\n\n  /**\n   * Indent a row within the legal bounds of the table.\n   *\n   * @param {number} indentDiff\n   *   The number of additional indentations proposed for the row (can be\n   *   positive or negative). This number will be adjusted to nearest valid\n   *   indentation level for the row.\n   *\n   * @return {number}\n   *   The number of indentations applied.\n   */\n  Drupal.tableDrag.prototype.row.prototype.indent = function (indentDiff) {\n    const $group = $(this.group);\n    // Determine the valid indentations interval if not available yet.\n    if (!this.interval) {\n      const prevRow = $(this.element)\n        .prev('tr')\n        .get(0);\n      const nextRow = $group\n        .eq(-1)\n        .next('tr')\n        .get(0);\n      this.interval = this.validIndentInterval(prevRow, nextRow);\n    }\n\n    // Adjust to the nearest valid indentation.\n    let indent = this.indents + indentDiff;\n    indent = Math.max(indent, this.interval.min);\n    indent = Math.min(indent, this.interval.max);\n    indentDiff = indent - this.indents;\n\n    for (let n = 1; n <= Math.abs(indentDiff); n++) {\n      // Add or remove indentations.\n      if (indentDiff < 0) {\n        $group.find('.js-indentation:first-of-type').remove();\n        this.indents--;\n      } else {\n        $group\n          .find('td:first-of-type')\n          .prepend(Drupal.theme('tableDragIndentation'));\n        this.indents++;\n      }\n    }\n    if (indentDiff) {\n      // Update indentation for this row.\n      this.changed = true;\n      this.groupDepth += indentDiff;\n      this.onIndent();\n    }\n\n    return indentDiff;\n  };\n\n  /**\n   * Find all siblings for a row.\n   *\n   * According to its subgroup or indentation. Note that the passed-in row is\n   * included in the list of siblings.\n   *\n   * @param {object} rowSettings\n   *   The field settings we're using to identify what constitutes a sibling.\n   *\n   * @return {Array}\n   *   An array of siblings.\n   */\n  Drupal.tableDrag.prototype.row.prototype.findSiblings = function (\n    rowSettings,\n  ) {\n    const siblings = [];\n    const directions = ['prev', 'next'];\n    const rowIndentation = this.indents;\n    let checkRowIndentation;\n    for (let d = 0; d < directions.length; d++) {\n      let checkRow = $(this.element)[directions[d]]();\n      while (checkRow.length) {\n        // Check that the sibling contains a similar target field.\n        if (checkRow.find(`.${rowSettings.target}`)) {\n          // Either add immediately if this is a flat table, or check to ensure\n          // that this row has the same level of indentation.\n          if (this.indentEnabled) {\n            checkRowIndentation = checkRow.find('.js-indentation').length;\n          }\n\n          if (!this.indentEnabled || checkRowIndentation === rowIndentation) {\n            siblings.push(checkRow[0]);\n          } else if (checkRowIndentation < rowIndentation) {\n            // No need to keep looking for siblings when we get to a parent.\n            break;\n          }\n        } else {\n          break;\n        }\n        checkRow = checkRow[directions[d]]();\n      }\n      // Since siblings are added in reverse order for previous, reverse the\n      // completed list of previous siblings. Add the current row and continue.\n      if (directions[d] === 'prev') {\n        siblings.reverse();\n        siblings.push(this.element);\n      }\n    }\n    return siblings;\n  };\n\n  /**\n   * Remove indentation helper classes from the current row group.\n   */\n  Drupal.tableDrag.prototype.row.prototype.removeIndentClasses = function () {\n    Object.keys(this.children || {}).forEach(n => {\n      $(this.children[n])\n        .find('.js-indentation')\n        .removeClass('tree-child')\n        .removeClass('tree-child-first')\n        .removeClass('tree-child-last')\n        .removeClass('tree-child-horizontal');\n    });\n  };\n\n  /**\n   * Add an asterisk or other marker to the changed row.\n   */\n  Drupal.tableDrag.prototype.row.prototype.markChanged = function () {\n    const marker = Drupal.theme('tableDragChangedMarker');\n    const cell = $(this.element).find('td:first-of-type');\n    if (cell.find('.tabledrag-changed').length === 0) {\n      cell.append(marker);\n    }\n  };\n\n  /**\n   * Stub function. Allows a custom handler when a row is indented.\n   *\n   * @return {null}\n   *   Returns null when the stub function is used.\n   */\n  Drupal.tableDrag.prototype.row.prototype.onIndent = function () {\n    return null;\n  };\n\n  /**\n   * Stub function. Allows a custom handler when a row is swapped.\n   *\n   * @param {HTMLElement} swappedRow\n   *   The element for the swapped row.\n   *\n   * @return {null}\n   *   Returns null when the stub function is used.\n   */\n  Drupal.tableDrag.prototype.row.prototype.onSwap = function (swappedRow) {\n    return null;\n  };\n\n  $.extend(\n    Drupal.theme,\n    /** @lends Drupal.theme */ {\n      /**\n       * @return {string}\n       *  Markup for the marker.\n       */\n      tableDragChangedMarker() {\n        const markerClasses = [\n          'tabledrag-changed',\n          'font-bold',\n        ];\n\n        return `\n        <span title=\"${Drupal.t('Changed')}\" class=\"${markerClasses.join(' ')}\">${info}</span>`;\n      },\n\n      /**\n       * @return {string}\n       *   Markup for the indentation.\n       */\n      tableDragIndentation() {\n        return '<div class=\"js-indentation indentation\">&nbsp;</div>';\n      },\n\n      /**\n       * @return {string}\n       *   Markup for the warning.\n       */\n      tableDragChangedWarning() {\n        const warningClasses = [\n          ''\n        ];\n\n        return `\n        <div role=\"alert\" class=\"mb-1 border-l-8 p-4 bg-orange-100 border-orange-500 text-orange-900\">\n          <div class=\"flex items-center\">\n            ${Drupal.theme('tableDragChangedMarker')}\n            <div class=\"mx-3\">\n              ${Drupal.t('You have unsaved changes.')}\n            </div>\n          </div>\n        </div>`;\n      },\n    },\n  );\n})(jQuery, Drupal, drupalSettings);\n","// extracted by mini-css-extract-plugin\nexport {};"],"sourceRoot":""}