{"version":3,"sources":["webpack://rain/./node_modules/alpinejs/dist/alpine.js","webpack://rain/./icons/chevron-down.svg","webpack://rain/./icons/info.svg","webpack://rain/./icons/more-vertical.svg","webpack://rain/./icons/move.svg","webpack://rain/webpack/bootstrap","webpack://rain/webpack/runtime/compat get default export","webpack://rain/webpack/runtime/define property getters","webpack://rain/webpack/runtime/hasOwnProperty shorthand","webpack://rain/./js/src/cshs.es6.js","webpack://rain/./js/src/dropbutton.es6.js","webpack://rain/./js/src/simpler-select.es6.js","webpack://rain/./js/src/tabledrag.es6.js"],"names":["module","exports","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","arrayUnique","array","Array","from","Set","isTesting","navigator","userAgent","includes","checkedAttrLooseCompare","valueA","valueB","warnIfMalformedTemplate","el","directive","tagName","toLowerCase","console","warn","content","childElementCount","camelCase","subject","replace","match","char","toUpperCase","walk","callback","node","firstElementChild","nextElementSibling","debounce","func","wait","timeout","context","this","args","later","clearTimeout","setTimeout","handleError","expression","error","assign","tryCatch","cb","Promise","catch","e","saferEval","dataContext","additionalHelperVariables","call","Function","values","xAttrRE","isXAttr","attr","name","replaceAtAndColonWithStandardSyntax","test","getXAttrs","component","type","directives","attributes","map","parseHtmlAttribute","spreadDirective","spreadObject","$data","concat","entries","directiveOrder","sort","a","b","typeA","indexOf","typeB","sortDirectives","normalizedName","typeMatch","valueMatch","modifiers","startsWith","convertClassStringToArray","classList","filterFn","Boolean","split","TRANSITION_TYPE_IN","TRANSITION_TYPE_OUT","TRANSITION_CANCELLED","transitionIn","show","reject","forceSkip","__x_transition","attrs","showAttr","settingBothSidesOfTransition","index","showCallback","transitionHelper","duration","modifierValue","origin","first","opacity","scale","second","transitionHelperIn","some","transitionClasses","ensureStringExpression","find","transitionClassesIn","transitionOut","hide","hideCallback","transitionHelperOut","transitionClassesOut","fallback","rawValue","isNumeric","join","hook1","hook2","styleValues","cancel","opacityCache","style","transformCache","transform","transformOriginCache","transformOrigin","noModifiers","transitionOpacity","transitionScale","stages","transitionProperty","trim","transitionDuration","transitionTimingFunction","transition","evaluateReturnExpression","classesDuring","classesStart","classesEnd","originalClasses","__x_original_classes","add","remove","finish","once","isConnected","cleanup","nextFrame","start","during","requestAnimationFrame","Number","getComputedStyle","animationDuration","end","isArray","isNaN","called","handleForDirective","templateEl","initialUpdate","extraVars","iteratorNames","forIteratorRE","stripParensRE","forAliasRE","inMatch","String","res","items","item","iteratorMatch","collection","parseForExpression","ifAttribute","evaluateItemsAndReturnEmptyIfXIfIsPresentAndFalseOnElement","currentEl","iterationScopeVariables","scopeVariables","getIterationScopeVariables","currentKey","bindKeyAttribute","generateKeyForIteration","nextEl","undefined","__x_for_key","tmpNextEl","parentElement","insertBefore","lookAheadForMatchingKeyedElementAndMoveItIfFound","__x_for","updateElements","clone","document","importNode","addElementInLoopAfterCurrentEl","initializeElements","nextElementFromOldLoop","nextElementFromOldLoopImmutable","nextSibling","removeAnyLeftOverElementsFromPreviousUpdate","handleAttributeBindingDirective","attrName","attrType","Alpine","ignoreFocusedForValueBinding","activeElement","isSameNode","checked","val","arrayWrappedValue","options","option","selected","text","updateSelect","setAttribute","classNames","className","newClasses","removeAttribute","isBooleanAttr","setIfChanged","getAttribute","registerListener","event","passive","handler","listenerTarget","contains","offsetWidth","offsetHeight","runListenerHandler","removeEventListener","window","body","isKeyEvent","keyModifiers","debounceIndex","splice","keyToModifier","selectedSystemKeyModifiers","modifier","isListeningForASpecificKeyThatHasntBeenPressed","preventDefault","stopPropagation","then","nextModifier","addEventListener","evaluateCommandExpression","generateModelAssignmentFunction","hasAttribute","currentValue","CustomEvent","detail","newValue","safeParseNumber","multiple","selectedOptions","number","parseFloat","getPrototypeOf","create","ObjectCreate","ObjectDefineProperty","ObjectDefineProperties","isExtensible","getOwnPropertyNames","preventExtensions","hasOwnProperty","ArrayPush","ArrayConcat","ArrayMap","prototype","isUndefined","isFunction","proxyToValueMap","WeakMap","registerProxy","proxy","set","unwrap","replicaOrAny","get","wrapValue","membrane","valueIsObservable","getProxy","lockShadowTarget","shadowTarget","originalTarget","descriptor","wrapDescriptor","ReactiveProxyHandler","valueObserved","valueMutated","thisArg","argArray","newTarget","shadowIsExtensible","targetIsExtensible","desc","shadowDescriptor","originalDescriptor","unwrapDescriptor","wrapReadOnlyValue","getReadOnlyProxy","ReadOnlyHandler","createShadowTarget","ObjectDotPrototype","defaultValueIsObservable","proto","defaultValueObserved","defaultValueMutated","defaultValueDistortion","getValue","unwrapProxy","ReactiveMembrane","valueDistortion","objectGraph","unwrappedValue","distorted","o","getReactiveState","readOnly","reactive","p","distortedValue","reactiveState","reactiveHandler","Proxy","readOnlyHandler","Component","componentForClone","$el","dataAttr","dataExpression","initExpression","dataExtras","canonicalComponentElementReference","magicProperties","unobservedData","getUnobservedData","data","wrapDataInObservable","initReturnedCallback","$refs","getRefsProxy","nextTickStack","$nextTick","watchers","$watch","property","showDirectiveStack","showDirectiveLastElement","onBeforeComponentInitializeds","pauseReactivity","listenForNewElementsToInitialize","onComponentInitializeds","observable","unwrappedData","copy","unwrap$1","self","updateDom","mutationCallback","wrap","fullDotNotationKey","dotNotationParts","reduce","comparisonData","part","is","initializeComponentCallback","__x","rootEl","walkAndSkipNestedComponents","__x_inserted_me","initializeElement","executeAndClearRemainingShowDirectiveStack","executeAndClearNextTickStack","shouldRegisterListeners","registerListeners","resolveBoundAttributes","updateElement","shift","reverse","resolve","promiseChain","promise","finishElement","rightSideOfExpression","registerModelListener","output","textContent","handleTextDirective","innerHTML","handleHtmlDirective","display","__x_is_shown","removeProperty","handle","handleShowDirective","expressionResult","elementHasAlreadyBeenAdded","handleIfDirective","$dispatch","getDispatchFunction","AsyncFunction","async","constructor","methodReference","saferEvalNoReturn","dispatchEvent","bubbles","targetNode","MutationObserver","mutations","closestParentComponent","closest","attributeName","xAttr","rawData","addedNodes","nodeType","matches","observe","childList","subtree","ref","version","pauseMutationObserver","readyState","discoverComponents","initializeComponent","discoverUninitializedComponents","listenForNewUninitializedComponentsAtRunTime","querySelectorAll","rootEls","querySelector","newEl","addMagicProperty","onComponentInitialized","onBeforeComponentInitialized","deferLoadingAlpine","factory","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","definition","prop","$","Drupal","behaviors","cshs","attach","settings","each","idx","element","id","simplerSelect","jQuery","DropButton","dropbutton","extend","title","t","$dropbutton","$list","$actions","$primary","slice","addClass","append","theme","on","hoverOut","hoverIn","focusOut","focusIn","dropbuttonClickHandler","toggleClass","dropButton","$dropbuttons","$body","il","dropbuttons","toggle","hasClass","timerID","open","close","dropbuttonToggle","moreVertical","pluginName","defaults","noneLabel","noneValue","labels","Plugin","$element","$currentSelect","selectOptions","init","that","destroy","$option","label","parent","children","tree","buildTree","initialValue","initialParents","$selectElement","createSelect","getAllParents","after","selectSetValue","$nextSelect","getOptionInfoByValue","nextAll","level","chevronClasses","chevronElement","chevronDown","selectElement","$select","$wrapper","change","selectRemoveNext","$selected","selectedValue","parentValue","optionInfo","addSelectAfter","selectGetLevel","grep","child","parents","$newSelect","getOptionByValue","fn","drupalSettings","showWeight","JSON","parse","localStorage","getItem","tableDrag","base","table","initTableDrag","tableSettings","$table","dragObject","rowObject","oldRowElement","oldY","changed","maxDepth","rtl","css","striping","scrollSettings","amount","interval","trigger","scrollInterval","scrollY","windowHeight","indentEnabled","group","relationship","limit","indentCount","indent","testRow","appendTo","$indentation","prepend","indentAmount","offsetLeft","makeDraggable","before","toggleColumns","initColumns","dragRow","originalEvent","touches","dropRow","displayColumns","hidden","cell","columnIndex","tableSetting","field","eq","addColspanClass","$row","cells","colSpan","displayWeight","showColumns","hideColumns","findOnce","setItem","removeItem","$tables","rowSettings","row","tableSettingsGroup","delta","targetClass","rowSetting","$item","move","$indentationLast","Math","max","dragStart","safeBlur","keyCode","groupHeight","keyChange","$previousRow","prev","previousRow","direction","swap","scrollBy","tBodies","rows","parseInt","$nextRow","next","nextRow","nextGroup","nextGroupRow","removeClass","restripeTable","onDrag","initOffset","getPointerOffset","initPointerCoords","pointerCoords","indentPointerPos","topY","offset","top","bottomY","currentPointerCoords","y","x","scrollAmount","checkScroll","clearInterval","setScroll","currentRow","findDropTargetRow","xDiff","indentDiff","round","indentChange","indents","droppedRow","$droppedRow","updateFields","updateField","markChanged","fadeIn","removeIndentClasses","onDrop","pageX","pageY","clientX","scrollLeft","clientLeft","clientY","scrollTop","clientTop","docPos","pointerPos","left","not","rowY","rowHeight","firstChild","isValidSwap","changedRow","$changedRow","sourceRow","useSibling","copyDragClasses","targetElement","sourceClass","sourceElement","action","siblings","findSiblings","maxVal","weight","targetRow","cursorY","de","documentElement","innerHeight","clientHeight","clientWidth","all","pageYOffset","setInterval","aboveTable","belowTable","tableRow","method","addClasses","$tableRow","groupDepth","findChildren","merge","parentIndentation","rowIndentation","indentNum","prevRow","validIndentInterval","min","position","detachBehaviors","attachBehaviors","onSwap","$prevRow","maxIndent","minIndent","$group","abs","onIndent","directions","checkRowIndentation","checkRow","marker","swappedRow","tableDragChangedMarker","info","tableDragIndentation","tableDragChangedWarning"],"mappings":"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","file":"js/main.bundle.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Alpine = factory());\n}(this, (function () { 'use strict';\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      if (enumerableOnly) symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n      keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n\n      if (i % 2) {\n        ownKeys(Object(source), true).forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n\n    return target;\n  }\n\n  // Thanks @stimulus:\n  // https://github.com/stimulusjs/stimulus/blob/master/packages/%40stimulus/core/src/application.ts\n  function domReady() {\n    return new Promise(resolve => {\n      if (document.readyState == \"loading\") {\n        document.addEventListener(\"DOMContentLoaded\", resolve);\n      } else {\n        resolve();\n      }\n    });\n  }\n  function arrayUnique(array) {\n    return Array.from(new Set(array));\n  }\n  function isTesting() {\n    return navigator.userAgent.includes(\"Node.js\") || navigator.userAgent.includes(\"jsdom\");\n  }\n  function checkedAttrLooseCompare(valueA, valueB) {\n    return valueA == valueB;\n  }\n  function warnIfMalformedTemplate(el, directive) {\n    if (el.tagName.toLowerCase() !== 'template') {\n      console.warn(`Alpine: [${directive}] directive should only be added to <template> tags. See https://github.com/alpinejs/alpine#${directive}`);\n    } else if (el.content.childElementCount !== 1) {\n      console.warn(`Alpine: <template> tag with [${directive}] encountered with an unexpected number of root elements. Make sure <template> has a single root element. `);\n    }\n  }\n  function kebabCase(subject) {\n    return subject.replace(/([a-z])([A-Z])/g, '$1-$2').replace(/[_\\s]/, '-').toLowerCase();\n  }\n  function camelCase(subject) {\n    return subject.toLowerCase().replace(/-(\\w)/g, (match, char) => char.toUpperCase());\n  }\n  function walk(el, callback) {\n    if (callback(el) === false) return;\n    let node = el.firstElementChild;\n\n    while (node) {\n      walk(node, callback);\n      node = node.nextElementSibling;\n    }\n  }\n  function debounce(func, wait) {\n    var timeout;\n    return function () {\n      var context = this,\n          args = arguments;\n\n      var later = function later() {\n        timeout = null;\n        func.apply(context, args);\n      };\n\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  }\n\n  const handleError = (el, expression, error) => {\n    console.warn(`Alpine Error: \"${error}\"\\n\\nExpression: \"${expression}\"\\nElement:`, el);\n\n    if (!isTesting()) {\n      Object.assign(error, {\n        el,\n        expression\n      });\n      throw error;\n    }\n  };\n\n  function tryCatch(cb, {\n    el,\n    expression\n  }) {\n    try {\n      const value = cb();\n      return value instanceof Promise ? value.catch(e => handleError(el, expression, e)) : value;\n    } catch (e) {\n      handleError(el, expression, e);\n    }\n  }\n\n  function saferEval(el, expression, dataContext, additionalHelperVariables = {}) {\n    return tryCatch(() => {\n      if (typeof expression === 'function') {\n        return expression.call(dataContext);\n      }\n\n      return new Function(['$data', ...Object.keys(additionalHelperVariables)], `var __alpine_result; with($data) { __alpine_result = ${expression} }; return __alpine_result`)(dataContext, ...Object.values(additionalHelperVariables));\n    }, {\n      el,\n      expression\n    });\n  }\n  function saferEvalNoReturn(el, expression, dataContext, additionalHelperVariables = {}) {\n    return tryCatch(() => {\n      if (typeof expression === 'function') {\n        return Promise.resolve(expression.call(dataContext, additionalHelperVariables['$event']));\n      }\n\n      let AsyncFunction = Function;\n      /* MODERN-ONLY:START */\n\n      AsyncFunction = Object.getPrototypeOf(async function () {}).constructor;\n      /* MODERN-ONLY:END */\n      // For the cases when users pass only a function reference to the caller: `x-on:click=\"foo\"`\n      // Where \"foo\" is a function. Also, we'll pass the function the event instance when we call it.\n\n      if (Object.keys(dataContext).includes(expression)) {\n        let methodReference = new Function(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { return ${expression} }`)(dataContext, ...Object.values(additionalHelperVariables));\n\n        if (typeof methodReference === 'function') {\n          return Promise.resolve(methodReference.call(dataContext, additionalHelperVariables['$event']));\n        } else {\n          return Promise.resolve();\n        }\n      }\n\n      return Promise.resolve(new AsyncFunction(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { ${expression} }`)(dataContext, ...Object.values(additionalHelperVariables)));\n    }, {\n      el,\n      expression\n    });\n  }\n  const xAttrRE = /^x-(on|bind|data|text|html|model|if|for|show|cloak|transition|ref|spread)\\b/;\n  function isXAttr(attr) {\n    const name = replaceAtAndColonWithStandardSyntax(attr.name);\n    return xAttrRE.test(name);\n  }\n  function getXAttrs(el, component, type) {\n    let directives = Array.from(el.attributes).filter(isXAttr).map(parseHtmlAttribute); // Get an object of directives from x-spread.\n\n    let spreadDirective = directives.filter(directive => directive.type === 'spread')[0];\n\n    if (spreadDirective) {\n      let spreadObject = saferEval(el, spreadDirective.expression, component.$data); // Add x-spread directives to the pile of existing directives.\n\n      directives = directives.concat(Object.entries(spreadObject).map(([name, value]) => parseHtmlAttribute({\n        name,\n        value\n      })));\n    }\n\n    if (type) return directives.filter(i => i.type === type);\n    return sortDirectives(directives);\n  }\n\n  function sortDirectives(directives) {\n    let directiveOrder = ['bind', 'model', 'show', 'catch-all'];\n    return directives.sort((a, b) => {\n      let typeA = directiveOrder.indexOf(a.type) === -1 ? 'catch-all' : a.type;\n      let typeB = directiveOrder.indexOf(b.type) === -1 ? 'catch-all' : b.type;\n      return directiveOrder.indexOf(typeA) - directiveOrder.indexOf(typeB);\n    });\n  }\n\n  function parseHtmlAttribute({\n    name,\n    value\n  }) {\n    const normalizedName = replaceAtAndColonWithStandardSyntax(name);\n    const typeMatch = normalizedName.match(xAttrRE);\n    const valueMatch = normalizedName.match(/:([a-zA-Z0-9\\-:]+)/);\n    const modifiers = normalizedName.match(/\\.[^.\\]]+(?=[^\\]]*$)/g) || [];\n    return {\n      type: typeMatch ? typeMatch[1] : null,\n      value: valueMatch ? valueMatch[1] : null,\n      modifiers: modifiers.map(i => i.replace('.', '')),\n      expression: value\n    };\n  }\n  function isBooleanAttr(attrName) {\n    // As per HTML spec table https://html.spec.whatwg.org/multipage/indices.html#attributes-3:boolean-attribute\n    // Array roughly ordered by estimated usage\n    const booleanAttributes = ['disabled', 'checked', 'required', 'readonly', 'hidden', 'open', 'selected', 'autofocus', 'itemscope', 'multiple', 'novalidate', 'allowfullscreen', 'allowpaymentrequest', 'formnovalidate', 'autoplay', 'controls', 'loop', 'muted', 'playsinline', 'default', 'ismap', 'reversed', 'async', 'defer', 'nomodule'];\n    return booleanAttributes.includes(attrName);\n  }\n  function replaceAtAndColonWithStandardSyntax(name) {\n    if (name.startsWith('@')) {\n      return name.replace('@', 'x-on:');\n    } else if (name.startsWith(':')) {\n      return name.replace(':', 'x-bind:');\n    }\n\n    return name;\n  }\n  function convertClassStringToArray(classList, filterFn = Boolean) {\n    return classList.split(' ').filter(filterFn);\n  }\n  const TRANSITION_TYPE_IN = 'in';\n  const TRANSITION_TYPE_OUT = 'out';\n  const TRANSITION_CANCELLED = 'cancelled';\n  function transitionIn(el, show, reject, component, forceSkip = false) {\n    // We don't want to transition on the initial page load.\n    if (forceSkip) return show();\n\n    if (el.__x_transition && el.__x_transition.type === TRANSITION_TYPE_IN) {\n      // there is already a similar transition going on, this was probably triggered by\n      // a change in a different property, let's just leave the previous one doing its job\n      return;\n    }\n\n    const attrs = getXAttrs(el, component, 'transition');\n    const showAttr = getXAttrs(el, component, 'show')[0]; // If this is triggered by a x-show.transition.\n\n    if (showAttr && showAttr.modifiers.includes('transition')) {\n      let modifiers = showAttr.modifiers; // If x-show.transition.out, we'll skip the \"in\" transition.\n\n      if (modifiers.includes('out') && !modifiers.includes('in')) return show();\n      const settingBothSidesOfTransition = modifiers.includes('in') && modifiers.includes('out'); // If x-show.transition.in...out... only use \"in\" related modifiers for this transition.\n\n      modifiers = settingBothSidesOfTransition ? modifiers.filter((i, index) => index < modifiers.indexOf('out')) : modifiers;\n      transitionHelperIn(el, modifiers, show, reject); // Otherwise, we can assume x-transition:enter.\n    } else if (attrs.some(attr => ['enter', 'enter-start', 'enter-end'].includes(attr.value))) {\n      transitionClassesIn(el, component, attrs, show, reject);\n    } else {\n      // If neither, just show that damn thing.\n      show();\n    }\n  }\n  function transitionOut(el, hide, reject, component, forceSkip = false) {\n    // We don't want to transition on the initial page load.\n    if (forceSkip) return hide();\n\n    if (el.__x_transition && el.__x_transition.type === TRANSITION_TYPE_OUT) {\n      // there is already a similar transition going on, this was probably triggered by\n      // a change in a different property, let's just leave the previous one doing its job\n      return;\n    }\n\n    const attrs = getXAttrs(el, component, 'transition');\n    const showAttr = getXAttrs(el, component, 'show')[0];\n\n    if (showAttr && showAttr.modifiers.includes('transition')) {\n      let modifiers = showAttr.modifiers;\n      if (modifiers.includes('in') && !modifiers.includes('out')) return hide();\n      const settingBothSidesOfTransition = modifiers.includes('in') && modifiers.includes('out');\n      modifiers = settingBothSidesOfTransition ? modifiers.filter((i, index) => index > modifiers.indexOf('out')) : modifiers;\n      transitionHelperOut(el, modifiers, settingBothSidesOfTransition, hide, reject);\n    } else if (attrs.some(attr => ['leave', 'leave-start', 'leave-end'].includes(attr.value))) {\n      transitionClassesOut(el, component, attrs, hide, reject);\n    } else {\n      hide();\n    }\n  }\n  function transitionHelperIn(el, modifiers, showCallback, reject) {\n    // Default values inspired by: https://material.io/design/motion/speed.html#duration\n    const styleValues = {\n      duration: modifierValue(modifiers, 'duration', 150),\n      origin: modifierValue(modifiers, 'origin', 'center'),\n      first: {\n        opacity: 0,\n        scale: modifierValue(modifiers, 'scale', 95)\n      },\n      second: {\n        opacity: 1,\n        scale: 100\n      }\n    };\n    transitionHelper(el, modifiers, showCallback, () => {}, reject, styleValues, TRANSITION_TYPE_IN);\n  }\n  function transitionHelperOut(el, modifiers, settingBothSidesOfTransition, hideCallback, reject) {\n    // Make the \"out\" transition .5x slower than the \"in\". (Visually better)\n    // HOWEVER, if they explicitly set a duration for the \"out\" transition,\n    // use that.\n    const duration = settingBothSidesOfTransition ? modifierValue(modifiers, 'duration', 150) : modifierValue(modifiers, 'duration', 150) / 2;\n    const styleValues = {\n      duration: duration,\n      origin: modifierValue(modifiers, 'origin', 'center'),\n      first: {\n        opacity: 1,\n        scale: 100\n      },\n      second: {\n        opacity: 0,\n        scale: modifierValue(modifiers, 'scale', 95)\n      }\n    };\n    transitionHelper(el, modifiers, () => {}, hideCallback, reject, styleValues, TRANSITION_TYPE_OUT);\n  }\n\n  function modifierValue(modifiers, key, fallback) {\n    // If the modifier isn't present, use the default.\n    if (modifiers.indexOf(key) === -1) return fallback; // If it IS present, grab the value after it: x-show.transition.duration.500ms\n\n    const rawValue = modifiers[modifiers.indexOf(key) + 1];\n    if (!rawValue) return fallback;\n\n    if (key === 'scale') {\n      // Check if the very next value is NOT a number and return the fallback.\n      // If x-show.transition.scale, we'll use the default scale value.\n      // That is how a user opts out of the opacity transition.\n      if (!isNumeric(rawValue)) return fallback;\n    }\n\n    if (key === 'duration') {\n      // Support x-show.transition.duration.500ms && duration.500\n      let match = rawValue.match(/([0-9]+)ms/);\n      if (match) return match[1];\n    }\n\n    if (key === 'origin') {\n      // Support chaining origin directions: x-show.transition.top.right\n      if (['top', 'right', 'left', 'center', 'bottom'].includes(modifiers[modifiers.indexOf(key) + 2])) {\n        return [rawValue, modifiers[modifiers.indexOf(key) + 2]].join(' ');\n      }\n    }\n\n    return rawValue;\n  }\n\n  function transitionHelper(el, modifiers, hook1, hook2, reject, styleValues, type) {\n    // clear the previous transition if exists to avoid caching the wrong styles\n    if (el.__x_transition) {\n      el.__x_transition.cancel && el.__x_transition.cancel();\n    } // If the user set these style values, we'll put them back when we're done with them.\n\n\n    const opacityCache = el.style.opacity;\n    const transformCache = el.style.transform;\n    const transformOriginCache = el.style.transformOrigin; // If no modifiers are present: x-show.transition, we'll default to both opacity and scale.\n\n    const noModifiers = !modifiers.includes('opacity') && !modifiers.includes('scale');\n    const transitionOpacity = noModifiers || modifiers.includes('opacity');\n    const transitionScale = noModifiers || modifiers.includes('scale'); // These are the explicit stages of a transition (same stages for in and for out).\n    // This way you can get a birds eye view of the hooks, and the differences\n    // between them.\n\n    const stages = {\n      start() {\n        if (transitionOpacity) el.style.opacity = styleValues.first.opacity;\n        if (transitionScale) el.style.transform = `scale(${styleValues.first.scale / 100})`;\n      },\n\n      during() {\n        if (transitionScale) el.style.transformOrigin = styleValues.origin;\n        el.style.transitionProperty = [transitionOpacity ? `opacity` : ``, transitionScale ? `transform` : ``].join(' ').trim();\n        el.style.transitionDuration = `${styleValues.duration / 1000}s`;\n        el.style.transitionTimingFunction = `cubic-bezier(0.4, 0.0, 0.2, 1)`;\n      },\n\n      show() {\n        hook1();\n      },\n\n      end() {\n        if (transitionOpacity) el.style.opacity = styleValues.second.opacity;\n        if (transitionScale) el.style.transform = `scale(${styleValues.second.scale / 100})`;\n      },\n\n      hide() {\n        hook2();\n      },\n\n      cleanup() {\n        if (transitionOpacity) el.style.opacity = opacityCache;\n        if (transitionScale) el.style.transform = transformCache;\n        if (transitionScale) el.style.transformOrigin = transformOriginCache;\n        el.style.transitionProperty = null;\n        el.style.transitionDuration = null;\n        el.style.transitionTimingFunction = null;\n      }\n\n    };\n    transition(el, stages, type, reject);\n  }\n\n  const ensureStringExpression = (expression, el, component) => {\n    return typeof expression === 'function' ? component.evaluateReturnExpression(el, expression) : expression;\n  };\n\n  function transitionClassesIn(el, component, directives, showCallback, reject) {\n    const enter = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'enter') || {\n      expression: ''\n    }).expression, el, component));\n    const enterStart = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'enter-start') || {\n      expression: ''\n    }).expression, el, component));\n    const enterEnd = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'enter-end') || {\n      expression: ''\n    }).expression, el, component));\n    transitionClasses(el, enter, enterStart, enterEnd, showCallback, () => {}, TRANSITION_TYPE_IN, reject);\n  }\n  function transitionClassesOut(el, component, directives, hideCallback, reject) {\n    const leave = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'leave') || {\n      expression: ''\n    }).expression, el, component));\n    const leaveStart = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'leave-start') || {\n      expression: ''\n    }).expression, el, component));\n    const leaveEnd = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'leave-end') || {\n      expression: ''\n    }).expression, el, component));\n    transitionClasses(el, leave, leaveStart, leaveEnd, () => {}, hideCallback, TRANSITION_TYPE_OUT, reject);\n  }\n  function transitionClasses(el, classesDuring, classesStart, classesEnd, hook1, hook2, type, reject) {\n    // clear the previous transition if exists to avoid caching the wrong classes\n    if (el.__x_transition) {\n      el.__x_transition.cancel && el.__x_transition.cancel();\n    }\n\n    const originalClasses = el.__x_original_classes || [];\n    const stages = {\n      start() {\n        el.classList.add(...classesStart);\n      },\n\n      during() {\n        el.classList.add(...classesDuring);\n      },\n\n      show() {\n        hook1();\n      },\n\n      end() {\n        // Don't remove classes that were in the original class attribute.\n        el.classList.remove(...classesStart.filter(i => !originalClasses.includes(i)));\n        el.classList.add(...classesEnd);\n      },\n\n      hide() {\n        hook2();\n      },\n\n      cleanup() {\n        el.classList.remove(...classesDuring.filter(i => !originalClasses.includes(i)));\n        el.classList.remove(...classesEnd.filter(i => !originalClasses.includes(i)));\n      }\n\n    };\n    transition(el, stages, type, reject);\n  }\n  function transition(el, stages, type, reject) {\n    const finish = once(() => {\n      stages.hide(); // Adding an \"isConnected\" check, in case the callback\n      // removed the element from the DOM.\n\n      if (el.isConnected) {\n        stages.cleanup();\n      }\n\n      delete el.__x_transition;\n    });\n    el.__x_transition = {\n      // Set transition type so we can avoid clearing transition if the direction is the same\n      type: type,\n      // create a callback for the last stages of the transition so we can call it\n      // from different point and early terminate it. Once will ensure that function\n      // is only called one time.\n      cancel: once(() => {\n        reject(TRANSITION_CANCELLED);\n        finish();\n      }),\n      finish,\n      // This store the next animation frame so we can cancel it\n      nextFrame: null\n    };\n    stages.start();\n    stages.during();\n    el.__x_transition.nextFrame = requestAnimationFrame(() => {\n      // Note: Safari's transitionDuration property will list out comma separated transition durations\n      // for every single transition property. Let's grab the first one and call it a day.\n      let duration = Number(getComputedStyle(el).transitionDuration.replace(/,.*/, '').replace('s', '')) * 1000;\n\n      if (duration === 0) {\n        duration = Number(getComputedStyle(el).animationDuration.replace('s', '')) * 1000;\n      }\n\n      stages.show();\n      el.__x_transition.nextFrame = requestAnimationFrame(() => {\n        stages.end();\n        setTimeout(el.__x_transition.finish, duration);\n      });\n    });\n  }\n  function isNumeric(subject) {\n    return !Array.isArray(subject) && !isNaN(subject);\n  } // Thanks @vuejs\n  // https://github.com/vuejs/vue/blob/4de4649d9637262a9b007720b59f80ac72a5620c/src/shared/util.js\n\n  function once(callback) {\n    let called = false;\n    return function () {\n      if (!called) {\n        called = true;\n        callback.apply(this, arguments);\n      }\n    };\n  }\n\n  function handleForDirective(component, templateEl, expression, initialUpdate, extraVars) {\n    warnIfMalformedTemplate(templateEl, 'x-for');\n    let iteratorNames = typeof expression === 'function' ? parseForExpression(component.evaluateReturnExpression(templateEl, expression)) : parseForExpression(expression);\n    let items = evaluateItemsAndReturnEmptyIfXIfIsPresentAndFalseOnElement(component, templateEl, iteratorNames, extraVars); // As we walk the array, we'll also walk the DOM (updating/creating as we go).\n\n    let currentEl = templateEl;\n    items.forEach((item, index) => {\n      let iterationScopeVariables = getIterationScopeVariables(iteratorNames, item, index, items, extraVars());\n      let currentKey = generateKeyForIteration(component, templateEl, index, iterationScopeVariables);\n      let nextEl = lookAheadForMatchingKeyedElementAndMoveItIfFound(currentEl.nextElementSibling, currentKey); // If we haven't found a matching key, insert the element at the current position.\n\n      if (!nextEl) {\n        nextEl = addElementInLoopAfterCurrentEl(templateEl, currentEl); // And transition it in if it's not the first page load.\n\n        transitionIn(nextEl, () => {}, () => {}, component, initialUpdate);\n        nextEl.__x_for = iterationScopeVariables;\n        component.initializeElements(nextEl, () => nextEl.__x_for); // Otherwise update the element we found.\n      } else {\n        // Temporarily remove the key indicator to allow the normal \"updateElements\" to work.\n        delete nextEl.__x_for_key;\n        nextEl.__x_for = iterationScopeVariables;\n        component.updateElements(nextEl, () => nextEl.__x_for);\n      }\n\n      currentEl = nextEl;\n      currentEl.__x_for_key = currentKey;\n    });\n    removeAnyLeftOverElementsFromPreviousUpdate(currentEl, component);\n  } // This was taken from VueJS 2.* core. Thanks Vue!\n\n  function parseForExpression(expression) {\n    let forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\n    let stripParensRE = /^\\(|\\)$/g;\n    let forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\n    let inMatch = String(expression).match(forAliasRE);\n    if (!inMatch) return;\n    let res = {};\n    res.items = inMatch[2].trim();\n    let item = inMatch[1].trim().replace(stripParensRE, '');\n    let iteratorMatch = item.match(forIteratorRE);\n\n    if (iteratorMatch) {\n      res.item = item.replace(forIteratorRE, '').trim();\n      res.index = iteratorMatch[1].trim();\n\n      if (iteratorMatch[2]) {\n        res.collection = iteratorMatch[2].trim();\n      }\n    } else {\n      res.item = item;\n    }\n\n    return res;\n  }\n\n  function getIterationScopeVariables(iteratorNames, item, index, items, extraVars) {\n    // We must create a new object, so each iteration has a new scope\n    let scopeVariables = extraVars ? _objectSpread2({}, extraVars) : {};\n    scopeVariables[iteratorNames.item] = item;\n    if (iteratorNames.index) scopeVariables[iteratorNames.index] = index;\n    if (iteratorNames.collection) scopeVariables[iteratorNames.collection] = items;\n    return scopeVariables;\n  }\n\n  function generateKeyForIteration(component, el, index, iterationScopeVariables) {\n    let bindKeyAttribute = getXAttrs(el, component, 'bind').filter(attr => attr.value === 'key')[0]; // If the dev hasn't specified a key, just return the index of the iteration.\n\n    if (!bindKeyAttribute) return index;\n    return component.evaluateReturnExpression(el, bindKeyAttribute.expression, () => iterationScopeVariables);\n  }\n\n  function evaluateItemsAndReturnEmptyIfXIfIsPresentAndFalseOnElement(component, el, iteratorNames, extraVars) {\n    let ifAttribute = getXAttrs(el, component, 'if')[0];\n\n    if (ifAttribute && !component.evaluateReturnExpression(el, ifAttribute.expression)) {\n      return [];\n    }\n\n    let items = component.evaluateReturnExpression(el, iteratorNames.items, extraVars); // This adds support for the `i in n` syntax.\n\n    if (isNumeric(items) && items >= 0) {\n      items = Array.from(Array(items).keys(), i => i + 1);\n    }\n\n    return items;\n  }\n\n  function addElementInLoopAfterCurrentEl(templateEl, currentEl) {\n    let clone = document.importNode(templateEl.content, true);\n    currentEl.parentElement.insertBefore(clone, currentEl.nextElementSibling);\n    return currentEl.nextElementSibling;\n  }\n\n  function lookAheadForMatchingKeyedElementAndMoveItIfFound(nextEl, currentKey) {\n    if (!nextEl) return; // If we are already past the x-for generated elements, we don't need to look ahead.\n\n    if (nextEl.__x_for_key === undefined) return; // If the the key's DO match, no need to look ahead.\n\n    if (nextEl.__x_for_key === currentKey) return nextEl; // If they don't, we'll look ahead for a match.\n    // If we find it, we'll move it to the current position in the loop.\n\n    let tmpNextEl = nextEl;\n\n    while (tmpNextEl) {\n      if (tmpNextEl.__x_for_key === currentKey) {\n        return tmpNextEl.parentElement.insertBefore(tmpNextEl, nextEl);\n      }\n\n      tmpNextEl = tmpNextEl.nextElementSibling && tmpNextEl.nextElementSibling.__x_for_key !== undefined ? tmpNextEl.nextElementSibling : false;\n    }\n  }\n\n  function removeAnyLeftOverElementsFromPreviousUpdate(currentEl, component) {\n    var nextElementFromOldLoop = currentEl.nextElementSibling && currentEl.nextElementSibling.__x_for_key !== undefined ? currentEl.nextElementSibling : false;\n\n    while (nextElementFromOldLoop) {\n      let nextElementFromOldLoopImmutable = nextElementFromOldLoop;\n      let nextSibling = nextElementFromOldLoop.nextElementSibling;\n      transitionOut(nextElementFromOldLoop, () => {\n        nextElementFromOldLoopImmutable.remove();\n      }, () => {}, component);\n      nextElementFromOldLoop = nextSibling && nextSibling.__x_for_key !== undefined ? nextSibling : false;\n    }\n  }\n\n  function handleAttributeBindingDirective(component, el, attrName, expression, extraVars, attrType, modifiers) {\n    var value = component.evaluateReturnExpression(el, expression, extraVars);\n\n    if (attrName === 'value') {\n      if (Alpine.ignoreFocusedForValueBinding && document.activeElement.isSameNode(el)) return; // If nested model key is undefined, set the default value to empty string.\n\n      if (value === undefined && String(expression).match(/\\./)) {\n        value = '';\n      }\n\n      if (el.type === 'radio') {\n        // Set radio value from x-bind:value, if no \"value\" attribute exists.\n        // If there are any initial state values, radio will have a correct\n        // \"checked\" value since x-bind:value is processed before x-model.\n        if (el.attributes.value === undefined && attrType === 'bind') {\n          el.value = value;\n        } else if (attrType !== 'bind') {\n          el.checked = checkedAttrLooseCompare(el.value, value);\n        }\n      } else if (el.type === 'checkbox') {\n        // If we are explicitly binding a string to the :value, set the string,\n        // If the value is a boolean, leave it alone, it will be set to \"on\"\n        // automatically.\n        if (typeof value !== 'boolean' && ![null, undefined].includes(value) && attrType === 'bind') {\n          el.value = String(value);\n        } else if (attrType !== 'bind') {\n          if (Array.isArray(value)) {\n            // I'm purposely not using Array.includes here because it's\n            // strict, and because of Numeric/String mis-casting, I\n            // want the \"includes\" to be \"fuzzy\".\n            el.checked = value.some(val => checkedAttrLooseCompare(val, el.value));\n          } else {\n            el.checked = !!value;\n          }\n        }\n      } else if (el.tagName === 'SELECT') {\n        updateSelect(el, value);\n      } else {\n        if (el.value === value) return;\n        el.value = value;\n      }\n    } else if (attrName === 'class') {\n      if (Array.isArray(value)) {\n        const originalClasses = el.__x_original_classes || [];\n        el.setAttribute('class', arrayUnique(originalClasses.concat(value)).join(' '));\n      } else if (typeof value === 'object') {\n        // Sorting the keys / class names by their boolean value will ensure that\n        // anything that evaluates to `false` and needs to remove classes is run first.\n        const keysSortedByBooleanValue = Object.keys(value).sort((a, b) => value[a] - value[b]);\n        keysSortedByBooleanValue.forEach(classNames => {\n          if (value[classNames]) {\n            convertClassStringToArray(classNames).forEach(className => el.classList.add(className));\n          } else {\n            convertClassStringToArray(classNames).forEach(className => el.classList.remove(className));\n          }\n        });\n      } else {\n        const originalClasses = el.__x_original_classes || [];\n        const newClasses = value ? convertClassStringToArray(value) : [];\n        el.setAttribute('class', arrayUnique(originalClasses.concat(newClasses)).join(' '));\n      }\n    } else {\n      attrName = modifiers.includes('camel') ? camelCase(attrName) : attrName; // If an attribute's bound value is null, undefined or false, remove the attribute\n\n      if ([null, undefined, false].includes(value)) {\n        el.removeAttribute(attrName);\n      } else {\n        isBooleanAttr(attrName) ? setIfChanged(el, attrName, attrName) : setIfChanged(el, attrName, value);\n      }\n    }\n  }\n\n  function setIfChanged(el, attrName, value) {\n    if (el.getAttribute(attrName) != value) {\n      el.setAttribute(attrName, value);\n    }\n  }\n\n  function updateSelect(el, value) {\n    const arrayWrappedValue = [].concat(value).map(value => {\n      return value + '';\n    });\n    Array.from(el.options).forEach(option => {\n      option.selected = arrayWrappedValue.includes(option.value || option.text);\n    });\n  }\n\n  function handleTextDirective(el, output, expression) {\n    // If nested model key is undefined, set the default value to empty string.\n    if (output === undefined && String(expression).match(/\\./)) {\n      output = '';\n    }\n\n    el.textContent = output;\n  }\n\n  function handleHtmlDirective(component, el, expression, extraVars) {\n    el.innerHTML = component.evaluateReturnExpression(el, expression, extraVars);\n  }\n\n  function handleShowDirective(component, el, value, modifiers, initialUpdate = false) {\n    const hide = () => {\n      el.style.display = 'none';\n      el.__x_is_shown = false;\n    };\n\n    const show = () => {\n      if (el.style.length === 1 && el.style.display === 'none') {\n        el.removeAttribute('style');\n      } else {\n        el.style.removeProperty('display');\n      }\n\n      el.__x_is_shown = true;\n    };\n\n    if (initialUpdate === true) {\n      if (value) {\n        show();\n      } else {\n        hide();\n      }\n\n      return;\n    }\n\n    const handle = (resolve, reject) => {\n      if (value) {\n        if (el.style.display === 'none' || el.__x_transition) {\n          transitionIn(el, () => {\n            show();\n          }, reject, component);\n        }\n\n        resolve(() => {});\n      } else {\n        if (el.style.display !== 'none') {\n          transitionOut(el, () => {\n            resolve(() => {\n              hide();\n            });\n          }, reject, component);\n        } else {\n          resolve(() => {});\n        }\n      }\n    }; // The working of x-show is a bit complex because we need to\n    // wait for any child transitions to finish before hiding\n    // some element. Also, this has to be done recursively.\n    // If x-show.immediate, foregoe the waiting.\n\n\n    if (modifiers.includes('immediate')) {\n      handle(finish => finish(), () => {});\n      return;\n    } // x-show is encountered during a DOM tree walk. If an element\n    // we encounter is NOT a child of another x-show element we\n    // can execute the previous x-show stack (if one exists).\n\n\n    if (component.showDirectiveLastElement && !component.showDirectiveLastElement.contains(el)) {\n      component.executeAndClearRemainingShowDirectiveStack();\n    }\n\n    component.showDirectiveStack.push(handle);\n    component.showDirectiveLastElement = el;\n  }\n\n  function handleIfDirective(component, el, expressionResult, initialUpdate, extraVars) {\n    warnIfMalformedTemplate(el, 'x-if');\n    const elementHasAlreadyBeenAdded = el.nextElementSibling && el.nextElementSibling.__x_inserted_me === true;\n\n    if (expressionResult && (!elementHasAlreadyBeenAdded || el.__x_transition)) {\n      const clone = document.importNode(el.content, true);\n      el.parentElement.insertBefore(clone, el.nextElementSibling);\n      transitionIn(el.nextElementSibling, () => {}, () => {}, component, initialUpdate);\n      component.initializeElements(el.nextElementSibling, extraVars);\n      el.nextElementSibling.__x_inserted_me = true;\n    } else if (!expressionResult && elementHasAlreadyBeenAdded) {\n      transitionOut(el.nextElementSibling, () => {\n        el.nextElementSibling.remove();\n      }, () => {}, component, initialUpdate);\n    }\n  }\n\n  function registerListener(component, el, event, modifiers, expression, extraVars = {}) {\n    const options = {\n      passive: modifiers.includes('passive')\n    };\n\n    if (modifiers.includes('camel')) {\n      event = camelCase(event);\n    }\n\n    let handler, listenerTarget;\n\n    if (modifiers.includes('away')) {\n      listenerTarget = document;\n\n      handler = e => {\n        // Don't do anything if the click came from the element or within it.\n        if (el.contains(e.target)) return; // Don't do anything if this element isn't currently visible.\n\n        if (el.offsetWidth < 1 && el.offsetHeight < 1) return; // Now that we are sure the element is visible, AND the click\n        // is from outside it, let's run the expression.\n\n        runListenerHandler(component, expression, e, extraVars);\n\n        if (modifiers.includes('once')) {\n          document.removeEventListener(event, handler, options);\n        }\n      };\n    } else {\n      listenerTarget = modifiers.includes('window') ? window : modifiers.includes('document') ? document : el;\n\n      handler = e => {\n        // Remove this global event handler if the element that declared it\n        // has been removed. It's now stale.\n        if (listenerTarget === window || listenerTarget === document) {\n          if (!document.body.contains(el)) {\n            listenerTarget.removeEventListener(event, handler, options);\n            return;\n          }\n        }\n\n        if (isKeyEvent(event)) {\n          if (isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers)) {\n            return;\n          }\n        }\n\n        if (modifiers.includes('prevent')) e.preventDefault();\n        if (modifiers.includes('stop')) e.stopPropagation(); // If the .self modifier isn't present, or if it is present and\n        // the target element matches the element we are registering the\n        // event on, run the handler\n\n        if (!modifiers.includes('self') || e.target === el) {\n          const returnValue = runListenerHandler(component, expression, e, extraVars);\n          returnValue.then(value => {\n            if (value === false) {\n              e.preventDefault();\n            } else {\n              if (modifiers.includes('once')) {\n                listenerTarget.removeEventListener(event, handler, options);\n              }\n            }\n          });\n        }\n      };\n    }\n\n    if (modifiers.includes('debounce')) {\n      let nextModifier = modifiers[modifiers.indexOf('debounce') + 1] || 'invalid-wait';\n      let wait = isNumeric(nextModifier.split('ms')[0]) ? Number(nextModifier.split('ms')[0]) : 250;\n      handler = debounce(handler, wait);\n    }\n\n    listenerTarget.addEventListener(event, handler, options);\n  }\n\n  function runListenerHandler(component, expression, e, extraVars) {\n    return component.evaluateCommandExpression(e.target, expression, () => {\n      return _objectSpread2(_objectSpread2({}, extraVars()), {}, {\n        '$event': e\n      });\n    });\n  }\n\n  function isKeyEvent(event) {\n    return ['keydown', 'keyup'].includes(event);\n  }\n\n  function isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers) {\n    let keyModifiers = modifiers.filter(i => {\n      return !['window', 'document', 'prevent', 'stop'].includes(i);\n    });\n\n    if (keyModifiers.includes('debounce')) {\n      let debounceIndex = keyModifiers.indexOf('debounce');\n      keyModifiers.splice(debounceIndex, isNumeric((keyModifiers[debounceIndex + 1] || 'invalid-wait').split('ms')[0]) ? 2 : 1);\n    } // If no modifier is specified, we'll call it a press.\n\n\n    if (keyModifiers.length === 0) return false; // If one is passed, AND it matches the key pressed, we'll call it a press.\n\n    if (keyModifiers.length === 1 && keyModifiers[0] === keyToModifier(e.key)) return false; // The user is listening for key combinations.\n\n    const systemKeyModifiers = ['ctrl', 'shift', 'alt', 'meta', 'cmd', 'super'];\n    const selectedSystemKeyModifiers = systemKeyModifiers.filter(modifier => keyModifiers.includes(modifier));\n    keyModifiers = keyModifiers.filter(i => !selectedSystemKeyModifiers.includes(i));\n\n    if (selectedSystemKeyModifiers.length > 0) {\n      const activelyPressedKeyModifiers = selectedSystemKeyModifiers.filter(modifier => {\n        // Alias \"cmd\" and \"super\" to \"meta\"\n        if (modifier === 'cmd' || modifier === 'super') modifier = 'meta';\n        return e[`${modifier}Key`];\n      }); // If all the modifiers selected are pressed, ...\n\n      if (activelyPressedKeyModifiers.length === selectedSystemKeyModifiers.length) {\n        // AND the remaining key is pressed as well. It's a press.\n        if (keyModifiers[0] === keyToModifier(e.key)) return false;\n      }\n    } // We'll call it NOT a valid keypress.\n\n\n    return true;\n  }\n\n  function keyToModifier(key) {\n    switch (key) {\n      case '/':\n        return 'slash';\n\n      case ' ':\n      case 'Spacebar':\n        return 'space';\n\n      default:\n        return key && kebabCase(key);\n    }\n  }\n\n  function registerModelListener(component, el, modifiers, expression, extraVars) {\n    // If the element we are binding to is a select, a radio, or checkbox\n    // we'll listen for the change event instead of the \"input\" event.\n    var event = el.tagName.toLowerCase() === 'select' || ['checkbox', 'radio'].includes(el.type) || modifiers.includes('lazy') ? 'change' : 'input';\n    const listenerExpression = `${expression} = rightSideOfExpression($event, ${expression})`;\n    registerListener(component, el, event, modifiers, listenerExpression, () => {\n      return _objectSpread2(_objectSpread2({}, extraVars()), {}, {\n        rightSideOfExpression: generateModelAssignmentFunction(el, modifiers, expression)\n      });\n    });\n  }\n\n  function generateModelAssignmentFunction(el, modifiers, expression) {\n    if (el.type === 'radio') {\n      // Radio buttons only work properly when they share a name attribute.\n      // People might assume we take care of that for them, because\n      // they already set a shared \"x-model\" attribute.\n      if (!el.hasAttribute('name')) el.setAttribute('name', expression);\n    }\n\n    return (event, currentValue) => {\n      // Check for event.detail due to an issue where IE11 handles other events as a CustomEvent.\n      if (event instanceof CustomEvent && event.detail) {\n        return event.detail;\n      } else if (el.type === 'checkbox') {\n        // If the data we are binding to is an array, toggle its value inside the array.\n        if (Array.isArray(currentValue)) {\n          const newValue = modifiers.includes('number') ? safeParseNumber(event.target.value) : event.target.value;\n          return event.target.checked ? currentValue.concat([newValue]) : currentValue.filter(el => !checkedAttrLooseCompare(el, newValue));\n        } else {\n          return event.target.checked;\n        }\n      } else if (el.tagName.toLowerCase() === 'select' && el.multiple) {\n        return modifiers.includes('number') ? Array.from(event.target.selectedOptions).map(option => {\n          const rawValue = option.value || option.text;\n          return safeParseNumber(rawValue);\n        }) : Array.from(event.target.selectedOptions).map(option => {\n          return option.value || option.text;\n        });\n      } else {\n        const rawValue = event.target.value;\n        return modifiers.includes('number') ? safeParseNumber(rawValue) : modifiers.includes('trim') ? rawValue.trim() : rawValue;\n      }\n    };\n  }\n\n  function safeParseNumber(rawValue) {\n    const number = rawValue ? parseFloat(rawValue) : null;\n    return isNumeric(number) ? number : rawValue;\n  }\n\n  /**\n   * Copyright (C) 2017 salesforce.com, inc.\n   */\n  const { isArray } = Array;\n  const { getPrototypeOf, create: ObjectCreate, defineProperty: ObjectDefineProperty, defineProperties: ObjectDefineProperties, isExtensible, getOwnPropertyDescriptor, getOwnPropertyNames, getOwnPropertySymbols, preventExtensions, hasOwnProperty, } = Object;\n  const { push: ArrayPush, concat: ArrayConcat, map: ArrayMap, } = Array.prototype;\n  function isUndefined(obj) {\n      return obj === undefined;\n  }\n  function isFunction(obj) {\n      return typeof obj === 'function';\n  }\n  function isObject(obj) {\n      return typeof obj === 'object';\n  }\n  const proxyToValueMap = new WeakMap();\n  function registerProxy(proxy, value) {\n      proxyToValueMap.set(proxy, value);\n  }\n  const unwrap = (replicaOrAny) => proxyToValueMap.get(replicaOrAny) || replicaOrAny;\n\n  function wrapValue(membrane, value) {\n      return membrane.valueIsObservable(value) ? membrane.getProxy(value) : value;\n  }\n  /**\n   * Unwrap property descriptors will set value on original descriptor\n   * We only need to unwrap if value is specified\n   * @param descriptor external descrpitor provided to define new property on original value\n   */\n  function unwrapDescriptor(descriptor) {\n      if (hasOwnProperty.call(descriptor, 'value')) {\n          descriptor.value = unwrap(descriptor.value);\n      }\n      return descriptor;\n  }\n  function lockShadowTarget(membrane, shadowTarget, originalTarget) {\n      const targetKeys = ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\n      targetKeys.forEach((key) => {\n          let descriptor = getOwnPropertyDescriptor(originalTarget, key);\n          // We do not need to wrap the descriptor if configurable\n          // Because we can deal with wrapping it when user goes through\n          // Get own property descriptor. There is also a chance that this descriptor\n          // could change sometime in the future, so we can defer wrapping\n          // until we need to\n          if (!descriptor.configurable) {\n              descriptor = wrapDescriptor(membrane, descriptor, wrapValue);\n          }\n          ObjectDefineProperty(shadowTarget, key, descriptor);\n      });\n      preventExtensions(shadowTarget);\n  }\n  class ReactiveProxyHandler {\n      constructor(membrane, value) {\n          this.originalTarget = value;\n          this.membrane = membrane;\n      }\n      get(shadowTarget, key) {\n          const { originalTarget, membrane } = this;\n          const value = originalTarget[key];\n          const { valueObserved } = membrane;\n          valueObserved(originalTarget, key);\n          return membrane.getProxy(value);\n      }\n      set(shadowTarget, key, value) {\n          const { originalTarget, membrane: { valueMutated } } = this;\n          const oldValue = originalTarget[key];\n          if (oldValue !== value) {\n              originalTarget[key] = value;\n              valueMutated(originalTarget, key);\n          }\n          else if (key === 'length' && isArray(originalTarget)) {\n              // fix for issue #236: push will add the new index, and by the time length\n              // is updated, the internal length is already equal to the new length value\n              // therefore, the oldValue is equal to the value. This is the forking logic\n              // to support this use case.\n              valueMutated(originalTarget, key);\n          }\n          return true;\n      }\n      deleteProperty(shadowTarget, key) {\n          const { originalTarget, membrane: { valueMutated } } = this;\n          delete originalTarget[key];\n          valueMutated(originalTarget, key);\n          return true;\n      }\n      apply(shadowTarget, thisArg, argArray) {\n          /* No op */\n      }\n      construct(target, argArray, newTarget) {\n          /* No op */\n      }\n      has(shadowTarget, key) {\n          const { originalTarget, membrane: { valueObserved } } = this;\n          valueObserved(originalTarget, key);\n          return key in originalTarget;\n      }\n      ownKeys(shadowTarget) {\n          const { originalTarget } = this;\n          return ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\n      }\n      isExtensible(shadowTarget) {\n          const shadowIsExtensible = isExtensible(shadowTarget);\n          if (!shadowIsExtensible) {\n              return shadowIsExtensible;\n          }\n          const { originalTarget, membrane } = this;\n          const targetIsExtensible = isExtensible(originalTarget);\n          if (!targetIsExtensible) {\n              lockShadowTarget(membrane, shadowTarget, originalTarget);\n          }\n          return targetIsExtensible;\n      }\n      setPrototypeOf(shadowTarget, prototype) {\n      }\n      getPrototypeOf(shadowTarget) {\n          const { originalTarget } = this;\n          return getPrototypeOf(originalTarget);\n      }\n      getOwnPropertyDescriptor(shadowTarget, key) {\n          const { originalTarget, membrane } = this;\n          const { valueObserved } = this.membrane;\n          // keys looked up via hasOwnProperty need to be reactive\n          valueObserved(originalTarget, key);\n          let desc = getOwnPropertyDescriptor(originalTarget, key);\n          if (isUndefined(desc)) {\n              return desc;\n          }\n          const shadowDescriptor = getOwnPropertyDescriptor(shadowTarget, key);\n          if (!isUndefined(shadowDescriptor)) {\n              return shadowDescriptor;\n          }\n          // Note: by accessing the descriptor, the key is marked as observed\n          // but access to the value, setter or getter (if available) cannot observe\n          // mutations, just like regular methods, in which case we just do nothing.\n          desc = wrapDescriptor(membrane, desc, wrapValue);\n          if (!desc.configurable) {\n              // If descriptor from original target is not configurable,\n              // We must copy the wrapped descriptor over to the shadow target.\n              // Otherwise, proxy will throw an invariant error.\n              // This is our last chance to lock the value.\n              // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor#Invariants\n              ObjectDefineProperty(shadowTarget, key, desc);\n          }\n          return desc;\n      }\n      preventExtensions(shadowTarget) {\n          const { originalTarget, membrane } = this;\n          lockShadowTarget(membrane, shadowTarget, originalTarget);\n          preventExtensions(originalTarget);\n          return true;\n      }\n      defineProperty(shadowTarget, key, descriptor) {\n          const { originalTarget, membrane } = this;\n          const { valueMutated } = membrane;\n          const { configurable } = descriptor;\n          // We have to check for value in descriptor\n          // because Object.freeze(proxy) calls this method\n          // with only { configurable: false, writeable: false }\n          // Additionally, method will only be called with writeable:false\n          // if the descriptor has a value, as opposed to getter/setter\n          // So we can just check if writable is present and then see if\n          // value is present. This eliminates getter and setter descriptors\n          if (hasOwnProperty.call(descriptor, 'writable') && !hasOwnProperty.call(descriptor, 'value')) {\n              const originalDescriptor = getOwnPropertyDescriptor(originalTarget, key);\n              descriptor.value = originalDescriptor.value;\n          }\n          ObjectDefineProperty(originalTarget, key, unwrapDescriptor(descriptor));\n          if (configurable === false) {\n              ObjectDefineProperty(shadowTarget, key, wrapDescriptor(membrane, descriptor, wrapValue));\n          }\n          valueMutated(originalTarget, key);\n          return true;\n      }\n  }\n\n  function wrapReadOnlyValue(membrane, value) {\n      return membrane.valueIsObservable(value) ? membrane.getReadOnlyProxy(value) : value;\n  }\n  class ReadOnlyHandler {\n      constructor(membrane, value) {\n          this.originalTarget = value;\n          this.membrane = membrane;\n      }\n      get(shadowTarget, key) {\n          const { membrane, originalTarget } = this;\n          const value = originalTarget[key];\n          const { valueObserved } = membrane;\n          valueObserved(originalTarget, key);\n          return membrane.getReadOnlyProxy(value);\n      }\n      set(shadowTarget, key, value) {\n          return false;\n      }\n      deleteProperty(shadowTarget, key) {\n          return false;\n      }\n      apply(shadowTarget, thisArg, argArray) {\n          /* No op */\n      }\n      construct(target, argArray, newTarget) {\n          /* No op */\n      }\n      has(shadowTarget, key) {\n          const { originalTarget, membrane: { valueObserved } } = this;\n          valueObserved(originalTarget, key);\n          return key in originalTarget;\n      }\n      ownKeys(shadowTarget) {\n          const { originalTarget } = this;\n          return ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\n      }\n      setPrototypeOf(shadowTarget, prototype) {\n      }\n      getOwnPropertyDescriptor(shadowTarget, key) {\n          const { originalTarget, membrane } = this;\n          const { valueObserved } = membrane;\n          // keys looked up via hasOwnProperty need to be reactive\n          valueObserved(originalTarget, key);\n          let desc = getOwnPropertyDescriptor(originalTarget, key);\n          if (isUndefined(desc)) {\n              return desc;\n          }\n          const shadowDescriptor = getOwnPropertyDescriptor(shadowTarget, key);\n          if (!isUndefined(shadowDescriptor)) {\n              return shadowDescriptor;\n          }\n          // Note: by accessing the descriptor, the key is marked as observed\n          // but access to the value or getter (if available) cannot be observed,\n          // just like regular methods, in which case we just do nothing.\n          desc = wrapDescriptor(membrane, desc, wrapReadOnlyValue);\n          if (hasOwnProperty.call(desc, 'set')) {\n              desc.set = undefined; // readOnly membrane does not allow setters\n          }\n          if (!desc.configurable) {\n              // If descriptor from original target is not configurable,\n              // We must copy the wrapped descriptor over to the shadow target.\n              // Otherwise, proxy will throw an invariant error.\n              // This is our last chance to lock the value.\n              // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor#Invariants\n              ObjectDefineProperty(shadowTarget, key, desc);\n          }\n          return desc;\n      }\n      preventExtensions(shadowTarget) {\n          return false;\n      }\n      defineProperty(shadowTarget, key, descriptor) {\n          return false;\n      }\n  }\n  function createShadowTarget(value) {\n      let shadowTarget = undefined;\n      if (isArray(value)) {\n          shadowTarget = [];\n      }\n      else if (isObject(value)) {\n          shadowTarget = {};\n      }\n      return shadowTarget;\n  }\n  const ObjectDotPrototype = Object.prototype;\n  function defaultValueIsObservable(value) {\n      // intentionally checking for null\n      if (value === null) {\n          return false;\n      }\n      // treat all non-object types, including undefined, as non-observable values\n      if (typeof value !== 'object') {\n          return false;\n      }\n      if (isArray(value)) {\n          return true;\n      }\n      const proto = getPrototypeOf(value);\n      return (proto === ObjectDotPrototype || proto === null || getPrototypeOf(proto) === null);\n  }\n  const defaultValueObserved = (obj, key) => {\n      /* do nothing */\n  };\n  const defaultValueMutated = (obj, key) => {\n      /* do nothing */\n  };\n  const defaultValueDistortion = (value) => value;\n  function wrapDescriptor(membrane, descriptor, getValue) {\n      const { set, get } = descriptor;\n      if (hasOwnProperty.call(descriptor, 'value')) {\n          descriptor.value = getValue(membrane, descriptor.value);\n      }\n      else {\n          if (!isUndefined(get)) {\n              descriptor.get = function () {\n                  // invoking the original getter with the original target\n                  return getValue(membrane, get.call(unwrap(this)));\n              };\n          }\n          if (!isUndefined(set)) {\n              descriptor.set = function (value) {\n                  // At this point we don't have a clear indication of whether\n                  // or not a valid mutation will occur, we don't have the key,\n                  // and we are not sure why and how they are invoking this setter.\n                  // Nevertheless we preserve the original semantics by invoking the\n                  // original setter with the original target and the unwrapped value\n                  set.call(unwrap(this), membrane.unwrapProxy(value));\n              };\n          }\n      }\n      return descriptor;\n  }\n  class ReactiveMembrane {\n      constructor(options) {\n          this.valueDistortion = defaultValueDistortion;\n          this.valueMutated = defaultValueMutated;\n          this.valueObserved = defaultValueObserved;\n          this.valueIsObservable = defaultValueIsObservable;\n          this.objectGraph = new WeakMap();\n          if (!isUndefined(options)) {\n              const { valueDistortion, valueMutated, valueObserved, valueIsObservable } = options;\n              this.valueDistortion = isFunction(valueDistortion) ? valueDistortion : defaultValueDistortion;\n              this.valueMutated = isFunction(valueMutated) ? valueMutated : defaultValueMutated;\n              this.valueObserved = isFunction(valueObserved) ? valueObserved : defaultValueObserved;\n              this.valueIsObservable = isFunction(valueIsObservable) ? valueIsObservable : defaultValueIsObservable;\n          }\n      }\n      getProxy(value) {\n          const unwrappedValue = unwrap(value);\n          const distorted = this.valueDistortion(unwrappedValue);\n          if (this.valueIsObservable(distorted)) {\n              const o = this.getReactiveState(unwrappedValue, distorted);\n              // when trying to extract the writable version of a readonly\n              // we return the readonly.\n              return o.readOnly === value ? value : o.reactive;\n          }\n          return distorted;\n      }\n      getReadOnlyProxy(value) {\n          value = unwrap(value);\n          const distorted = this.valueDistortion(value);\n          if (this.valueIsObservable(distorted)) {\n              return this.getReactiveState(value, distorted).readOnly;\n          }\n          return distorted;\n      }\n      unwrapProxy(p) {\n          return unwrap(p);\n      }\n      getReactiveState(value, distortedValue) {\n          const { objectGraph, } = this;\n          let reactiveState = objectGraph.get(distortedValue);\n          if (reactiveState) {\n              return reactiveState;\n          }\n          const membrane = this;\n          reactiveState = {\n              get reactive() {\n                  const reactiveHandler = new ReactiveProxyHandler(membrane, distortedValue);\n                  // caching the reactive proxy after the first time it is accessed\n                  const proxy = new Proxy(createShadowTarget(distortedValue), reactiveHandler);\n                  registerProxy(proxy, value);\n                  ObjectDefineProperty(this, 'reactive', { value: proxy });\n                  return proxy;\n              },\n              get readOnly() {\n                  const readOnlyHandler = new ReadOnlyHandler(membrane, distortedValue);\n                  // caching the readOnly proxy after the first time it is accessed\n                  const proxy = new Proxy(createShadowTarget(distortedValue), readOnlyHandler);\n                  registerProxy(proxy, value);\n                  ObjectDefineProperty(this, 'readOnly', { value: proxy });\n                  return proxy;\n              }\n          };\n          objectGraph.set(distortedValue, reactiveState);\n          return reactiveState;\n      }\n  }\n  /** version: 0.26.0 */\n\n  function wrap(data, mutationCallback) {\n\n    let membrane = new ReactiveMembrane({\n      valueMutated(target, key) {\n        mutationCallback(target, key);\n      }\n\n    });\n    return {\n      data: membrane.getProxy(data),\n      membrane: membrane\n    };\n  }\n  function unwrap$1(membrane, observable) {\n    let unwrappedData = membrane.unwrapProxy(observable);\n    let copy = {};\n    Object.keys(unwrappedData).forEach(key => {\n      if (['$el', '$refs', '$nextTick', '$watch'].includes(key)) return;\n      copy[key] = unwrappedData[key];\n    });\n    return copy;\n  }\n\n  class Component {\n    constructor(el, componentForClone = null) {\n      this.$el = el;\n      const dataAttr = this.$el.getAttribute('x-data');\n      const dataExpression = dataAttr === '' ? '{}' : dataAttr;\n      const initExpression = this.$el.getAttribute('x-init');\n      let dataExtras = {\n        $el: this.$el\n      };\n      let canonicalComponentElementReference = componentForClone ? componentForClone.$el : this.$el;\n      Object.entries(Alpine.magicProperties).forEach(([name, callback]) => {\n        Object.defineProperty(dataExtras, `$${name}`, {\n          get: function get() {\n            return callback(canonicalComponentElementReference);\n          }\n        });\n      });\n      this.unobservedData = componentForClone ? componentForClone.getUnobservedData() : saferEval(el, dataExpression, dataExtras);\n      // Construct a Proxy-based observable. This will be used to handle reactivity.\n\n      let {\n        membrane,\n        data\n      } = this.wrapDataInObservable(this.unobservedData);\n      this.$data = data;\n      this.membrane = membrane; // After making user-supplied data methods reactive, we can now add\n      // our magic properties to the original data for access.\n\n      this.unobservedData.$el = this.$el;\n      this.unobservedData.$refs = this.getRefsProxy();\n      this.nextTickStack = [];\n\n      this.unobservedData.$nextTick = callback => {\n        this.nextTickStack.push(callback);\n      };\n\n      this.watchers = {};\n\n      this.unobservedData.$watch = (property, callback) => {\n        if (!this.watchers[property]) this.watchers[property] = [];\n        this.watchers[property].push(callback);\n      };\n      /* MODERN-ONLY:START */\n      // We remove this piece of code from the legacy build.\n      // In IE11, we have already defined our helpers at this point.\n      // Register custom magic properties.\n\n\n      Object.entries(Alpine.magicProperties).forEach(([name, callback]) => {\n        Object.defineProperty(this.unobservedData, `$${name}`, {\n          get: function get() {\n            return callback(canonicalComponentElementReference, this.$el);\n          }\n        });\n      });\n      /* MODERN-ONLY:END */\n\n      this.showDirectiveStack = [];\n      this.showDirectiveLastElement;\n      componentForClone || Alpine.onBeforeComponentInitializeds.forEach(callback => callback(this));\n      var initReturnedCallback; // If x-init is present AND we aren't cloning (skip x-init on clone)\n\n      if (initExpression && !componentForClone) {\n        // We want to allow data manipulation, but not trigger DOM updates just yet.\n        // We haven't even initialized the elements with their Alpine bindings. I mean c'mon.\n        this.pauseReactivity = true;\n        initReturnedCallback = this.evaluateReturnExpression(this.$el, initExpression);\n        this.pauseReactivity = false;\n      } // Register all our listeners and set all our attribute bindings.\n      // If we're cloning a component, the third parameter ensures no duplicate\n      // event listeners are registered (the mutation observer will take care of them)\n\n\n      this.initializeElements(this.$el, () => {}, componentForClone); // Use mutation observer to detect new elements being added within this component at run-time.\n      // Alpine's just so darn flexible amirite?\n\n      this.listenForNewElementsToInitialize();\n\n      if (typeof initReturnedCallback === 'function') {\n        // Run the callback returned from the \"x-init\" hook to allow the user to do stuff after\n        // Alpine's got it's grubby little paws all over everything.\n        initReturnedCallback.call(this.$data);\n      }\n\n      componentForClone || setTimeout(() => {\n        Alpine.onComponentInitializeds.forEach(callback => callback(this));\n      }, 0);\n    }\n\n    getUnobservedData() {\n      return unwrap$1(this.membrane, this.$data);\n    }\n\n    wrapDataInObservable(data) {\n      var self = this;\n      let updateDom = debounce(function () {\n        self.updateElements(self.$el);\n      }, 0);\n      return wrap(data, (target, key) => {\n        if (self.watchers[key]) {\n          // If there's a watcher for this specific key, run it.\n          self.watchers[key].forEach(callback => callback(target[key]));\n        } else if (Array.isArray(target)) {\n          // Arrays are special cases, if any of the items change, we consider the array as mutated.\n          Object.keys(self.watchers).forEach(fullDotNotationKey => {\n            let dotNotationParts = fullDotNotationKey.split('.'); // Ignore length mutations since they would result in duplicate calls.\n            // For example, when calling push, we would get a mutation for the item's key\n            // and a second mutation for the length property.\n\n            if (key === 'length') return;\n            dotNotationParts.reduce((comparisonData, part) => {\n              if (Object.is(target, comparisonData[part])) {\n                self.watchers[fullDotNotationKey].forEach(callback => callback(target));\n              }\n\n              return comparisonData[part];\n            }, self.unobservedData);\n          });\n        } else {\n          // Let's walk through the watchers with \"dot-notation\" (foo.bar) and see\n          // if this mutation fits any of them.\n          Object.keys(self.watchers).filter(i => i.includes('.')).forEach(fullDotNotationKey => {\n            let dotNotationParts = fullDotNotationKey.split('.'); // If this dot-notation watcher's last \"part\" doesn't match the current\n            // key, then skip it early for performance reasons.\n\n            if (key !== dotNotationParts[dotNotationParts.length - 1]) return; // Now, walk through the dot-notation \"parts\" recursively to find\n            // a match, and call the watcher if one's found.\n\n            dotNotationParts.reduce((comparisonData, part) => {\n              if (Object.is(target, comparisonData)) {\n                // Run the watchers.\n                self.watchers[fullDotNotationKey].forEach(callback => callback(target[key]));\n              }\n\n              return comparisonData[part];\n            }, self.unobservedData);\n          });\n        } // Don't react to data changes for cases like the `x-created` hook.\n\n\n        if (self.pauseReactivity) return;\n        updateDom();\n      });\n    }\n\n    walkAndSkipNestedComponents(el, callback, initializeComponentCallback = () => {}) {\n      walk(el, el => {\n        // We've hit a component.\n        if (el.hasAttribute('x-data')) {\n          // If it's not the current one.\n          if (!el.isSameNode(this.$el)) {\n            // Initialize it if it's not.\n            if (!el.__x) initializeComponentCallback(el); // Now we'll let that sub-component deal with itself.\n\n            return false;\n          }\n        }\n\n        return callback(el);\n      });\n    }\n\n    initializeElements(rootEl, extraVars = () => {}, componentForClone = false) {\n      this.walkAndSkipNestedComponents(rootEl, el => {\n        // Don't touch spawns from for loop\n        if (el.__x_for_key !== undefined) return false; // Don't touch spawns from if directives\n\n        if (el.__x_inserted_me !== undefined) return false;\n        this.initializeElement(el, extraVars, componentForClone ? false : true);\n      }, el => {\n        if (!componentForClone) el.__x = new Component(el);\n      });\n      this.executeAndClearRemainingShowDirectiveStack();\n      this.executeAndClearNextTickStack(rootEl);\n    }\n\n    initializeElement(el, extraVars, shouldRegisterListeners = true) {\n      // To support class attribute merging, we have to know what the element's\n      // original class attribute looked like for reference.\n      if (el.hasAttribute('class') && getXAttrs(el, this).length > 0) {\n        el.__x_original_classes = convertClassStringToArray(el.getAttribute('class'));\n      }\n\n      shouldRegisterListeners && this.registerListeners(el, extraVars);\n      this.resolveBoundAttributes(el, true, extraVars);\n    }\n\n    updateElements(rootEl, extraVars = () => {}) {\n      this.walkAndSkipNestedComponents(rootEl, el => {\n        // Don't touch spawns from for loop (and check if the root is actually a for loop in a parent, don't skip it.)\n        if (el.__x_for_key !== undefined && !el.isSameNode(this.$el)) return false;\n        this.updateElement(el, extraVars);\n      }, el => {\n        el.__x = new Component(el);\n      });\n      this.executeAndClearRemainingShowDirectiveStack();\n      this.executeAndClearNextTickStack(rootEl);\n    }\n\n    executeAndClearNextTickStack(el) {\n      // Skip spawns from alpine directives\n      if (el === this.$el && this.nextTickStack.length > 0) {\n        // We run the tick stack after the next frame to allow any\n        // running transitions to pass the initial show stage.\n        requestAnimationFrame(() => {\n          while (this.nextTickStack.length > 0) {\n            this.nextTickStack.shift()();\n          }\n        });\n      }\n    }\n\n    executeAndClearRemainingShowDirectiveStack() {\n      // The goal here is to start all the x-show transitions\n      // and build a nested promise chain so that elements\n      // only hide when the children are finished hiding.\n      this.showDirectiveStack.reverse().map(handler => {\n        return new Promise((resolve, reject) => {\n          handler(resolve, reject);\n        });\n      }).reduce((promiseChain, promise) => {\n        return promiseChain.then(() => {\n          return promise.then(finishElement => {\n            finishElement();\n          });\n        });\n      }, Promise.resolve(() => {})).catch(e => {\n        if (e !== TRANSITION_CANCELLED) throw e;\n      }); // We've processed the handler stack. let's clear it.\n\n      this.showDirectiveStack = [];\n      this.showDirectiveLastElement = undefined;\n    }\n\n    updateElement(el, extraVars) {\n      this.resolveBoundAttributes(el, false, extraVars);\n    }\n\n    registerListeners(el, extraVars) {\n      getXAttrs(el, this).forEach(({\n        type,\n        value,\n        modifiers,\n        expression\n      }) => {\n        switch (type) {\n          case 'on':\n            registerListener(this, el, value, modifiers, expression, extraVars);\n            break;\n\n          case 'model':\n            registerModelListener(this, el, modifiers, expression, extraVars);\n            break;\n        }\n      });\n    }\n\n    resolveBoundAttributes(el, initialUpdate = false, extraVars) {\n      let attrs = getXAttrs(el, this);\n      attrs.forEach(({\n        type,\n        value,\n        modifiers,\n        expression\n      }) => {\n        switch (type) {\n          case 'model':\n            handleAttributeBindingDirective(this, el, 'value', expression, extraVars, type, modifiers);\n            break;\n\n          case 'bind':\n            // The :key binding on an x-for is special, ignore it.\n            if (el.tagName.toLowerCase() === 'template' && value === 'key') return;\n            handleAttributeBindingDirective(this, el, value, expression, extraVars, type, modifiers);\n            break;\n\n          case 'text':\n            var output = this.evaluateReturnExpression(el, expression, extraVars);\n            handleTextDirective(el, output, expression);\n            break;\n\n          case 'html':\n            handleHtmlDirective(this, el, expression, extraVars);\n            break;\n\n          case 'show':\n            var output = this.evaluateReturnExpression(el, expression, extraVars);\n            handleShowDirective(this, el, output, modifiers, initialUpdate);\n            break;\n\n          case 'if':\n            // If this element also has x-for on it, don't process x-if.\n            // We will let the \"x-for\" directive handle the \"if\"ing.\n            if (attrs.some(i => i.type === 'for')) return;\n            var output = this.evaluateReturnExpression(el, expression, extraVars);\n            handleIfDirective(this, el, output, initialUpdate, extraVars);\n            break;\n\n          case 'for':\n            handleForDirective(this, el, expression, initialUpdate, extraVars);\n            break;\n\n          case 'cloak':\n            el.removeAttribute('x-cloak');\n            break;\n        }\n      });\n    }\n\n    evaluateReturnExpression(el, expression, extraVars = () => {}) {\n      return saferEval(el, expression, this.$data, _objectSpread2(_objectSpread2({}, extraVars()), {}, {\n        $dispatch: this.getDispatchFunction(el)\n      }));\n    }\n\n    evaluateCommandExpression(el, expression, extraVars = () => {}) {\n      return saferEvalNoReturn(el, expression, this.$data, _objectSpread2(_objectSpread2({}, extraVars()), {}, {\n        $dispatch: this.getDispatchFunction(el)\n      }));\n    }\n\n    getDispatchFunction(el) {\n      return (event, detail = {}) => {\n        el.dispatchEvent(new CustomEvent(event, {\n          detail,\n          bubbles: true\n        }));\n      };\n    }\n\n    listenForNewElementsToInitialize() {\n      const targetNode = this.$el;\n      const observerOptions = {\n        childList: true,\n        attributes: true,\n        subtree: true\n      };\n      const observer = new MutationObserver(mutations => {\n        for (let i = 0; i < mutations.length; i++) {\n          // Filter out mutations triggered from child components.\n          const closestParentComponent = mutations[i].target.closest('[x-data]');\n          if (!(closestParentComponent && closestParentComponent.isSameNode(this.$el))) continue;\n\n          if (mutations[i].type === 'attributes' && mutations[i].attributeName === 'x-data') {\n            const xAttr = mutations[i].target.getAttribute('x-data') || '{}';\n            const rawData = saferEval(this.$el, xAttr, {\n              $el: this.$el\n            });\n            Object.keys(rawData).forEach(key => {\n              if (this.$data[key] !== rawData[key]) {\n                this.$data[key] = rawData[key];\n              }\n            });\n          }\n\n          if (mutations[i].addedNodes.length > 0) {\n            mutations[i].addedNodes.forEach(node => {\n              if (node.nodeType !== 1 || node.__x_inserted_me) return;\n\n              if (node.matches('[x-data]') && !node.__x) {\n                node.__x = new Component(node);\n                return;\n              }\n\n              this.initializeElements(node);\n            });\n          }\n        }\n      });\n      observer.observe(targetNode, observerOptions);\n    }\n\n    getRefsProxy() {\n      var self = this;\n      var refObj = {};\n      // One of the goals of this is to not hold elements in memory, but rather re-evaluate\n      // the DOM when the system needs something from it. This way, the framework is flexible and\n      // friendly to outside DOM changes from libraries like Vue/Livewire.\n      // For this reason, I'm using an \"on-demand\" proxy to fake a \"$refs\" object.\n\n      return new Proxy(refObj, {\n        get(object, property) {\n          if (property === '$isAlpineProxy') return true;\n          var ref; // We can't just query the DOM because it's hard to filter out refs in\n          // nested components.\n\n          self.walkAndSkipNestedComponents(self.$el, el => {\n            if (el.hasAttribute('x-ref') && el.getAttribute('x-ref') === property) {\n              ref = el;\n            }\n          });\n          return ref;\n        }\n\n      });\n    }\n\n  }\n\n  const Alpine = {\n    version: \"2.8.2\",\n    pauseMutationObserver: false,\n    magicProperties: {},\n    onComponentInitializeds: [],\n    onBeforeComponentInitializeds: [],\n    ignoreFocusedForValueBinding: false,\n    start: async function start() {\n      if (!isTesting()) {\n        await domReady();\n      }\n\n      this.discoverComponents(el => {\n        this.initializeComponent(el);\n      }); // It's easier and more performant to just support Turbolinks than listen\n      // to MutationObserver mutations at the document level.\n\n      document.addEventListener(\"turbolinks:load\", () => {\n        this.discoverUninitializedComponents(el => {\n          this.initializeComponent(el);\n        });\n      });\n      this.listenForNewUninitializedComponentsAtRunTime();\n    },\n    discoverComponents: function discoverComponents(callback) {\n      const rootEls = document.querySelectorAll('[x-data]');\n      rootEls.forEach(rootEl => {\n        callback(rootEl);\n      });\n    },\n    discoverUninitializedComponents: function discoverUninitializedComponents(callback, el = null) {\n      const rootEls = (el || document).querySelectorAll('[x-data]');\n      Array.from(rootEls).filter(el => el.__x === undefined).forEach(rootEl => {\n        callback(rootEl);\n      });\n    },\n    listenForNewUninitializedComponentsAtRunTime: function listenForNewUninitializedComponentsAtRunTime() {\n      const targetNode = document.querySelector('body');\n      const observerOptions = {\n        childList: true,\n        attributes: true,\n        subtree: true\n      };\n      const observer = new MutationObserver(mutations => {\n        if (this.pauseMutationObserver) return;\n\n        for (let i = 0; i < mutations.length; i++) {\n          if (mutations[i].addedNodes.length > 0) {\n            mutations[i].addedNodes.forEach(node => {\n              // Discard non-element nodes (like line-breaks)\n              if (node.nodeType !== 1) return; // Discard any changes happening within an existing component.\n              // They will take care of themselves.\n\n              if (node.parentElement && node.parentElement.closest('[x-data]')) return;\n              this.discoverUninitializedComponents(el => {\n                this.initializeComponent(el);\n              }, node.parentElement);\n            });\n          }\n        }\n      });\n      observer.observe(targetNode, observerOptions);\n    },\n    initializeComponent: function initializeComponent(el) {\n      if (!el.__x) {\n        // Wrap in a try/catch so that we don't prevent other components\n        // from initializing when one component contains an error.\n        try {\n          el.__x = new Component(el);\n        } catch (error) {\n          setTimeout(() => {\n            throw error;\n          }, 0);\n        }\n      }\n    },\n    clone: function clone(component, newEl) {\n      if (!newEl.__x) {\n        newEl.__x = new Component(newEl, component);\n      }\n    },\n    addMagicProperty: function addMagicProperty(name, callback) {\n      this.magicProperties[name] = callback;\n    },\n    onComponentInitialized: function onComponentInitialized(callback) {\n      this.onComponentInitializeds.push(callback);\n    },\n    onBeforeComponentInitialized: function onBeforeComponentInitialized(callback) {\n      this.onBeforeComponentInitializeds.push(callback);\n    }\n  };\n\n  if (!isTesting()) {\n    window.Alpine = Alpine;\n\n    if (window.deferLoadingAlpine) {\n      window.deferLoadingAlpine(function () {\n        window.Alpine.start();\n      });\n    } else {\n      window.Alpine.start();\n    }\n  }\n\n  return Alpine;\n\n})));\n","module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"fill-current h-6 w-6\\\" viewBox=\\\"0 0 20 20\\\"><path d=\\\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\\\"></path></svg>\"","module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"stroke-current h-6 w-6 feather feather-info\\\"><circle cx=\\\"12\\\" cy=\\\"12\\\" r=\\\"10\\\"></circle><line x1=\\\"12\\\" y1=\\\"16\\\" x2=\\\"12\\\" y2=\\\"12\\\"></line><line x1=\\\"12\\\" y1=\\\"8\\\" x2=\\\"12\\\" y2=\\\"8\\\"></line></svg>\"","module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"fill-current stroke-current h-6 w-6 feather feather-more-vertical\\\"><circle cx=\\\"12\\\" cy=\\\"12\\\" r=\\\"1\\\"></circle><circle cx=\\\"12\\\" cy=\\\"5\\\" r=\\\"1\\\"></circle><circle cx=\\\"12\\\" cy=\\\"19\\\" r=\\\"1\\\"></circle></svg>\"","module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\" class=\\\"fill-current stroke-current h-6 w-6\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"feather feather-move\\\"><polyline points=\\\"5 9 2 12 5 15\\\"></polyline><polyline points=\\\"9 5 12 2 15 5\\\"></polyline><polyline points=\\\"15 19 12 22 9 19\\\"></polyline><polyline points=\\\"19 9 22 12 19 15\\\"></polyline><line x1=\\\"2\\\" y1=\\\"12\\\" x2=\\\"22\\\" y2=\\\"12\\\"></line><line x1=\\\"12\\\" y1=\\\"2\\\" x2=\\\"12\\\" y2=\\\"22\\\"></line></svg>\"","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\n * @file\n * Behavior which initializes the simplerSelect jQuery Plugin.\n */\n\n(function ($) {\n  'use strict';\n\n  Drupal.behaviors.cshs = {\n    attach: function (context, settings) {\n      $('select.simpler-select-root', context)\n        .once('cshs')\n        .each(function (idx, element) {\n          // See if we got settings from Drupal for this field.\n          if (typeof settings.cshs !== 'undefined' && typeof settings.cshs[element.id] !== 'undefined') {\n            $(element).simplerSelect(settings.cshs[element.id]);\n          }\n        }\n        );\n    }\n  };\n})(jQuery);\n","/**\n * @file\n * Dropbutton feature.\n */\n\nimport moreVertical from '../../icons/more-vertical.svg';\n\n(function ($, Drupal) {\n  /**\n   * A DropButton presents an HTML list as a button with a primary action.\n   *\n   * All secondary actions beyond the first in the list are presented in a\n   * dropdown list accessible through a toggle arrow associated with the button.\n   *\n   * @constructor Drupal.DropButton\n   *\n   * @param {HTMLElement} dropbutton\n   *   A DOM element.\n   * @param {object} settings\n   *   A list of options including:\n   * @param {string} settings.title\n   *   The text inside the toggle link element. This text is hidden\n   *   from visual UAs.\n   */\n  function DropButton(dropbutton, settings) {\n    // Merge defaults with settings.\n    const options = $.extend(\n      { title: Drupal.t('List additional actions') },\n      settings,\n    );\n    const $dropbutton = $(dropbutton);\n\n    /**\n     * @type {jQuery}\n     */\n    this.$dropbutton = $dropbutton;\n\n    /**\n     * @type {jQuery}\n     */\n    this.$list = $dropbutton.find('.dropbutton');\n\n    /**\n     * Find actions and mark them.\n     *\n     * @type {jQuery}\n     */\n    this.$actions = this.$list.find('.dropbutton-action');\n\n    // Add the special dropdown only if there are hidden actions.\n    if (this.$actions.length > 1) {\n      // Identify the first element of the collection.\n      const $primary = this.$actions.slice(0, 1);\n      // Identify the secondary actions.\n      const $secondary = this.$actions.slice(1);\n      $secondary.addClass('secondary-action');\n      // Add toggle link.\n      $primary.append(Drupal.theme('dropbuttonToggle', options));\n      // Bind mouse events.\n      this.$dropbutton.addClass('dropbutton-multiple').on({\n        /**\n         * Adds a timeout to close the dropdown on mouseleave.\n         *\n         * @ignore\n         */\n        'mouseleave.dropbutton': $.proxy(this.hoverOut, this),\n\n        /**\n         * Clears timeout when mouseout of the dropdown.\n         *\n         * @ignore\n         */\n        'mouseenter.dropbutton': $.proxy(this.hoverIn, this),\n\n        /**\n         * Similar to mouseleave/mouseenter, but for keyboard navigation.\n         *\n         * @ignore\n         */\n        'focusout.dropbutton': $.proxy(this.focusOut, this),\n\n        /**\n         * @ignore\n         */\n        'focusin.dropbutton': $.proxy(this.focusIn, this),\n      });\n    } else {\n      this.$dropbutton.addClass('dropbutton-single');\n    }\n  }\n\n  /**\n   * Delegated callback for opening and closing dropbutton secondary actions.\n   *\n   * @function Drupal.DropButton~dropbuttonClickHandler\n   *\n   * @param {jQuery.Event} e\n   *   The event triggered.\n   */\n  function dropbuttonClickHandler(e) {\n    e.preventDefault();\n    $(e.target)\n      .closest('.dropbutton-wrapper')\n      .toggleClass('open');\n  }\n\n  /**\n   * Process elements with the .dropbutton class on page load.\n   *\n   * @type {Drupal~behavior}\n   *\n   * @prop {Drupal~behaviorAttach} attach\n   *   Attaches dropButton behaviors.\n   */\n  Drupal.behaviors.dropButton = {\n    attach(context, settings) {\n      const $dropbuttons = $(context)\n        .find('.dropbutton-wrapper')\n        .once('dropbutton');\n      if ($dropbuttons.length) {\n        // Adds the delegated handler that will toggle dropdowns on click.\n        const $body = $('body').once('dropbutton-click');\n        if ($body.length) {\n          $body.on('click', '.dropbutton-toggle', dropbuttonClickHandler);\n        }\n        // Initialize all buttons.\n        const il = $dropbuttons.length;\n        for (let i = 0; i < il; i++) {\n          DropButton.dropbuttons.push(\n            new DropButton($dropbuttons[i], settings.dropbutton),\n          );\n        }\n      }\n    },\n  };\n\n  /**\n   * Extend the DropButton constructor.\n   */\n  $.extend(\n    DropButton,\n    /** @lends Drupal.DropButton */ {\n      /**\n       * Store all processed DropButtons.\n       *\n       * @type {Array.<Drupal.DropButton>}\n       */\n      dropbuttons: [],\n    },\n  );\n\n  /**\n   * Extend the DropButton prototype.\n   */\n  $.extend(\n    DropButton.prototype,\n    /** @lends Drupal.DropButton# */ {\n      /**\n       * Toggle the dropbutton open and closed.\n       *\n       * @param {bool} [show]\n       *   Force the dropbutton to open by passing true or to close by\n       *   passing false.\n       */\n      toggle(show) {\n        const isBool = typeof show === 'boolean';\n        show = isBool ? show : !this.$dropbutton.hasClass('open');\n        this.$dropbutton.toggleClass('open', show);\n      },\n\n      /**\n       * @method\n       */\n      hoverIn() {\n        // Clear any previous timer we were using.\n        if (this.timerID) {\n          window.clearTimeout(this.timerID);\n        }\n      },\n\n      /**\n       * @method\n       */\n      hoverOut() {\n        // Wait half a second before closing.\n        this.timerID = window.setTimeout($.proxy(this, 'close'), 500);\n      },\n\n      /**\n       * @method\n       */\n      open() {\n        this.toggle(true);\n      },\n\n      /**\n       * @method\n       */\n      close() {\n        this.toggle(false);\n      },\n\n      /**\n       * @param {jQuery.Event} e\n       *   The event triggered.\n       */\n      focusOut(e) {\n        this.hoverOut.call(this, e);\n      },\n\n      /**\n       * @param {jQuery.Event} e\n       *   The event triggered.\n       */\n      focusIn(e) {\n        this.hoverIn.call(this, e);\n      },\n    },\n  );\n\n  $.extend(\n    Drupal.theme,\n    /** @lends Drupal.theme */ {\n      /**\n       * A toggle is an interactive element often bound to a click handler.\n       *\n       * @param {object} options\n       *   Options object.\n       * @param {string} [options.title]\n       *   The button text.\n       *\n       * @return {string}\n       *   A string representing a DOM fragment.\n       */\n\n      dropbuttonToggle(options) {\n        const dropbuttonClasses = [\n          'dropbutton-toggle',\n          'border-current',\n          'border-l',\n          'pl-2',\n          'flex',\n        ];\n\n        return `<span class=\"${dropbuttonClasses.join(' ')}\">\n          <span class=\"visually-hidden\">${options.title}</span>\n          <button class=\"flex\" type=\"button\">\n            ${moreVertical}\n          </button>\n        </span>`;\n      },\n    },\n  );\n\n  // Expose constructor in the public space.\n  Drupal.DropButton = DropButton;\n})(jQuery, Drupal);\n","/**\n * @file\n * Render standard select with hierarchical options: as set of selects, one for each level of the hierarchy.\n */\nimport chevronDown from '../../icons/chevron-down.svg';\n\n(function ($, pluginName) {\n  'use strict';\n\n  // Create the defaults once.\n  var defaults = {\n    noneLabel: '- Please choose -',\n    noneValue: '_none',\n    labels: []\n  };\n\n  // The actual plugin constructor.\n  function Plugin(element, options) {\n    this.$element = $(element);\n    this.$currentSelect = null;\n\n    this.settings = $.extend({}, defaults, options);\n    this.selectOptions = [];\n\n    this.init();\n  }\n\n  Plugin.prototype = {\n    init: function () {\n      var that = this;\n      // Ensure that we'll clearly initiate a new instance.\n      that.destroy();\n      that.$element.find('option').each(function () {\n        var $option = $(this);\n\n        that.selectOptions.push({\n          value: $option.val(),\n          label: $option.text(),\n          parent: $option.data('parent') || 0,\n          children: []\n        });\n      });\n\n      var tree = that.buildTree(that.selectOptions);\n\n      if (tree === null) {\n        return;\n      }\n\n      var initialValue = that.$element.val();\n      var initialParents = [];\n      var $selectElement = that.createSelect(tree);\n      var $currentSelect = $selectElement;\n\n      if (initialValue) {\n        if (typeof initialValue !== 'string') {\n          // If array, flatten it.\n          initialValue = initialValue.shift();\n        }\n\n        // Get all parents, starting from the initial value.\n        initialParents = that.getAllParents(initialValue);\n        // Reverse the parents, that they start from the root.\n        initialParents.reverse();\n        // Add the current value as the last leave.\n        initialParents.push(initialValue);\n      }\n\n      this.$element.after($selectElement);\n\n      $.each(initialParents, function (i, value) {\n        that.selectSetValue($currentSelect, value);\n\n        var $nextSelect = that.createSelect(that.getOptionInfoByValue(value).children, value, i + 1);\n\n        if (null !== $nextSelect) {\n          $currentSelect.after($nextSelect);\n          $currentSelect = $nextSelect;\n        }\n      });\n\n      // Hide the original.\n      that.$element.hide();\n    },\n\n    /**\n     * Destroy CSHS.\n     */\n    destroy: function () {\n      this.selectOptions = [];\n      this.$element.show().nextAll('.select-wrapper').remove();\n    },\n\n    /**\n     * Given an array of options, build an HTML select element.\n     *\n     * @param {HTMLElement[]|HTMLOptionElement[]} options\n     *   List of options.\n     * @param {String} [parent]\n     *   Parent option.\n     * @param {Number} [level]\n     *   Nesting level.\n     *\n     * @return {jQuery|null}\n     *   Newly created element.\n     */\n    createSelect: function (options, parent, level) {\n      if (!options || options.length < 1) {\n        return null;\n      }\n\n      parent = parent || this.settings.noneValue;\n      level = level || 0;\n\n      const required = this.$element.attr('required');\n\n      const wrapperClasses = [\n        'select-wrapper',\n        'relative',\n      ];\n\n      const chevronClasses = [\n        'pointer-events-none',\n        'absolute',\n        'inset-y-0',\n        'right-0',\n        'flex',\n        'items-center',\n        'px-2',\n      ];\n\n      if (required) chevronClasses.push('text-red-900');\n\n      const chevronElement = `\n      <div class=\"${chevronClasses.join(' ')}\">\n      ${chevronDown}\n      </div>\n      `;\n\n      const selectClasses = [\n        'simpler-select',\n        'w-full',\n      ];\n\n      const selectElement = `<select class=\"${selectClasses.join(' ')}\">`\n\n      var that = this;\n      var $select = $(selectElement).addClass(that.$element.attr('class'));\n      var $wrapper = $(`<div class=\"${wrapperClasses.join(' ')}\">`);\n\n      if (that.$element.hasClass('error')) {\n        $select.addClass('error');\n      }\n\n      // Always add the \"_none\" option.\n      $select.append('<option value=\"' + that.settings.noneValue + '\" data-parent-value=\"' + parent + '\">' + that.settings.noneLabel + '</option>');\n\n      $.each(options, function (i, option) {\n        // Do not add \"_none\" option (already added by code above).\n        if (option.value != that.settings.noneValue) {\n          var $option = $('<option>')\n            .val(option.value)\n            // Remove dashes from the beginning, then set the label.\n            .text(option.label.replace(/(- )+/, ''));\n\n          if (option.children.length) {\n            $option.addClass('has-children');\n          }\n\n          $select.append($option);\n        }\n      });\n\n      $select.change(function () {\n        that.$currentSelect = $(this);\n        // Remove deeper selects.\n        that.selectRemoveNext(that.$currentSelect);\n\n        // Get the selected value and also set the original drop-down.\n        var $selected = that.$currentSelect.find('option:selected');\n        var selectedValue = $selected.val();\n        var parentValue = $selected.data('parent-value');\n\n        if (undefined === parentValue) {\n          parentValue = selectedValue;\n        }\n\n        that.$element\n          .val(parentValue)\n          .change();\n\n        if (selectedValue == that.settings.noneValue) {\n          return;\n        }\n\n        // Build new child select.\n        var optionInfo = that.getOptionInfoByValue(selectedValue);\n\n        if (undefined !== optionInfo.children) {\n          that.addSelectAfter(that.createSelect(optionInfo.children, selectedValue, that.selectGetLevel()));\n        }\n      });\n\n      if (that.settings.labels[level]) {\n        $wrapper.append('<label>' + that.settings.labels[level] + '</label>');\n      }\n\n      $wrapper.append($select);\n      $wrapper.append(chevronElement);\n\n      return $wrapper;\n    },\n\n    /**\n     * Given an flat array an tree is built.\n     *\n     * @param {Object[]} array\n     *   Options list.\n     * @param {Object} [parent]\n     *   Parent option.\n     * @param {Array} [tree]\n     *   Existing options.\n     *\n     * @return {Array}\n     *   Options tree.\n     */\n    buildTree: function (array, parent, tree) {\n      tree = tree || [];\n      parent = parent || { value: 0 };\n\n      var children = $.grep(array, function (child) {\n        // Here must be no strict comparison!\n        return undefined !== child && child.parent == parent.value;\n      });\n\n      if (children.length) {\n        if (0 == parent.value) {\n          tree = children;\n        }\n        else {\n          parent.children = children;\n        }\n\n        for (var i = 0; i < children.length; i++) {\n          this.buildTree(array, children[i], tree);\n        }\n      }\n\n      return tree;\n    },\n\n    /**\n     * Set the value of a select to the given.\n     *\n     * @param {jQuery} $select\n     *   Wrapper element.\n     * @param {String} value\n     *   New value to set.\n     */\n    selectSetValue: function ($select, value) {\n      $select.find('select').val(value);\n    },\n\n    /**\n     * Remove all following selects.\n     */\n    selectRemoveNext: function () {\n      this.$currentSelect\n        .parents('.select-wrapper')\n        .nextAll('.select-wrapper')\n        .remove();\n    },\n\n    /**\n     * Add a newSelect after the currentSelect.\n     *\n     * @param {jQuery} $newSelect\n     *   New \"select\" element.\n     */\n    addSelectAfter: function ($newSelect) {\n      this.$currentSelect.parents('.select-wrapper').after($newSelect);\n    },\n\n    /**\n     * Get the hierarchy level of given select.\n     *\n     * @return {Number}\n     *   Number of wrappers.\n     */\n    selectGetLevel: function () {\n      return this.$currentSelect.parents('.form-type-cshs').find('.select-wrapper').length;\n    },\n\n    /**\n     * Given a value build an array of all parents (from leave to root).\n     *\n     * @param {String} value\n     *   Value of option.\n     * @param {Array} [parents]\n     *   Parent options.\n     *\n     * @return {Array}\n     *   Updated parent options list.\n     */\n    getAllParents: function (value, parents) {\n      if (value == this.settings.noneValue) {\n        return [];\n      }\n\n      parents = parents || [];\n\n      var parent = this.getOptionByValue(value).data('parent');\n\n      if (undefined !== parent && 0 != parent) {\n        parents.push(parent);\n        this.getAllParents(this.getOptionByValue(parent).val(), parents);\n      }\n\n      return parents;\n    },\n\n    /**\n     * Tiny helper to get the option jQuery object.\n     *\n     * @param {String} value\n     *   Value of an option.\n     *\n     * @return {jQuery}\n     *   Element.\n     */\n    getOptionByValue: function (value) {\n      return this.$element.find('option[value=\"' + value + '\"]');\n    },\n\n    /**\n     * Helper to get the info-object which corresponds to an option value.\n     *\n     * @param {String} value\n     *   Value of an option.\n     *\n     * @return {Object}\n     *   Element.\n     */\n    getOptionInfoByValue: function (value) {\n      var optionInfo = {};\n\n      $.each(this.selectOptions, function (idx, option) {\n        if (option.value == value) {\n          optionInfo = option;\n          return false;\n        }\n      });\n\n      return optionInfo;\n    }\n  };\n\n  // A really lightweight plugin wrapper around the constructor,\n  // preventing against multiple instantiations.\n  $.fn[pluginName] = function (options) {\n    this.each(function () {\n      if (!$.data(this, 'plugin_' + pluginName)) {\n        $.data(this, 'plugin_' + pluginName, new Plugin(this, options));\n      }\n    });\n\n    return this;\n  };\n})(jQuery, 'simplerSelect');\n","/**\n * @file\n * Provide dragging capabilities to admin uis.\n */\n\n/**\n * Triggers when weights columns are toggled.\n *\n * @event columnschange\n */\nimport move from '../../icons/move.svg';\nimport info from '../../icons/info.svg';\n\n(function ($, Drupal, drupalSettings) {\n  /**\n   * Store the state of weight columns display for all tables.\n   *\n   * Default value is to hide weight columns.\n   */\n  let showWeight = JSON.parse(\n    localStorage.getItem('Drupal.tableDrag.showWeight'),\n  );\n\n  /**\n   * Drag and drop table rows with field manipulation.\n   *\n   * Using the drupal_attach_tabledrag() function, any table with weights or\n   * parent relationships may be made into draggable tables. Columns containing\n   * a field may optionally be hidden, providing a better user experience.\n   *\n   * Created tableDrag instances may be modified with custom behaviors by\n   * overriding the .onDrag, .onDrop, .row.onSwap, and .row.onIndent methods.\n   * See blocks.js for an example of adding additional functionality to\n   * tableDrag.\n   *\n   * @type {Drupal~behavior}\n   */\n  Drupal.behaviors.tableDrag = {\n    attach(context, settings) {\n      function initTableDrag(table, base) {\n        if (table.length) {\n          // Create the new tableDrag instance. Save in the Drupal variable\n          // to allow other scripts access to the object.\n          Drupal.tableDrag[base] = new Drupal.tableDrag(\n            table[0],\n            settings.tableDrag[base],\n          );\n        }\n      }\n\n      Object.keys(settings.tableDrag || {}).forEach(base => {\n        initTableDrag(\n          $(context)\n            .find(`#${base}`)\n            .once('tabledrag'),\n          base,\n        );\n      });\n    },\n  };\n\n  /**\n   * Provides table and field manipulation.\n   *\n   * @constructor\n   *\n   * @param {HTMLElement} table\n   *   DOM object for the table to be made draggable.\n   * @param {object} tableSettings\n   *   Settings for the table added via drupal_add_dragtable().\n   */\n  Drupal.tableDrag = function (table, tableSettings) {\n    const self = this;\n    const $table = $(table);\n\n    /**\n     * @type {jQuery}\n     */\n    this.$table = $(table);\n\n    /**\n     *\n     * @type {HTMLElement}\n     */\n    this.table = table;\n\n    /**\n     * @type {object}\n     */\n    this.tableSettings = tableSettings;\n\n    /**\n     * Used to hold information about a current drag operation.\n     *\n     * @type {?HTMLElement}\n     */\n    this.dragObject = null;\n\n    /**\n     * Provides operations for row manipulation.\n     *\n     * @type {?HTMLElement}\n     */\n    this.rowObject = null;\n\n    /**\n     * Remember the previous element.\n     *\n     * @type {?HTMLElement}\n     */\n    this.oldRowElement = null;\n\n    /**\n     * Used to determine up or down direction from last mouse move.\n     *\n     * @type {number}\n     */\n    this.oldY = 0;\n\n    /**\n     * Whether anything in the entire table has changed.\n     *\n     * @type {bool}\n     */\n    this.changed = false;\n\n    /**\n     * Maximum amount of allowed parenting.\n     *\n     * @type {number}\n     */\n    this.maxDepth = 0;\n\n    /**\n     * Direction of the table.\n     *\n     * @type {number}\n     */\n    this.rtl = $(this.table).css('direction') === 'rtl' ? -1 : 1;\n\n    /**\n     *\n     * @type {bool}\n     */\n    this.striping = $(this.table).data('striping') === 1;\n\n    /**\n     * Configure the scroll settings.\n     *\n     * @type {object}\n     *\n     * @prop {number} amount\n     * @prop {number} interval\n     * @prop {number} trigger\n     */\n    this.scrollSettings = { amount: 4, interval: 50, trigger: 70 };\n\n    /**\n     *\n     * @type {?number}\n     */\n    this.scrollInterval = null;\n\n    /**\n     *\n     * @type {number}\n     */\n    this.scrollY = 0;\n\n    /**\n     *\n     * @type {number}\n     */\n    this.windowHeight = 0;\n\n    /**\n     * Check this table's settings for parent relationships.\n     *\n     * For efficiency, large sections of code can be skipped if we don't need to\n     * track horizontal movement and indentations.\n     *\n     * @type {bool}\n     */\n    this.indentEnabled = false;\n    Object.keys(tableSettings || {}).forEach(group => {\n      Object.keys(tableSettings[group] || {}).forEach(n => {\n        if (tableSettings[group][n].relationship === 'parent') {\n          this.indentEnabled = true;\n        }\n        if (tableSettings[group][n].limit > 0) {\n          this.maxDepth = tableSettings[group][n].limit;\n        }\n      });\n    });\n    if (this.indentEnabled) {\n      /**\n       * Total width of indents, set in makeDraggable.\n       *\n       * @type {number}\n       */\n      this.indentCount = 1;\n      // Find the width of indentations to measure mouse movements against.\n      // Because the table doesn't need to start with any indentations, we\n      // manually append 2 indentations in the first draggable row, measure\n      // the offset, then remove.\n      const indent = Drupal.theme('tableDragIndentation');\n      const testRow = $('<tr/>')\n        .addClass('draggable')\n        .appendTo(table);\n      const testCell = $('<td/>')\n        .appendTo(testRow)\n        .prepend(indent)\n        .prepend(indent);\n      const $indentation = testCell.find('.js-indentation');\n\n      /**\n       *\n       * @type {number}\n       */\n      this.indentAmount =\n        $indentation.get(1).offsetLeft - $indentation.get(0).offsetLeft;\n      testRow.remove();\n    }\n\n    // Make each applicable row draggable.\n    // Match immediate children of the parent element to allow nesting.\n    $table.find('> tr.draggable, > tbody > tr.draggable').each(function () {\n      self.makeDraggable(this);\n    });\n\n    const buttonClasses = [\n      'tabledrag-toggle-weight',\n      'appearance-none',\n      'ml-auto',\n      'px-4',\n      'py-3',\n      'border',\n      'border-transparent',\n      'rounded-lg',\n      'shadow',\n      'bg-cyan-500',\n      'text-white',\n      'hover:bg-cyan-600',\n      'focus:outline-none',\n      'focus:shadow-outline',\n      'focus:bg-cyan-600',\n      'transition',\n      'ease-in-out',\n      'duration-150'\n    ];\n\n    // Add a link before the table for users to show or hide weight columns.\n    $table.before(\n      $(`<button type=\"button\" class=\"${buttonClasses.join(' ')}\"></button>`)\n        .attr(\n          'title',\n          Drupal.t('Re-order rows by numerical weight instead of dragging.'),\n        )\n        .on(\n          'click',\n          $.proxy(function (e) {\n            e.preventDefault();\n            this.toggleColumns();\n          }, this),\n        )\n        .wrap('<div class=\"flex flex-col items-end my-2\"></div>')\n        .parent(),\n    );\n\n    // Initialize the specified columns (for example, weight or parent columns)\n    // to show or hide according to user preference. This aids accessibility\n    // so that, e.g., screen reader users can choose to enter weight values and\n    // manipulate form elements directly, rather than using drag-and-drop..\n    self.initColumns();\n\n    // Add event bindings to the document. The self variable is passed along\n    // as event handlers do not have direct access to the tableDrag object.\n    $(document).on('touchmove', event =>\n      self.dragRow(event.originalEvent.touches[0], self),\n    );\n    $(document).on('touchend', event =>\n      self.dropRow(event.originalEvent.touches[0], self),\n    );\n    $(document).on('mousemove pointermove', event => self.dragRow(event, self));\n    $(document).on('mouseup pointerup', event => self.dropRow(event, self));\n\n    // React to localStorage event showing or hiding weight columns.\n    $(window).on(\n      'storage',\n      $.proxy(function (e) {\n        // Only react to 'Drupal.tableDrag.showWeight' value change.\n        if (e.originalEvent.key === 'Drupal.tableDrag.showWeight') {\n          // This was changed in another window, get the new value for this\n          // window.\n          showWeight = JSON.parse(e.originalEvent.newValue);\n          this.displayColumns(showWeight);\n        }\n      }, this),\n    );\n  };\n\n  /**\n   * Initialize columns containing form elements to be hidden by default.\n   *\n   * Identify and mark each cell with a CSS class so we can easily toggle\n   * show/hide it. Finally, hide columns if user does not have a\n   * 'Drupal.tableDrag.showWeight' localStorage value.\n   */\n  Drupal.tableDrag.prototype.initColumns = function () {\n    const $table = this.$table;\n    let hidden;\n    let cell;\n    let columnIndex;\n    Object.keys(this.tableSettings || {}).forEach(group => {\n      // Find the first field in this group.\n      Object.keys(this.tableSettings[group]).some(tableSetting => {\n        const field = $table\n          .find(`.${this.tableSettings[group][tableSetting].target}`)\n          .eq(0);\n        if (field.length && this.tableSettings[group][tableSetting].hidden) {\n          hidden = this.tableSettings[group][tableSetting].hidden;\n          cell = field.closest('td');\n          return true;\n        }\n        return false;\n      });\n\n      // Mark the column containing this field so it can be hidden.\n      if (hidden && cell[0]) {\n        // Add 1 to our indexes. The nth-child selector is 1 based, not 0\n        // based. Match immediate children of the parent element to allow\n        // nesting.\n        columnIndex =\n          cell\n            .parent()\n            .find('> td')\n            .index(cell.get(0)) + 1;\n        $table\n          .find('> thead > tr, > tbody > tr, > tr')\n          .each(this.addColspanClass(columnIndex));\n      }\n    });\n    this.displayColumns(showWeight);\n  };\n\n  /**\n   * Mark cells that have colspan.\n   *\n   * In order to adjust the colspan instead of hiding them altogether.\n   *\n   * @param {number} columnIndex\n   *   The column index to add colspan class to.\n   *\n   * @return {function}\n   *   Function to add colspan class.\n   */\n  Drupal.tableDrag.prototype.addColspanClass = function (columnIndex) {\n    return function () {\n      // Get the columnIndex and adjust for any colspans in this row.\n      const $row = $(this);\n      let index = columnIndex;\n      const cells = $row.children();\n      let cell;\n      cells.each(function (n) {\n        if (n < index && this.colSpan && this.colSpan > 1) {\n          index -= this.colSpan - 1;\n        }\n      });\n      if (index > 0) {\n        cell = cells.filter(`:nth-child(${index})`);\n        if (cell[0].colSpan && cell[0].colSpan > 1) {\n          // If this cell has a colspan, mark it so we can reduce the colspan.\n          cell.addClass('tabledrag-has-colspan');\n        } else {\n          // Mark this cell so we can hide it.\n          cell.addClass('tabledrag-hide');\n        }\n      }\n    };\n  };\n\n  /**\n   * Hide or display weight columns. Triggers an event on change.\n   *\n   * @fires event:columnschange\n   *\n   * @param {bool} displayWeight\n   *   'true' will show weight columns.\n   */\n  Drupal.tableDrag.prototype.displayColumns = function (displayWeight) {\n    if (displayWeight) {\n      this.showColumns();\n    }\n    // Default action is to hide columns.\n    else {\n      this.hideColumns();\n    }\n    // Trigger an event to allow other scripts to react to this display change.\n    // Force the extra parameter as a bool.\n    $('table')\n      .findOnce('tabledrag')\n      .trigger('columnschange', !!displayWeight);\n  };\n\n  /**\n   * Toggle the weight column depending on 'showWeight' value.\n   *\n   * Store only default override.\n   */\n  Drupal.tableDrag.prototype.toggleColumns = function () {\n    showWeight = !showWeight;\n    this.displayColumns(showWeight);\n    if (showWeight) {\n      // Save default override.\n      localStorage.setItem('Drupal.tableDrag.showWeight', showWeight);\n    } else {\n      // Reset the value to its default.\n      localStorage.removeItem('Drupal.tableDrag.showWeight');\n    }\n  };\n\n  /**\n   * Hide the columns containing weight/parent form elements.\n   *\n   * Undo showColumns().\n   */\n  Drupal.tableDrag.prototype.hideColumns = function () {\n    const $tables = $('table').findOnce('tabledrag');\n    // Hide weight/parent cells and headers.\n    $tables.find('.tabledrag-hide').css('display', 'none');\n    // Show TableDrag handles.\n    $tables.find('.tabledrag-handle').css('display', '');\n    // Reduce the colspan of any effected multi-span columns.\n    $tables.find('.tabledrag-has-colspan').each(function () {\n      this.colSpan = this.colSpan - 1;\n    });\n    // Change link text.\n    $('.tabledrag-toggle-weight').text(Drupal.t('Show row weights'));\n  };\n\n  /**\n   * Show the columns containing weight/parent form elements.\n   *\n   * Undo hideColumns().\n   */\n  Drupal.tableDrag.prototype.showColumns = function () {\n    const $tables = $('table').findOnce('tabledrag');\n    // Show weight/parent cells and headers.\n    $tables.find('.tabledrag-hide').css('display', '');\n    // Hide TableDrag handles.\n    $tables.find('.tabledrag-handle').css('display', 'none');\n    // Increase the colspan for any columns where it was previously reduced.\n    $tables.find('.tabledrag-has-colspan').each(function () {\n      this.colSpan = this.colSpan + 1;\n    });\n    // Change link text.\n    $('.tabledrag-toggle-weight').text(Drupal.t('Hide row weights'));\n  };\n\n  /**\n   * Find the target used within a particular row and group.\n   *\n   * @param {string} group\n   *   Group selector.\n   * @param {HTMLElement} row\n   *   The row HTML element.\n   *\n   * @return {object}\n   *   The table row settings.\n   */\n  Drupal.tableDrag.prototype.rowSettings = function (group, row) {\n    const field = $(row).find(`.${group}`);\n    const tableSettingsGroup = this.tableSettings[group];\n    return Object.keys(tableSettingsGroup)\n      .map(delta => {\n        const targetClass = tableSettingsGroup[delta].target;\n        let rowSettings;\n        if (field.is(`.${targetClass}`)) {\n          // Return a copy of the row settings.\n          rowSettings = {};\n          Object.keys(tableSettingsGroup[delta]).forEach(n => {\n            rowSettings[n] = tableSettingsGroup[delta][n];\n          });\n        }\n        return rowSettings;\n      })\n      .filter(rowSetting => rowSetting)[0];\n  };\n\n  /**\n   * Take an item and add event handlers to make it become draggable.\n   *\n   * @param {HTMLElement} item\n   *   The item to add event handlers to.\n   */\n  Drupal.tableDrag.prototype.makeDraggable = function (item) {\n    const self = this;\n    const $item = $(item);\n    // Add a class to the title link.\n    $item\n      .find('td:first-of-type')\n      .find('a')\n      .addClass('menu-item__link');\n    // Create the handle.\n    const handleClasses = [\n      'tabledrag-handle',\n      'handle',\n      'cursor-move',\n      'align-middle',\n      'float-left'\n    ];\n    const handle = $(\n      `<span class=\"${handleClasses.join(' ')}\">${move}</span>`,\n    ).attr('title', Drupal.t('Drag to re-order'));\n    // Insert the handle after indentations (if any).\n    const $indentationLast = $item\n      .find('td:first-of-type')\n      .find('.js-indentation')\n      .eq(-1);\n    if ($indentationLast.length) {\n      $indentationLast.after(handle);\n      // Update the total width of indentation in this entire table.\n      self.indentCount = Math.max(\n        $item.find('.js-indentation').length,\n        self.indentCount,\n      );\n    } else {\n      $item\n        .find('td')\n        .eq(0)\n        .prepend(handle);\n    }\n\n    handle.on('mousedown touchstart pointerdown', event => {\n      event.preventDefault();\n      if (event.originalEvent.type === 'touchstart') {\n        event = event.originalEvent.touches[0];\n      }\n      self.dragStart(event, self, item);\n    });\n\n    // Prevent the anchor tag from jumping us to the top of the page.\n    handle.on('click', e => {\n      e.preventDefault();\n    });\n\n    // Set blur cleanup when a handle is focused.\n    handle.on('focus', () => {\n      self.safeBlur = true;\n    });\n\n    // On blur, fire the same function as a touchend/mouseup. This is used to\n    // update values after a row has been moved through the keyboard support.\n    handle.on('blur', event => {\n      if (self.rowObject && self.safeBlur) {\n        self.dropRow(event, self);\n      }\n    });\n\n    // Add arrow-key support to the handle.\n    handle.on('keydown', event => {\n      // If a rowObject doesn't yet exist and this isn't the tab key.\n      if (event.keyCode !== 9 && !self.rowObject) {\n        self.rowObject = new self.row(\n          item,\n          'keyboard',\n          self.indentEnabled,\n          self.maxDepth,\n          true,\n        );\n      }\n\n      let keyChange = false;\n      let groupHeight;\n\n      /* eslint-disable no-fallthrough */\n\n      switch (event.keyCode) {\n        // Left arrow.\n        case 37:\n        // Safari left arrow.\n        case 63234:\n          keyChange = true;\n          self.rowObject.indent(-1 * self.rtl);\n          break;\n\n        // Up arrow.\n        case 38:\n        // Safari up arrow.\n        case 63232: {\n          let $previousRow = $(self.rowObject.element).prev('tr:first-of-type');\n          let previousRow = $previousRow.get(0);\n          while (previousRow && $previousRow.is(':hidden')) {\n            $previousRow = $(previousRow).prev('tr:first-of-type');\n            previousRow = $previousRow.get(0);\n          }\n          if (previousRow) {\n            // Do not allow the onBlur cleanup.\n            self.safeBlur = false;\n            self.rowObject.direction = 'up';\n            keyChange = true;\n\n            if ($(item).is('.tabledrag-root')) {\n              // Swap with the previous top-level row.\n              groupHeight = 0;\n              while (\n                previousRow &&\n                $previousRow.find('.js-indentation').length\n              ) {\n                $previousRow = $(previousRow).prev('tr:first-of-type');\n                previousRow = $previousRow.get(0);\n                groupHeight += $previousRow.is(':hidden')\n                  ? 0\n                  : previousRow.offsetHeight;\n              }\n              if (previousRow) {\n                self.rowObject.swap('before', previousRow);\n                // No need to check for indentation, 0 is the only valid one.\n                window.scrollBy(0, -groupHeight);\n              }\n            } else if (\n              self.table.tBodies[0].rows[0] !== previousRow ||\n              $previousRow.is('.draggable')\n            ) {\n              // Swap with the previous row (unless previous row is the first\n              // one and undraggable).\n              self.rowObject.swap('before', previousRow);\n              self.rowObject.interval = null;\n              self.rowObject.indent(0);\n              window.scrollBy(0, -parseInt(item.offsetHeight, 10));\n            }\n            // Regain focus after the DOM manipulation.\n            handle.trigger('focus');\n          }\n          break;\n        }\n        // Right arrow.\n        case 39:\n        // Safari right arrow.\n        case 63235:\n          keyChange = true;\n          self.rowObject.indent(self.rtl);\n          break;\n\n        // Down arrow.\n        case 40:\n        // Safari down arrow.\n        case 63233: {\n          let $nextRow = $(self.rowObject.group)\n            .eq(-1)\n            .next('tr:first-of-type');\n          let nextRow = $nextRow.get(0);\n          while (nextRow && $nextRow.is(':hidden')) {\n            $nextRow = $(nextRow).next('tr:first-of-type');\n            nextRow = $nextRow.get(0);\n          }\n          if (nextRow) {\n            // Do not allow the onBlur cleanup.\n            self.safeBlur = false;\n            self.rowObject.direction = 'down';\n            keyChange = true;\n\n            if ($(item).is('.tabledrag-root')) {\n              // Swap with the next group (necessarily a top-level one).\n              groupHeight = 0;\n              const nextGroup = new self.row(\n                nextRow,\n                'keyboard',\n                self.indentEnabled,\n                self.maxDepth,\n                false,\n              );\n              if (nextGroup) {\n                $(nextGroup.group).each(function () {\n                  groupHeight += $(this).is(':hidden') ? 0 : this.offsetHeight;\n                });\n                const nextGroupRow = $(nextGroup.group)\n                  .eq(-1)\n                  .get(0);\n                self.rowObject.swap('after', nextGroupRow);\n                // No need to check for indentation, 0 is the only valid one.\n                window.scrollBy(0, parseInt(groupHeight, 10));\n              }\n            } else {\n              // Swap with the next row.\n              self.rowObject.swap('after', nextRow);\n              self.rowObject.interval = null;\n              self.rowObject.indent(0);\n              window.scrollBy(0, parseInt(item.offsetHeight, 10));\n            }\n            // Regain focus after the DOM manipulation.\n            handle.trigger('focus');\n          }\n          break;\n        }\n      }\n\n      /* eslint-enable no-fallthrough */\n\n      if (self.rowObject && self.rowObject.changed === true) {\n        $(item).addClass('drag');\n        if (self.oldRowElement) {\n          $(self.oldRowElement).removeClass('drag-previous');\n        }\n        self.oldRowElement = item;\n        if (self.striping === true) {\n          self.restripeTable();\n        }\n        self.onDrag();\n      }\n\n      // Returning false if we have an arrow key to prevent scrolling.\n      if (keyChange) {\n        return false;\n      }\n    });\n\n    // Compatibility addition, return false on keypress to prevent unwanted\n    // scrolling. IE and Safari will suppress scrolling on keydown, but all\n    // other browsers need to return false on keypress.\n    // http://www.quirksmode.org/js/keys.html\n    handle.on('keypress', event => {\n      /* eslint-disable no-fallthrough */\n\n      switch (event.keyCode) {\n        // Left arrow.\n        case 37:\n        // Up arrow.\n        case 38:\n        // Right arrow.\n        case 39:\n        // Down arrow.\n        case 40:\n          return false;\n      }\n\n      /* eslint-enable no-fallthrough */\n    });\n  };\n\n  /**\n   * Pointer event initiator, creates drag object and information.\n   *\n   * @param {jQuery.Event} event\n   *   The event object that trigger the drag.\n   * @param {Drupal.tableDrag} self\n   *   The drag handle.\n   * @param {HTMLElement} item\n   *   The item that that is being dragged.\n   */\n  Drupal.tableDrag.prototype.dragStart = function (event, self, item) {\n    // Create a new dragObject recording the pointer information.\n    self.dragObject = {};\n    self.dragObject.initOffset = self.getPointerOffset(item, event);\n    self.dragObject.initPointerCoords = self.pointerCoords(event);\n    if (self.indentEnabled) {\n      self.dragObject.indentPointerPos = self.dragObject.initPointerCoords;\n    }\n\n    // If there's a lingering row object from the keyboard, remove its focus.\n    if (self.rowObject) {\n      $(self.rowObject.element)\n        .find('a.tabledrag-handle')\n        .trigger('blur');\n    }\n\n    // Create a new rowObject for manipulation of this row.\n    self.rowObject = new self.row(\n      item,\n      'pointer',\n      self.indentEnabled,\n      self.maxDepth,\n      true,\n    );\n\n    // Save the position of the table.\n    self.table.topY = $(self.table).offset().top;\n    self.table.bottomY = self.table.topY + self.table.offsetHeight;\n\n    const dragClasses = [\n      'bg-cyan-100'\n    ];\n\n    // Add classes to the handle and row.\n    $(item).addClass(dragClasses.join(' '));\n\n    // Set the document to use the move cursor during drag.\n    $('body').addClass('drag');\n    if (self.oldRowElement) {\n      $(self.oldRowElement).removeClass('drag-previous');\n    }\n  };\n\n  /**\n   * Pointer movement handler, bound to document.\n   *\n   * @param {jQuery.Event} event\n   *   The pointer event.\n   * @param {Drupal.tableDrag} self\n   *   The tableDrag instance.\n   *\n   * @return {bool|undefined}\n   *   Undefined if no dragObject is defined, false otherwise.\n   */\n  Drupal.tableDrag.prototype.dragRow = function (event, self) {\n    if (self.dragObject) {\n      self.currentPointerCoords = self.pointerCoords(event);\n      const y = self.currentPointerCoords.y - self.dragObject.initOffset.y;\n      const x = self.currentPointerCoords.x - self.dragObject.initOffset.x;\n\n      // Check for row swapping and vertical scrolling.\n      if (y !== self.oldY) {\n        self.rowObject.direction = y > self.oldY ? 'down' : 'up';\n        // Update the old value.\n        self.oldY = y;\n        // Check if the window should be scrolled (and how fast).\n        const scrollAmount = self.checkScroll(self.currentPointerCoords.y);\n        // Stop any current scrolling.\n        clearInterval(self.scrollInterval);\n        // Continue scrolling if the mouse has moved in the scroll direction.\n        if (\n          (scrollAmount > 0 && self.rowObject.direction === 'down') ||\n          (scrollAmount < 0 && self.rowObject.direction === 'up')\n        ) {\n          self.setScroll(scrollAmount);\n        }\n\n        // If we have a valid target, perform the swap and restripe the table.\n        const currentRow = self.findDropTargetRow(x, y);\n        if (currentRow) {\n          if (self.rowObject.direction === 'down') {\n            self.rowObject.swap('after', currentRow, self);\n          } else {\n            self.rowObject.swap('before', currentRow, self);\n          }\n          if (self.striping === true) {\n            self.restripeTable();\n          }\n        }\n      }\n\n      // Similar to row swapping, handle indentations.\n      if (self.indentEnabled) {\n        const xDiff =\n          self.currentPointerCoords.x - self.dragObject.indentPointerPos.x;\n        // Set the number of indentations the pointer has been moved left or\n        // right.\n        const indentDiff = Math.round(xDiff / self.indentAmount);\n        // Indent the row with our estimated diff, which may be further\n        // restricted according to the rows around this row.\n        const indentChange = self.rowObject.indent(indentDiff);\n        // Update table and pointer indentations.\n        self.dragObject.indentPointerPos.x +=\n          self.indentAmount * indentChange * self.rtl;\n        self.indentCount = Math.max(self.indentCount, self.rowObject.indents);\n      }\n\n      return false;\n    }\n  };\n\n  /**\n   * Pointerup behavior.\n   *\n   * @param {jQuery.Event} event\n   *   The pointer event.\n   * @param {Drupal.tableDrag} self\n   *   The tableDrag instance.\n   */\n  Drupal.tableDrag.prototype.dropRow = function (event, self) {\n    let droppedRow;\n    let $droppedRow;\n\n    // Drop row functionality.\n    if (self.rowObject !== null) {\n      droppedRow = self.rowObject.element;\n      $droppedRow = $(droppedRow);\n      // The row is already in the right place so we just release it.\n      if (self.rowObject.changed === true) {\n        // Update the fields in the dropped row.\n        self.updateFields(droppedRow);\n\n        // If a setting exists for affecting the entire group, update all the\n        // fields in the entire dragged group.\n        Object.keys(self.tableSettings || {}).forEach(group => {\n          const rowSettings = self.rowSettings(group, droppedRow);\n          if (rowSettings.relationship === 'group') {\n            Object.keys(self.rowObject.children || {}).forEach(n => {\n              self.updateField(self.rowObject.children[n], group);\n            });\n          }\n        });\n\n        self.rowObject.markChanged();\n        if (self.changed === false) {\n          $(Drupal.theme('tableDragChangedWarning'))\n            .insertBefore(self.table)\n            .hide()\n            .fadeIn('slow');\n          self.changed = true;\n        }\n      }\n\n      if (self.indentEnabled) {\n        self.rowObject.removeIndentClasses();\n      }\n      if (self.oldRowElement) {\n        $(self.oldRowElement).removeClass('drag-previous');\n      }\n      $droppedRow.removeClass('drag').addClass('drag-previous');\n      self.oldRowElement = droppedRow;\n      self.onDrop();\n      self.rowObject = null;\n    }\n\n    // Functionality specific only to pointerup events.\n    if (self.dragObject !== null) {\n      self.dragObject = null;\n      $('body').removeClass('drag');\n      clearInterval(self.scrollInterval);\n    }\n  };\n\n  /**\n   * Get the coordinates from the event (allowing for browser differences).\n   *\n   * @param {jQuery.Event} event\n   *   The pointer event.\n   *\n   * @return {object}\n   *   An object with `x` and `y` keys indicating the position.\n   */\n  Drupal.tableDrag.prototype.pointerCoords = function (event) {\n    if (event.pageX || event.pageY) {\n      return { x: event.pageX, y: event.pageY };\n    }\n    return {\n      x: event.clientX + document.body.scrollLeft - document.body.clientLeft,\n      y: event.clientY + document.body.scrollTop - document.body.clientTop,\n    };\n  };\n\n  /**\n   * Get the event offset from the target element.\n   *\n   * Given a target element and a pointer event, get the event offset from that\n   * element. To do this we need the element's position and the target position.\n   *\n   * @param {HTMLElement} target\n   *   The target HTML element.\n   * @param {jQuery.Event} event\n   *   The pointer event.\n   *\n   * @return {object}\n   *   An object with `x` and `y` keys indicating the position.\n   */\n  Drupal.tableDrag.prototype.getPointerOffset = function (target, event) {\n    const docPos = $(target).offset();\n    const pointerPos = this.pointerCoords(event);\n    return { x: pointerPos.x - docPos.left, y: pointerPos.y - docPos.top };\n  };\n\n  /**\n   * Find the row the mouse is currently over.\n   *\n   * This row is then taken and swapped with the one being dragged.\n   *\n   * @param {number} x\n   *   The x coordinate of the mouse on the page (not the screen).\n   * @param {number} y\n   *   The y coordinate of the mouse on the page (not the screen).\n   *\n   * @return {*}\n   *   The drop target row, if found.\n   */\n  Drupal.tableDrag.prototype.findDropTargetRow = function (x, y) {\n    const rows = $(this.table.tBodies[0].rows).not(':hidden');\n    for (let n = 0; n < rows.length; n++) {\n      let row = rows[n];\n      let $row = $(row);\n      const rowY = $row.offset().top;\n      let rowHeight;\n      // Because Safari does not report offsetHeight on table rows, but does on\n      // table cells, grab the firstChild of the row and use that instead.\n      // http://jacob.peargrove.com/blog/2006/technical/table-row-offsettop-bug-in-safari.\n      if (row.offsetHeight === 0) {\n        rowHeight = parseInt(row.firstChild.offsetHeight, 10) / 2;\n      }\n      // Other browsers.\n      else {\n        rowHeight = parseInt(row.offsetHeight, 10) / 2;\n      }\n\n      // Because we always insert before, we need to offset the height a bit.\n      if (y > rowY - rowHeight && y < rowY + rowHeight) {\n        if (this.indentEnabled) {\n          // Check that this row is not a child of the row being dragged.\n          if (\n            Object.keys(this.rowObject.group).some(\n              o => this.rowObject.group[o] === row,\n            )\n          ) {\n            return null;\n          }\n        }\n        // Do not allow a row to be swapped with itself.\n        else if (row === this.rowObject.element) {\n          return null;\n        }\n\n        // Check that swapping with this row is allowed.\n        if (!this.rowObject.isValidSwap(row)) {\n          return null;\n        }\n\n        // We may have found the row the mouse just passed over, but it doesn't\n        // take into account hidden rows. Skip backwards until we find a\n        // draggable row.\n        while ($row.is(':hidden') && $row.prev('tr').is(':hidden')) {\n          $row = $row.prev('tr:first-of-type');\n          row = $row.get(0);\n        }\n        return row;\n      }\n    }\n    return null;\n  };\n\n  /**\n   * After the row is dropped, update the table fields.\n   *\n   * @param {HTMLElement} changedRow\n   *   DOM object for the row that was just dropped.\n   */\n  Drupal.tableDrag.prototype.updateFields = function (changedRow) {\n    Object.keys(this.tableSettings || {}).forEach(group => {\n      // Each group may have a different setting for relationship, so we find\n      // the source rows for each separately.\n      this.updateField(changedRow, group);\n    });\n  };\n\n  /**\n   * After the row is dropped, update a single table field.\n   *\n   * @param {HTMLElement} changedRow\n   *   DOM object for the row that was just dropped.\n   * @param {string} group\n   *   The settings group on which field updates will occur.\n   */\n  Drupal.tableDrag.prototype.updateField = function (changedRow, group) {\n    let rowSettings = this.rowSettings(group, changedRow);\n    const $changedRow = $(changedRow);\n    let sourceRow;\n    let $previousRow;\n    let previousRow;\n    let useSibling;\n    // Set the row as its own target.\n    if (\n      rowSettings.relationship === 'self' ||\n      rowSettings.relationship === 'group'\n    ) {\n      sourceRow = changedRow;\n    }\n    // Siblings are easy, check previous and next rows.\n    else if (rowSettings.relationship === 'sibling') {\n      $previousRow = $changedRow.prev('tr:first-of-type');\n      previousRow = $previousRow.get(0);\n      const $nextRow = $changedRow.next('tr:first-of-type');\n      const nextRow = $nextRow.get(0);\n      sourceRow = changedRow;\n      if (\n        $previousRow.is('.draggable') &&\n        $previousRow.find(`.${group}`).length\n      ) {\n        if (this.indentEnabled) {\n          if (\n            $previousRow.find('.js-indentations').length ===\n            $changedRow.find('.js-indentations').length\n          ) {\n            sourceRow = previousRow;\n          }\n        } else {\n          sourceRow = previousRow;\n        }\n      } else if (\n        $nextRow.is('.draggable') &&\n        $nextRow.find(`.${group}`).length\n      ) {\n        if (this.indentEnabled) {\n          if (\n            $nextRow.find('.js-indentations').length ===\n            $changedRow.find('.js-indentations').length\n          ) {\n            sourceRow = nextRow;\n          }\n        } else {\n          sourceRow = nextRow;\n        }\n      }\n    }\n    // Parents, look up the tree until we find a field not in this group.\n    // Go up as many parents as indentations in the changed row.\n    else if (rowSettings.relationship === 'parent') {\n      $previousRow = $changedRow.prev('tr');\n      previousRow = $previousRow;\n      while (\n        $previousRow.length &&\n        $previousRow.find('.js-indentation').length >= this.rowObject.indents\n      ) {\n        $previousRow = $previousRow.prev('tr');\n        previousRow = $previousRow;\n      }\n      // If we found a row.\n      if ($previousRow.length) {\n        sourceRow = $previousRow.get(0);\n      }\n      // Otherwise we went all the way to the left of the table without finding\n      // a parent, meaning this item has been placed at the root level.\n      else {\n        // Use the first row in the table as source, because it's guaranteed to\n        // be at the root level. Find the first item, then compare this row\n        // against it as a sibling.\n        sourceRow = $(this.table)\n          .find('tr.draggable:first-of-type')\n          .get(0);\n        if (sourceRow === this.rowObject.element) {\n          sourceRow = $(this.rowObject.group[this.rowObject.group.length - 1])\n            .next('tr.draggable')\n            .get(0);\n        }\n        useSibling = true;\n      }\n    }\n\n    // Because we may have moved the row from one category to another,\n    // take a look at our sibling and borrow its sources and targets.\n    this.copyDragClasses(sourceRow, changedRow, group);\n    rowSettings = this.rowSettings(group, changedRow);\n\n    // In the case that we're looking for a parent, but the row is at the top\n    // of the tree, copy our sibling's values.\n    if (useSibling) {\n      rowSettings.relationship = 'sibling';\n      rowSettings.source = rowSettings.target;\n    }\n\n    const targetClass = `.${rowSettings.target}`;\n    const targetElement = $changedRow.find(targetClass).get(0);\n\n    // Check if a target element exists in this row.\n    if (targetElement) {\n      const sourceClass = `.${rowSettings.source}`;\n      const sourceElement = $(sourceClass, sourceRow).get(0);\n      switch (rowSettings.action) {\n        case 'depth':\n          // Get the depth of the target row.\n          targetElement.value = $(sourceElement)\n            .closest('tr')\n            .find('.js-indentation').length;\n          break;\n\n        case 'match':\n          // Update the value.\n          targetElement.value = sourceElement.value;\n          break;\n\n        case 'order': {\n          const siblings = this.rowObject.findSiblings(rowSettings);\n          if ($(targetElement).is('select')) {\n            // Get a list of acceptable values.\n            const values = [];\n            $(targetElement)\n              .find('option')\n              .each(function () {\n                values.push(this.value);\n              });\n            const maxVal = values[values.length - 1];\n            // Populate the values in the siblings.\n            $(siblings)\n              .find(targetClass)\n              .each(function () {\n                // If there are more items than possible values, assign the\n                // maximum value to the row.\n                if (values.length > 0) {\n                  this.value = values.shift();\n                } else {\n                  this.value = maxVal;\n                }\n              });\n          } else {\n            // Assume a numeric input field.\n            let weight =\n              parseInt(\n                $(siblings[0])\n                  .find(targetClass)\n                  .val(),\n                10,\n              ) || 0;\n            $(siblings)\n              .find(targetClass)\n              .each(function () {\n                this.value = weight;\n                weight++;\n              });\n          }\n          break;\n        }\n      }\n    }\n  };\n\n  /**\n   * Copy all tableDrag related classes from one row to another.\n   *\n   * Copy all special tableDrag classes from one row's form elements to a\n   * different one, removing any special classes that the destination row\n   * may have had.\n   *\n   * @param {HTMLElement} sourceRow\n   *   The element for the source row.\n   * @param {HTMLElement} targetRow\n   *   The element for the target row.\n   * @param {string} group\n   *   The group selector.\n   */\n  Drupal.tableDrag.prototype.copyDragClasses = function (\n    sourceRow,\n    targetRow,\n    group,\n  ) {\n    const sourceElement = $(sourceRow).find(`.${group}`);\n    const targetElement = $(targetRow).find(`.${group}`);\n    if (sourceElement.length && targetElement.length) {\n      targetElement[0].className = sourceElement[0].className;\n    }\n  };\n\n  /**\n   * Check the suggested scroll of the table.\n   *\n   * @param {number} cursorY\n   *   The Y position of the cursor.\n   *\n   * @return {number}\n   *   The suggested scroll.\n   */\n  Drupal.tableDrag.prototype.checkScroll = function (cursorY) {\n    const de = document.documentElement;\n    const b = document.body;\n\n    const windowHeight =\n      window.innerHeight ||\n      (de.clientHeight && de.clientWidth !== 0\n        ? de.clientHeight\n        : b.offsetHeight);\n    this.windowHeight = windowHeight;\n    let scrollY;\n    if (document.all) {\n      scrollY = !de.scrollTop ? b.scrollTop : de.scrollTop;\n    } else {\n      scrollY = window.pageYOffset ? window.pageYOffset : window.scrollY;\n    }\n    this.scrollY = scrollY;\n    const trigger = this.scrollSettings.trigger;\n    let delta = 0;\n\n    // Return a scroll speed relative to the edge of the screen.\n    if (cursorY - scrollY > windowHeight - trigger) {\n      delta = trigger / (windowHeight + scrollY - cursorY);\n      delta = delta > 0 && delta < trigger ? delta : trigger;\n      return delta * this.scrollSettings.amount;\n    }\n    if (cursorY - scrollY < trigger) {\n      delta = trigger / (cursorY - scrollY);\n      delta = delta > 0 && delta < trigger ? delta : trigger;\n      return -delta * this.scrollSettings.amount;\n    }\n  };\n\n  /**\n   * Set the scroll for the table.\n   *\n   * @param {number} scrollAmount\n   *   The amount of scroll to apply to the window.\n   */\n  Drupal.tableDrag.prototype.setScroll = function (scrollAmount) {\n    const self = this;\n\n    this.scrollInterval = setInterval(() => {\n      // Update the scroll values stored in the object.\n      self.checkScroll(self.currentPointerCoords.y);\n      const aboveTable = self.scrollY > self.table.topY;\n      const belowTable = self.scrollY + self.windowHeight < self.table.bottomY;\n      if (\n        (scrollAmount > 0 && belowTable) ||\n        (scrollAmount < 0 && aboveTable)\n      ) {\n        window.scrollBy(0, scrollAmount);\n      }\n    }, this.scrollSettings.interval);\n  };\n\n  /**\n   * Command to restripe table properly.\n   */\n  Drupal.tableDrag.prototype.restripeTable = function () {\n    // :even and :odd are reversed because jQuery counts from 0 and\n    // we count from 1, so we're out of sync.\n    // Match immediate children of the parent element to allow nesting.\n    $(this.table)\n      .find('> tbody > tr.draggable, > tr.draggable')\n      .filter(':visible')\n      .filter(':odd')\n      .removeClass('odd')\n      .addClass('even')\n      .end()\n      .filter(':even')\n      .removeClass('even')\n      .addClass('odd');\n  };\n\n  /**\n   * Stub function. Allows a custom handler when a row begins dragging.\n   *\n   * @return {null}\n   *   Returns null when the stub function is used.\n   */\n  Drupal.tableDrag.prototype.onDrag = function () {\n    return null;\n  };\n\n  /**\n   * Stub function. Allows a custom handler when a row is dropped.\n   *\n   * @return {null}\n   *   Returns null when the stub function is used.\n   */\n  Drupal.tableDrag.prototype.onDrop = function () {\n    return null;\n  };\n\n  /**\n   * Constructor to make a new object to manipulate a table row.\n   *\n   * @param {HTMLElement} tableRow\n   *   The DOM element for the table row we will be manipulating.\n   * @param {string} method\n   *   The method in which this row is being moved. Either 'keyboard' or\n   *   'mouse'.\n   * @param {bool} indentEnabled\n   *   Whether the containing table uses indentations. Used for optimizations.\n   * @param {number} maxDepth\n   *   The maximum amount of indentations this row may contain.\n   * @param {bool} addClasses\n   *   Whether we want to add classes to this row to indicate child\n   *   relationships.\n   */\n  Drupal.tableDrag.prototype.row = function (\n    tableRow,\n    method,\n    indentEnabled,\n    maxDepth,\n    addClasses,\n  ) {\n    const $tableRow = $(tableRow);\n\n    this.element = tableRow;\n    this.method = method;\n    this.group = [tableRow];\n    this.groupDepth = $tableRow.find('.js-indentation').length;\n    this.changed = false;\n    this.table = $tableRow.closest('table')[0];\n    this.indentEnabled = indentEnabled;\n    this.maxDepth = maxDepth;\n    // Direction the row is being moved.\n    this.direction = '';\n    if (this.indentEnabled) {\n      this.indents = $tableRow.find('.js-indentation').length;\n      this.children = this.findChildren(addClasses);\n      this.group = $.merge(this.group, this.children);\n      // Find the depth of this entire group.\n      for (let n = 0; n < this.group.length; n++) {\n        this.groupDepth = Math.max(\n          $(this.group[n]).find('.js-indentation').length,\n          this.groupDepth,\n        );\n      }\n    }\n  };\n\n  /**\n   * Find all children of rowObject by indentation.\n   *\n   * @param {bool} addClasses\n   *   Whether we want to add classes to this row to indicate child\n   *   relationships.\n   *\n   * @return {Array}\n   *   An array of children of the row.\n   */\n  Drupal.tableDrag.prototype.row.prototype.findChildren = function (addClasses) {\n    const parentIndentation = this.indents;\n    let currentRow = $(this.element, this.table).next('tr.draggable');\n    const rows = [];\n    let child = 0;\n\n    function rowIndentation(indentNum, el) {\n      const self = $(el);\n      if (child === 1 && indentNum === parentIndentation) {\n        self.addClass('tree-child-first');\n      }\n      if (indentNum === parentIndentation) {\n        self.addClass('tree-child');\n      } else if (indentNum > parentIndentation) {\n        self.addClass('tree-child-horizontal');\n      }\n    }\n\n    while (currentRow.length) {\n      // A greater indentation indicates this is a child.\n      if (currentRow.find('.js-indentation').length > parentIndentation) {\n        child++;\n        rows.push(currentRow[0]);\n        if (addClasses) {\n          currentRow.find('.js-indentation').each(rowIndentation);\n        }\n      } else {\n        break;\n      }\n      currentRow = currentRow.next('tr.draggable');\n    }\n    if (addClasses && rows.length) {\n      $(rows[rows.length - 1])\n        .find(`.js-indentation:nth-child(${parentIndentation + 1})`)\n        .addClass('tree-child-last');\n    }\n    return rows;\n  };\n\n  /**\n   * Ensure that two rows are allowed to be swapped.\n   *\n   * @param {HTMLElement} row\n   *   DOM object for the row being considered for swapping.\n   *\n   * @return {bool}\n   *   Whether the swap is a valid swap or not.\n   */\n  Drupal.tableDrag.prototype.row.prototype.isValidSwap = function (row) {\n    const $row = $(row);\n    if (this.indentEnabled) {\n      let prevRow;\n      let nextRow;\n      if (this.direction === 'down') {\n        prevRow = row;\n        nextRow = $row.next('tr').get(0);\n      } else {\n        prevRow = $row.prev('tr').get(0);\n        nextRow = row;\n      }\n      this.interval = this.validIndentInterval(prevRow, nextRow);\n\n      // We have an invalid swap if the valid indentations interval is empty.\n      if (this.interval.min > this.interval.max) {\n        return false;\n      }\n    }\n\n    // Do not let an un-draggable first row have anything put before it.\n    if (this.table.tBodies[0].rows[0] === row && $row.is(':not(.draggable)')) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Perform the swap between two rows.\n   *\n   * @param {string} position\n   *   Whether the swap will occur 'before' or 'after' the given row.\n   * @param {HTMLElement} row\n   *   DOM element what will be swapped with the row group.\n   */\n  Drupal.tableDrag.prototype.row.prototype.swap = function (position, row) {\n    // Makes sure only DOM object are passed to Drupal.detachBehaviors().\n    this.group.forEach(row => {\n      Drupal.detachBehaviors(row, drupalSettings, 'move');\n    });\n    $(row)[position](this.group);\n    // Makes sure only DOM object are passed to Drupal.attachBehaviors()s.\n    this.group.forEach(row => {\n      Drupal.attachBehaviors(row, drupalSettings);\n    });\n    this.changed = true;\n    this.onSwap(row);\n  };\n\n  /**\n   * Determine the valid indentations interval for the row at a given position.\n   *\n   * @param {?HTMLElement} prevRow\n   *   DOM object for the row before the tested position\n   *   (or null for first position in the table).\n   * @param {?HTMLElement} nextRow\n   *   DOM object for the row after the tested position\n   *   (or null for last position in the table).\n   *\n   * @return {object}\n   *   An object with the keys `min` and `max` to indicate the valid indent\n   *   interval.\n   */\n  Drupal.tableDrag.prototype.row.prototype.validIndentInterval = function (\n    prevRow,\n    nextRow,\n  ) {\n    const $prevRow = $(prevRow);\n    let maxIndent;\n\n    // Minimum indentation:\n    // Do not orphan the next row.\n    const minIndent = nextRow ? $(nextRow).find('.js-indentation').length : 0;\n\n    // Maximum indentation:\n    if (\n      !prevRow ||\n      $prevRow.is(':not(.draggable)') ||\n      $(this.element).is('.tabledrag-root')\n    ) {\n      // Do not indent:\n      // - the first row in the table,\n      // - rows dragged below a non-draggable row,\n      // - 'root' rows.\n      maxIndent = 0;\n    } else {\n      // Do not go deeper than as a child of the previous row.\n      maxIndent =\n        $prevRow.find('.js-indentation').length +\n        ($prevRow.is('.tabledrag-leaf') ? 0 : 1);\n      // Limit by the maximum allowed depth for the table.\n      if (this.maxDepth) {\n        maxIndent = Math.min(\n          maxIndent,\n          this.maxDepth - (this.groupDepth - this.indents),\n        );\n      }\n    }\n\n    return { min: minIndent, max: maxIndent };\n  };\n\n  /**\n   * Indent a row within the legal bounds of the table.\n   *\n   * @param {number} indentDiff\n   *   The number of additional indentations proposed for the row (can be\n   *   positive or negative). This number will be adjusted to nearest valid\n   *   indentation level for the row.\n   *\n   * @return {number}\n   *   The number of indentations applied.\n   */\n  Drupal.tableDrag.prototype.row.prototype.indent = function (indentDiff) {\n    const $group = $(this.group);\n    // Determine the valid indentations interval if not available yet.\n    if (!this.interval) {\n      const prevRow = $(this.element)\n        .prev('tr')\n        .get(0);\n      const nextRow = $group\n        .eq(-1)\n        .next('tr')\n        .get(0);\n      this.interval = this.validIndentInterval(prevRow, nextRow);\n    }\n\n    // Adjust to the nearest valid indentation.\n    let indent = this.indents + indentDiff;\n    indent = Math.max(indent, this.interval.min);\n    indent = Math.min(indent, this.interval.max);\n    indentDiff = indent - this.indents;\n\n    for (let n = 1; n <= Math.abs(indentDiff); n++) {\n      // Add or remove indentations.\n      if (indentDiff < 0) {\n        $group.find('.js-indentation:first-of-type').remove();\n        this.indents--;\n      } else {\n        $group\n          .find('td:first-of-type')\n          .prepend(Drupal.theme('tableDragIndentation'));\n        this.indents++;\n      }\n    }\n    if (indentDiff) {\n      // Update indentation for this row.\n      this.changed = true;\n      this.groupDepth += indentDiff;\n      this.onIndent();\n    }\n\n    return indentDiff;\n  };\n\n  /**\n   * Find all siblings for a row.\n   *\n   * According to its subgroup or indentation. Note that the passed-in row is\n   * included in the list of siblings.\n   *\n   * @param {object} rowSettings\n   *   The field settings we're using to identify what constitutes a sibling.\n   *\n   * @return {Array}\n   *   An array of siblings.\n   */\n  Drupal.tableDrag.prototype.row.prototype.findSiblings = function (\n    rowSettings,\n  ) {\n    const siblings = [];\n    const directions = ['prev', 'next'];\n    const rowIndentation = this.indents;\n    let checkRowIndentation;\n    for (let d = 0; d < directions.length; d++) {\n      let checkRow = $(this.element)[directions[d]]();\n      while (checkRow.length) {\n        // Check that the sibling contains a similar target field.\n        if (checkRow.find(`.${rowSettings.target}`)) {\n          // Either add immediately if this is a flat table, or check to ensure\n          // that this row has the same level of indentation.\n          if (this.indentEnabled) {\n            checkRowIndentation = checkRow.find('.js-indentation').length;\n          }\n\n          if (!this.indentEnabled || checkRowIndentation === rowIndentation) {\n            siblings.push(checkRow[0]);\n          } else if (checkRowIndentation < rowIndentation) {\n            // No need to keep looking for siblings when we get to a parent.\n            break;\n          }\n        } else {\n          break;\n        }\n        checkRow = checkRow[directions[d]]();\n      }\n      // Since siblings are added in reverse order for previous, reverse the\n      // completed list of previous siblings. Add the current row and continue.\n      if (directions[d] === 'prev') {\n        siblings.reverse();\n        siblings.push(this.element);\n      }\n    }\n    return siblings;\n  };\n\n  /**\n   * Remove indentation helper classes from the current row group.\n   */\n  Drupal.tableDrag.prototype.row.prototype.removeIndentClasses = function () {\n    Object.keys(this.children || {}).forEach(n => {\n      $(this.children[n])\n        .find('.js-indentation')\n        .removeClass('tree-child')\n        .removeClass('tree-child-first')\n        .removeClass('tree-child-last')\n        .removeClass('tree-child-horizontal');\n    });\n  };\n\n  /**\n   * Add an asterisk or other marker to the changed row.\n   */\n  Drupal.tableDrag.prototype.row.prototype.markChanged = function () {\n    const marker = Drupal.theme('tableDragChangedMarker');\n    const cell = $(this.element).find('td:first-of-type');\n    if (cell.find('.tabledrag-changed').length === 0) {\n      cell.append(marker);\n    }\n  };\n\n  /**\n   * Stub function. Allows a custom handler when a row is indented.\n   *\n   * @return {null}\n   *   Returns null when the stub function is used.\n   */\n  Drupal.tableDrag.prototype.row.prototype.onIndent = function () {\n    return null;\n  };\n\n  /**\n   * Stub function. Allows a custom handler when a row is swapped.\n   *\n   * @param {HTMLElement} swappedRow\n   *   The element for the swapped row.\n   *\n   * @return {null}\n   *   Returns null when the stub function is used.\n   */\n  Drupal.tableDrag.prototype.row.prototype.onSwap = function (swappedRow) {\n    return null;\n  };\n\n  $.extend(\n    Drupal.theme,\n    /** @lends Drupal.theme */ {\n      /**\n       * @return {string}\n       *  Markup for the marker.\n       */\n      tableDragChangedMarker() {\n        const markerClasses = [\n          'tabledrag-changed',\n          'font-bold',\n        ];\n\n        return `\n        <span title=\"${Drupal.t('Changed')}\" class=\"${markerClasses.join(' ')}\">${info}</span>`;\n      },\n\n      /**\n       * @return {string}\n       *   Markup for the indentation.\n       */\n      tableDragIndentation() {\n        return '<div class=\"js-indentation indentation\">&nbsp;</div>';\n      },\n\n      /**\n       * @return {string}\n       *   Markup for the warning.\n       */\n      tableDragChangedWarning() {\n        const warningClasses = [\n          ''\n        ];\n\n        return `\n        <div role=\"alert\" class=\"mb-1 border-l-8 p-4 bg-orange-100 border-orange-500 text-orange-900\">\n          <div class=\"flex items-center\">\n            ${Drupal.theme('tableDragChangedMarker')}\n            <div class=\"mx-3\">\n              ${Drupal.t('You have unsaved changes.')}\n            </div>\n          </div>\n        </div>`;\n      },\n    },\n  );\n})(jQuery, Drupal, drupalSettings);\n"],"sourceRoot":""}