diff --git a/src/Form/ContentAccessPageForm.php b/src/Form/ContentAccessPageForm.php
index 986c73e..565a76c 100644
--- a/src/Form/ContentAccessPageForm.php
+++ b/src/Form/ContentAccessPageForm.php
@@ -81,28 +81,6 @@ class ContentAccessPageForm extends FormBase {
    * {@inheritdoc}
    */
   public function buildForm(array $form, FormStateInterface $form_state, NodeInterface $node = NULL) {
-    $defaults = [];
-
-    foreach (_content_access_get_operations() as $op => $label) {
-      $defaults[$op] = content_access_per_node_setting($op, $node);
-    }
-
-    $this->roleBasedForm($form, $defaults, $node->getType());
-
-    // Add an after_build handler that disables checkboxes, which are enforced
-    // by permissions.
-    $build_info = $form_state->getBuildInfo();
-    $build_info['files'][] = [
-      'module' => 'content_access',
-      'type' => 'inc',
-      'name' => 'content_access.admin',
-    ];
-    $form_state->setBuildInfo($build_info);
-
-    foreach (['update', 'update_own', 'delete', 'delete_own'] as $op) {
-      $form['per_role'][$op]['#process'][] = '::forcePermissions';
-    }
-
     // ACL form.
     if ($this->moduleHandler->moduleExists('acl')) {
       // This is disabled when there is no node passed.
@@ -162,15 +140,6 @@ class ContentAccessPageForm extends FormBase {
     $values = $form_state->getValues();
     $node = $storage['node'];
 
-    foreach (_content_access_get_operations() as $op => $label) {
-      // Set the settings so that further calls will return this settings.
-      $filtered_values = array_filter($values[$op]);
-      $settings[$op] = array_keys($filtered_values);
-    }
-
-    // Save per-node settings.
-    content_access_save_per_node_settings($node, $settings);
-
     if ($this->moduleHandler->moduleExists('acl')) {
       foreach (['view', 'update', 'delete'] as $op) {
         $values = $form_state->getValues();
