diff --git a/content_access.module b/content_access.module
index e25b3be..82b69b1 100644
--- a/content_access.module
+++ b/content_access.module
@@ -264,6 +264,7 @@ function content_access_available_settings() {
     'update_own',
     'delete_own',
     'per_node',
+    'per_node_roles',
     'priority',
   ];
 }
diff --git a/src/Form/ContentAccessAdminSettingsForm.php b/src/Form/ContentAccessAdminSettingsForm.php
index 1bccc29..51fe221 100644
--- a/src/Form/ContentAccessAdminSettingsForm.php
+++ b/src/Form/ContentAccessAdminSettingsForm.php
@@ -92,6 +92,17 @@ class ContentAccessAdminSettingsForm extends FormBase {
       '#title' => $this->t('Enable per content node access control settings'),
       '#default_value' => content_access_get_settings('per_node', $node_type),
     ];
+    if ($this->moduleHandler->moduleExists('acl')) {
+      $form['node']['per_node_roles'] = [
+        '#type' => 'checkbox',
+        '#title' => $this->t('Enable role-based access control settings on each node.'),
+        '#default_value' => content_access_get_settings('per_node_roles', $node_type),
+        '#states' => [
+          'visible' => [':input[name="per_node"]' => ['checked' => true],
+          ],
+        ],
+      ];
+    }
 
     $form['advanced'] = [
       '#type' => 'fieldset',
diff --git a/src/Form/ContentAccessPageForm.php b/src/Form/ContentAccessPageForm.php
index cc1d490..80ecadb 100644
--- a/src/Form/ContentAccessPageForm.php
+++ b/src/Form/ContentAccessPageForm.php
@@ -81,26 +81,31 @@ class ContentAccessPageForm extends FormBase {
    * {@inheritdoc}
    */
   public function buildForm(array $form, FormStateInterface $form_state, NodeInterface $node = NULL) {
-    $defaults = [];
+    $config = \Drupal::configFactory()->getEditable('content_access.settings');
+    $settings = unserialize($config->get(implode('.', ['content_access_node_type', $node->getType()])));
 
-    foreach (_content_access_get_operations() as $op => $label) {
-      $defaults[$op] = content_access_per_node_setting($op, $node);
-    }
-
-    $this->roleBasedForm($form, $defaults, $node->getType());
-
-    // Add an after_build handler that disables checkboxes, which are enforced
-    // by permissions.
-    $build_info = $form_state->getBuildInfo();
-    $build_info['files'][] = [
-      'module' => 'content_access',
-      'type' => 'inc',
-      'name' => 'content_access.admin',
-    ];
-    $form_state->setBuildInfo($build_info);
+    if (isset($settings['per_node_roles']) && $settings['per_node_roles']) {
+      $defaults = [];
 
-    foreach (['update', 'update_own', 'delete', 'delete_own'] as $op) {
-      $form['per_role'][$op]['#process'][] = '::forcePermissions';
+      foreach (_content_access_get_operations() as $op => $label) {
+        $defaults[$op] = content_access_per_node_setting($op, $node);
+      }
+  
+      $this->roleBasedForm($form, $defaults, $node->getType());
+  
+      // Add an after_build handler that disables checkboxes, which are enforced
+      // by permissions.
+      $build_info = $form_state->getBuildInfo();
+      $build_info['files'][] = [
+        'module' => 'content_access',
+        'type' => 'inc',
+        'name' => 'content_access.admin',
+      ];
+      $form_state->setBuildInfo($build_info);
+  
+      foreach (['update', 'update_own', 'delete', 'delete_own'] as $op) {
+        $form['per_role'][$op]['#process'][] = '::forcePermissions';
+      }
     }
 
     // ACL form.
@@ -157,19 +162,25 @@ class ContentAccessPageForm extends FormBase {
    * {@inheritdoc}
    */
   public function submitForm(array &$form, FormStateInterface $form_state) {
-    $settings = [];
     $storage = $form_state->getStorage();
     $values = $form_state->getValues();
     $node = $storage['node'];
 
-    foreach (_content_access_get_operations() as $op => $label) {
-      // Set the settings so that further calls will return this settings.
-      $filtered_values = array_filter($values[$op]);
-      $settings[$op] = array_keys($filtered_values);
-    }
+    $config = \Drupal::configFactory()->getEditable('content_access.settings');
+    $settings = unserialize($config->get(implode('.', ['content_access_node_type', $node->getType()])));
+
+    if (isset($settings['per_node_roles']) && $settings['per_node_roles']) {
+      $settings = [];
 
-    // Save per-node settings.
-    content_access_save_per_node_settings($node, $settings);
+      foreach (_content_access_get_operations() as $op => $label) {
+        // Set the settings so that further calls will return this settings.
+        $filtered_values = array_filter($values[$op]);
+        $settings[$op] = array_keys($filtered_values);
+      }
+
+      // Save per-node settings.
+      content_access_save_per_node_settings($node, $settings);
+    }
 
     if ($this->moduleHandler->moduleExists('acl')) {
       foreach (['view', 'update', 'delete'] as $op) {
